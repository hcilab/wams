{"mappings":"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","sources":["<anon>","src/client.js","src/client/ClientController.js","node_modules/socket.io-client/build/esm/index.js","node_modules/socket.io-client/build/esm/url.js","node_modules/engine.io-client/build/esm/index.js","node_modules/engine.io-client/build/esm/socket.js","node_modules/engine.io-client/build/esm/transports/index.js","node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/engine.io-client/build/esm/transport.js","node_modules/engine.io-parser/build/esm/index.js","node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/engine.io-parser/build/esm/commons.js","node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/@socket.io/component-emitter/index.mjs","node_modules/engine.io-client/build/esm/util.js","node_modules/engine.io-client/build/esm/globalThis.browser.js","node_modules/engine.io-client/build/esm/contrib/yeast.js","node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/socket.io-client/build/esm/manager.js","node_modules/socket.io-client/build/esm/socket.js","node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io-client/build/esm/on.js","node_modules/socket.io-client/build/esm/contrib/backo2.js","src/shared.js","src/shared/IdStamper.js","src/shared/Message.js","src/shared/bases.js","src/shared/utilities.js","src/shared/Polygon2D.js","src/shared/Point2D.js","src/shared/Rectangle.js","src/shared/RoundedLine.js","src/shared/Circle.js","src/shared/Oval.js","src/client/Interactor.js","node_modules/westures/dist/index.js","node_modules/westures/dist/core/dist/index.js","node_modules/westures/dist/core/dist/src/Gesture.js","node_modules/westures/dist/core/dist/src/Input.js","node_modules/westures/dist/core/dist/src/PointerData.js","node_modules/westures/dist/core/dist/src/Point2D.js","node_modules/westures/dist/core/dist/src/constants.js","node_modules/westures/dist/core/dist/src/utils.js","node_modules/westures/dist/core/dist/src/Region.js","node_modules/westures/dist/core/dist/src/State.js","node_modules/westures/dist/core/dist/src/Smoothable.js","node_modules/westures/dist/src/Pan.js","node_modules/westures/dist/src/Pinch.js","node_modules/westures/dist/src/Press.js","node_modules/westures/dist/src/Pull.js","node_modules/westures/dist/src/Pivotable.js","node_modules/westures/dist/src/Rotate.js","node_modules/westures/dist/src/Swipe.js","node_modules/westures/dist/src/Swivel.js","node_modules/westures/dist/src/Tap.js","node_modules/westures/dist/src/Track.js","src/client/ClientModel.js","src/client/ClientElement.js","src/client/ClientImage.js","src/client/ClientItem.js","node_modules/canvas-sequencer/dist/index.js","node_modules/canvas-sequencer/dist/src/CanvasSequence.js","node_modules/canvas-sequencer/dist/src/CanvasAtom.js","node_modules/canvas-sequencer/dist/src/CanvasBlueprint.js","src/client/ShadowView.js","src/client/ClientView.js"],"sourcesContent":["(() => {\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n/*\n * WAMS code to be executed in the client browser.\n */ /**\n * This file defines the entry point for the client side of a WAMS application.\n *\n * <br>\n * <img\n * src =\n * \"https://raw.githubusercontent.com/wiki/hcilab/wams/graphs/client.png\"\n * style = \"max-height: 200px;\"\n * >\n *\n * @module client\n */ \"use strict\";\nvar $81586d39ed578c8f$exports = {};\n\"use strict\";\nconst $7bf7ff34ad415631$export$c169aefb7330cccb = Object.create(null); // no Map = no polyfill\n$7bf7ff34ad415631$export$c169aefb7330cccb[\"open\"] = \"0\";\n$7bf7ff34ad415631$export$c169aefb7330cccb[\"close\"] = \"1\";\n$7bf7ff34ad415631$export$c169aefb7330cccb[\"ping\"] = \"2\";\n$7bf7ff34ad415631$export$c169aefb7330cccb[\"pong\"] = \"3\";\n$7bf7ff34ad415631$export$c169aefb7330cccb[\"message\"] = \"4\";\n$7bf7ff34ad415631$export$c169aefb7330cccb[\"upgrade\"] = \"5\";\n$7bf7ff34ad415631$export$c169aefb7330cccb[\"noop\"] = \"6\";\nconst $7bf7ff34ad415631$export$47791e8004edd485 = Object.create(null);\nObject.keys($7bf7ff34ad415631$export$c169aefb7330cccb).forEach((key)=>{\n    $7bf7ff34ad415631$export$47791e8004edd485[$7bf7ff34ad415631$export$c169aefb7330cccb[key]] = key;\n});\nconst $7bf7ff34ad415631$export$c718b5840781f8a7 = {\n    type: \"error\",\n    data: \"parser error\"\n};\n\n\nconst $561487b8227635b6$var$withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\";\nconst $561487b8227635b6$var$withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst $561487b8227635b6$var$isView = (obj)=>{\n    return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst $561487b8227635b6$var$encodePacket = ({ type: type , data: data  }, supportsBinary, callback)=>{\n    if ($561487b8227635b6$var$withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) return callback(data);\n        else return $561487b8227635b6$var$encodeBlobAsBase64(data, callback);\n    } else if ($561487b8227635b6$var$withNativeArrayBuffer && (data instanceof ArrayBuffer || $561487b8227635b6$var$isView(data))) {\n        if (supportsBinary) return callback(data);\n        else return $561487b8227635b6$var$encodeBlobAsBase64(new Blob([\n            data\n        ]), callback);\n    }\n    // plain string\n    return callback((0, $7bf7ff34ad415631$export$c169aefb7330cccb)[type] + (data || \"\"));\n};\nconst $561487b8227635b6$var$encodeBlobAsBase64 = (data, callback)=>{\n    const fileReader = new FileReader();\n    fileReader.onload = function() {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nvar $561487b8227635b6$export$2e2bcd8739ae039 = $561487b8227635b6$var$encodePacket;\n\n\n\n// imported from https://github.com/socketio/base64-arraybuffer\nconst $884a652736e4e341$var$chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n// Use a lookup table to find the index.\nconst $884a652736e4e341$var$lookup = typeof Uint8Array === \"undefined\" ? [] : new Uint8Array(256);\nfor(let i = 0; i < $884a652736e4e341$var$chars.length; i++)$884a652736e4e341$var$lookup[$884a652736e4e341$var$chars.charCodeAt(i)] = i;\nconst $884a652736e4e341$export$c564cdbbe6da493 = (arraybuffer)=>{\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = \"\";\n    for(i = 0; i < len; i += 3){\n        base64 += $884a652736e4e341$var$chars[bytes[i] >> 2];\n        base64 += $884a652736e4e341$var$chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64 += $884a652736e4e341$var$chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64 += $884a652736e4e341$var$chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) base64 = base64.substring(0, base64.length - 1) + \"=\";\n    else if (len % 3 === 1) base64 = base64.substring(0, base64.length - 2) + \"==\";\n    return base64;\n};\nconst $884a652736e4e341$export$2f872c0f2117be69 = (base64)=>{\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === \"=\") {\n        bufferLength--;\n        if (base64[base64.length - 2] === \"=\") bufferLength--;\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for(i = 0; i < len; i += 4){\n        encoded1 = $884a652736e4e341$var$lookup[base64.charCodeAt(i)];\n        encoded2 = $884a652736e4e341$var$lookup[base64.charCodeAt(i + 1)];\n        encoded3 = $884a652736e4e341$var$lookup[base64.charCodeAt(i + 2)];\n        encoded4 = $884a652736e4e341$var$lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return arraybuffer;\n};\n\n\nconst $7c79ed06fd95f9ff$var$withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst $7c79ed06fd95f9ff$var$decodePacket = (encodedPacket, binaryType)=>{\n    if (typeof encodedPacket !== \"string\") return {\n        type: \"message\",\n        data: $7c79ed06fd95f9ff$var$mapBinary(encodedPacket, binaryType)\n    };\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") return {\n        type: \"message\",\n        data: $7c79ed06fd95f9ff$var$decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n    const packetType = (0, $7bf7ff34ad415631$export$47791e8004edd485)[type];\n    if (!packetType) return 0, $7bf7ff34ad415631$export$c718b5840781f8a7;\n    return encodedPacket.length > 1 ? {\n        type: (0, $7bf7ff34ad415631$export$47791e8004edd485)[type],\n        data: encodedPacket.substring(1)\n    } : {\n        type: (0, $7bf7ff34ad415631$export$47791e8004edd485)[type]\n    };\n};\nconst $7c79ed06fd95f9ff$var$decodeBase64Packet = (data, binaryType)=>{\n    if ($7c79ed06fd95f9ff$var$withNativeArrayBuffer) {\n        const decoded = (0, $884a652736e4e341$export$2f872c0f2117be69)(data);\n        return $7c79ed06fd95f9ff$var$mapBinary(decoded, binaryType);\n    } else return {\n        base64: true,\n        data: data\n    }; // fallback for old browsers\n};\nconst $7c79ed06fd95f9ff$var$mapBinary = (data, binaryType)=>{\n    switch(binaryType){\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([\n                data\n            ]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nvar $7c79ed06fd95f9ff$export$2e2bcd8739ae039 = $7c79ed06fd95f9ff$var$decodePacket;\n\n\nconst $4dc1a5a6e008a7e7$var$SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst $4dc1a5a6e008a7e7$export$144d64fe58dad441 = (packets, callback)=>{\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i)=>{\n        // force base64 encoding for binary packets\n        (0, $561487b8227635b6$export$2e2bcd8739ae039)(packet, false, (encodedPacket)=>{\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) callback(encodedPackets.join($4dc1a5a6e008a7e7$var$SEPARATOR));\n        });\n    });\n};\nconst $4dc1a5a6e008a7e7$export$d10cc2e7f7566a2d = (encodedPayload, binaryType)=>{\n    const encodedPackets = encodedPayload.split($4dc1a5a6e008a7e7$var$SEPARATOR);\n    const packets = [];\n    for(let i = 0; i < encodedPackets.length; i++){\n        const decodedPacket = (0, $7c79ed06fd95f9ff$export$2e2bcd8739ae039)(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") break;\n    }\n    return packets;\n};\nconst $4dc1a5a6e008a7e7$export$a51d6b395ff4c65a = 4;\n\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */ function $457c1af18044583a$export$4293555f241ae35a(obj) {\n    if (obj) return $457c1af18044583a$var$mixin(obj);\n}\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */ function $457c1af18044583a$var$mixin(obj) {\n    for(var key in $457c1af18044583a$export$4293555f241ae35a.prototype)obj[key] = $457c1af18044583a$export$4293555f241ae35a.prototype[key];\n    return obj;\n}\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */ $457c1af18044583a$export$4293555f241ae35a.prototype.on = $457c1af18044583a$export$4293555f241ae35a.prototype.addEventListener = function(event, fn) {\n    this._callbacks = this._callbacks || {};\n    (this._callbacks[\"$\" + event] = this._callbacks[\"$\" + event] || []).push(fn);\n    return this;\n};\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */ $457c1af18044583a$export$4293555f241ae35a.prototype.once = function(event, fn) {\n    function on() {\n        this.off(event, on);\n        fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n};\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */ $457c1af18044583a$export$4293555f241ae35a.prototype.off = $457c1af18044583a$export$4293555f241ae35a.prototype.removeListener = $457c1af18044583a$export$4293555f241ae35a.prototype.removeAllListeners = $457c1af18044583a$export$4293555f241ae35a.prototype.removeEventListener = function(event, fn) {\n    this._callbacks = this._callbacks || {};\n    // all\n    if (0 == arguments.length) {\n        this._callbacks = {};\n        return this;\n    }\n    // specific event\n    var callbacks = this._callbacks[\"$\" + event];\n    if (!callbacks) return this;\n    // remove all handlers\n    if (1 == arguments.length) {\n        delete this._callbacks[\"$\" + event];\n        return this;\n    }\n    // remove specific handler\n    var cb;\n    for(var i = 0; i < callbacks.length; i++){\n        cb = callbacks[i];\n        if (cb === fn || cb.fn === fn) {\n            callbacks.splice(i, 1);\n            break;\n        }\n    }\n    // Remove event specific arrays for event types that no\n    // one is subscribed for to avoid memory leak.\n    if (callbacks.length === 0) delete this._callbacks[\"$\" + event];\n    return this;\n};\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */ $457c1af18044583a$export$4293555f241ae35a.prototype.emit = function(event) {\n    this._callbacks = this._callbacks || {};\n    var args = new Array(arguments.length - 1), callbacks = this._callbacks[\"$\" + event];\n    for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    if (callbacks) {\n        callbacks = callbacks.slice(0);\n        for(var i = 0, len = callbacks.length; i < len; ++i)callbacks[i].apply(this, args);\n    }\n    return this;\n};\n// alias used for reserved events (protected method)\n$457c1af18044583a$export$4293555f241ae35a.prototype.emitReserved = $457c1af18044583a$export$4293555f241ae35a.prototype.emit;\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */ $457c1af18044583a$export$4293555f241ae35a.prototype.listeners = function(event) {\n    this._callbacks = this._callbacks || {};\n    return this._callbacks[\"$\" + event] || [];\n};\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */ $457c1af18044583a$export$4293555f241ae35a.prototype.hasListeners = function(event) {\n    return !!this.listeners(event).length;\n};\n\n\nconst $24ed6d94f3b59450$export$394f9358f6231289 = (()=>{\n    if (typeof self !== \"undefined\") return self;\n    else if (typeof window !== \"undefined\") return window;\n    else return Function(\"return this\")();\n})();\n\n\nfunction $fcbdbaa3cd961e27$export$357523c63a2253b9(obj, ...attr) {\n    return attr.reduce((acc, k)=>{\n        if (obj.hasOwnProperty(k)) acc[k] = obj[k];\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst $fcbdbaa3cd961e27$var$NATIVE_SET_TIMEOUT = (0, $24ed6d94f3b59450$export$394f9358f6231289).setTimeout;\nconst $fcbdbaa3cd961e27$var$NATIVE_CLEAR_TIMEOUT = (0, $24ed6d94f3b59450$export$394f9358f6231289).clearTimeout;\nfunction $fcbdbaa3cd961e27$export$2f67576668b97183(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = $fcbdbaa3cd961e27$var$NATIVE_SET_TIMEOUT.bind((0, $24ed6d94f3b59450$export$394f9358f6231289));\n        obj.clearTimeoutFn = $fcbdbaa3cd961e27$var$NATIVE_CLEAR_TIMEOUT.bind((0, $24ed6d94f3b59450$export$394f9358f6231289));\n    } else {\n        obj.setTimeoutFn = (0, $24ed6d94f3b59450$export$394f9358f6231289).setTimeout.bind((0, $24ed6d94f3b59450$export$394f9358f6231289));\n        obj.clearTimeoutFn = (0, $24ed6d94f3b59450$export$394f9358f6231289).clearTimeout.bind((0, $24ed6d94f3b59450$export$394f9358f6231289));\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst $fcbdbaa3cd961e27$var$BASE64_OVERHEAD = 1.33;\nfunction $fcbdbaa3cd961e27$export$a48f0734ac7c2329(obj) {\n    if (typeof obj === \"string\") return $fcbdbaa3cd961e27$var$utf8Length(obj);\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * $fcbdbaa3cd961e27$var$BASE64_OVERHEAD);\n}\nfunction $fcbdbaa3cd961e27$var$utf8Length(str) {\n    let c = 0, length = 0;\n    for(let i = 0, l = str.length; i < l; i++){\n        c = str.charCodeAt(i);\n        if (c < 0x80) length += 1;\n        else if (c < 0x800) length += 2;\n        else if (c < 0xd800 || c >= 0xe000) length += 3;\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n\n\nclass $970e2439289df85f$var$TransportError extends Error {\n    constructor(reason, description, context){\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nclass $970e2439289df85f$export$86495b081fef8e52 extends (0, $457c1af18044583a$export$4293555f241ae35a) {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */ constructor(opts){\n        super();\n        this.writable = false;\n        (0, $fcbdbaa3cd961e27$export$2f67576668b97183)(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */ onError(reason, description, context) {\n        super.emitReserved(\"error\", new $970e2439289df85f$var$TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */ open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */ close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */ send(packets) {\n        if (this.readyState === \"open\") this.write(packets);\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */ onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */ onData(data) {\n        const packet = (0, $7c79ed06fd95f9ff$export$2e2bcd8739ae039)(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */ onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */ onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */ pause(onPause) {}\n}\n\n\n// imported from https://github.com/unshiftio/yeast\n\"use strict\";\nconst $b0be4220a43aac53$var$alphabet = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\".split(\"\"), $b0be4220a43aac53$var$length = 64, $b0be4220a43aac53$var$map = {};\nlet $b0be4220a43aac53$var$seed = 0, $b0be4220a43aac53$var$i = 0, $b0be4220a43aac53$var$prev;\nfunction $b0be4220a43aac53$export$c564cdbbe6da493(num) {\n    let encoded = \"\";\n    do {\n        encoded = $b0be4220a43aac53$var$alphabet[num % $b0be4220a43aac53$var$length] + encoded;\n        num = Math.floor(num / $b0be4220a43aac53$var$length);\n    }while (num > 0);\n    return encoded;\n}\nfunction $b0be4220a43aac53$export$2f872c0f2117be69(str) {\n    let decoded = 0;\n    for($b0be4220a43aac53$var$i = 0; $b0be4220a43aac53$var$i < str.length; $b0be4220a43aac53$var$i++)decoded = decoded * $b0be4220a43aac53$var$length + $b0be4220a43aac53$var$map[str.charAt($b0be4220a43aac53$var$i)];\n    return decoded;\n}\nfunction $b0be4220a43aac53$export$5bb64b92cb4135a() {\n    const now = $b0be4220a43aac53$export$c564cdbbe6da493(+new Date());\n    if (now !== $b0be4220a43aac53$var$prev) return $b0be4220a43aac53$var$seed = 0, $b0be4220a43aac53$var$prev = now;\n    return now + \".\" + $b0be4220a43aac53$export$c564cdbbe6da493($b0be4220a43aac53$var$seed++);\n}\n//\n// Map each character to its index.\n//\nfor(; $b0be4220a43aac53$var$i < $b0be4220a43aac53$var$length; $b0be4220a43aac53$var$i++)$b0be4220a43aac53$var$map[$b0be4220a43aac53$var$alphabet[$b0be4220a43aac53$var$i]] = $b0be4220a43aac53$var$i;\n\n\n// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */ function $204e8548e3057537$export$c564cdbbe6da493(obj) {\n    let str = \"\";\n    for(let i in obj)if (obj.hasOwnProperty(i)) {\n        if (str.length) str += \"&\";\n        str += encodeURIComponent(i) + \"=\" + encodeURIComponent(obj[i]);\n    }\n    return str;\n}\nfunction $204e8548e3057537$export$2f872c0f2117be69(qs) {\n    let qry = {};\n    let pairs = qs.split(\"&\");\n    for(let i = 0, l = pairs.length; i < l; i++){\n        let pair = pairs[i].split(\"=\");\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n\n\n\n// browser shim for xmlhttprequest module\n// imported from https://github.com/component/has-cors\nlet $d1e121273de60dfc$var$value = false;\ntry {\n    $d1e121273de60dfc$var$value = typeof XMLHttpRequest !== \"undefined\" && \"withCredentials\" in new XMLHttpRequest();\n} catch (err) {\n// if XMLHttp support is disabled in IE then it will throw\n// when trying to create\n}\nconst $d1e121273de60dfc$export$5235bbd4a1ef06e = $d1e121273de60dfc$var$value;\n\n\n\nfunction $0e9540b6c40bc56b$export$a2d42eb087c10497(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || (0, $d1e121273de60dfc$export$5235bbd4a1ef06e))) return new XMLHttpRequest();\n    } catch (e) {}\n    if (!xdomain) try {\n        return new (0, $24ed6d94f3b59450$export$394f9358f6231289)[[\n            \"Active\"\n        ].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n    } catch (e) {}\n}\n\n\n\n\n\nfunction $f00a2be7170d46e1$var$empty() {}\nconst $f00a2be7170d46e1$var$hasXHR2 = function() {\n    const xhr = new (0, $0e9540b6c40bc56b$export$a2d42eb087c10497)({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n}();\nclass $f00a2be7170d46e1$export$265ee5eefd4c309b extends (0, $970e2439289df85f$export$86495b081fef8e52) {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */ constructor(opts){\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) port = isSSL ? \"443\" : \"80\";\n            this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */ const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = $f00a2be7170d46e1$var$hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */ doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */ pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = ()=>{\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function() {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function() {\n                    --total || pause();\n                });\n            }\n        } else pause();\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */ poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */ onData(data) {\n        const callback = (packet)=>{\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") this.onOpen();\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({\n                    description: \"transport closed by the server\"\n                });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        (0, $4dc1a5a6e008a7e7$export$d10cc2e7f7566a2d)(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) this.poll();\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */ doClose() {\n        const close = ()=>{\n            this.write([\n                {\n                    type: \"close\"\n                }\n            ]);\n        };\n        if (\"open\" === this.readyState) close();\n        else // in case we're trying to close while\n        // handshaking is in progress (GH-164)\n        this.once(\"open\", close);\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */ write(packets) {\n        this.writable = false;\n        (0, $4dc1a5a6e008a7e7$export$144d64fe58dad441)(packets, (data)=>{\n            this.doWrite(data, ()=>{\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */ uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) query[this.opts.timestampParam] = (0, $b0be4220a43aac53$export$5bb64b92cb4135a)();\n        if (!this.supportsBinary && !query.sid) query.b64 = 1;\n        // avoid port if default for schema\n        if (this.opts.port && (\"https\" === schema && Number(this.opts.port) !== 443 || \"http\" === schema && Number(this.opts.port) !== 80)) port = \":\" + this.opts.port;\n        const encodedQuery = (0, $204e8548e3057537$export$c564cdbbe6da493)(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return schema + \"://\" + (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? \"?\" + encodedQuery : \"\");\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */ request(opts = {}) {\n        Object.assign(opts, {\n            xd: this.xd,\n            xs: this.xs\n        }, this.opts);\n        return new $f00a2be7170d46e1$export$7fa6c5b6f8193917(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */ doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context)=>{\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */ doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context)=>{\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nclass $f00a2be7170d46e1$export$7fa6c5b6f8193917 extends (0, $457c1af18044583a$export$4293555f241ae35a) {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */ constructor(uri, opts){\n        super();\n        (0, $fcbdbaa3cd961e27$export$2f67576668b97183)(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */ create() {\n        const opts = (0, $fcbdbaa3cd961e27$export$357523c63a2253b9)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = this.xhr = new (0, $0e9540b6c40bc56b$export$a2d42eb087c10497)(opts);\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for(let i in this.opts.extraHeaders)if (this.opts.extraHeaders.hasOwnProperty(i)) xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                }\n            } catch (e) {}\n            if (\"POST\" === this.method) try {\n                xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n            } catch (e) {}\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            } catch (e) {}\n            // ie6 check\n            if (\"withCredentials\" in xhr) xhr.withCredentials = this.opts.withCredentials;\n            if (this.opts.requestTimeout) xhr.timeout = this.opts.requestTimeout;\n            xhr.onreadystatechange = ()=>{\n                if (4 !== xhr.readyState) return;\n                if (200 === xhr.status || 1223 === xhr.status) this.onLoad();\n                else // make sure the `error` event handler that's user-set\n                // does not throw in the same tick and gets caught here\n                this.setTimeoutFn(()=>{\n                    this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                }, 0);\n            };\n            xhr.send(this.data);\n        } catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(()=>{\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = $f00a2be7170d46e1$export$7fa6c5b6f8193917.requestsCount++;\n            $f00a2be7170d46e1$export$7fa6c5b6f8193917.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */ onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */ cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) return;\n        this.xhr.onreadystatechange = $f00a2be7170d46e1$var$empty;\n        if (fromError) try {\n            this.xhr.abort();\n        } catch (e) {}\n        if (typeof document !== \"undefined\") delete $f00a2be7170d46e1$export$7fa6c5b6f8193917.requests[this.index];\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */ onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */ abort() {\n        this.cleanup();\n    }\n}\n$f00a2be7170d46e1$export$7fa6c5b6f8193917.requestsCount = 0;\n$f00a2be7170d46e1$export$7fa6c5b6f8193917.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */ if (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") // @ts-ignore\n    attachEvent(\"onunload\", $f00a2be7170d46e1$var$unloadHandler);\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in (0, $24ed6d94f3b59450$export$394f9358f6231289) ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, $f00a2be7170d46e1$var$unloadHandler, false);\n    }\n}\nfunction $f00a2be7170d46e1$var$unloadHandler() {\n    for(let i in $f00a2be7170d46e1$export$7fa6c5b6f8193917.requests)if ($f00a2be7170d46e1$export$7fa6c5b6f8193917.requests.hasOwnProperty(i)) $f00a2be7170d46e1$export$7fa6c5b6f8193917.requests[i].abort();\n}\n\n\n\n\n\n\n\nconst $cef15c53d6c0c24e$export$bdd553fddd433dcb = (()=>{\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) return (cb)=>Promise.resolve().then(cb);\n    else return (cb, setTimeoutFn)=>setTimeoutFn(cb, 0);\n})();\nconst $cef15c53d6c0c24e$export$3909fb301d3dc8c9 = (0, $24ed6d94f3b59450$export$394f9358f6231289).WebSocket || (0, $24ed6d94f3b59450$export$394f9358f6231289).MozWebSocket;\nconst $cef15c53d6c0c24e$export$3407ba5dfb7a683d = true;\nconst $cef15c53d6c0c24e$export$790dcbc41e2d75d5 = \"arraybuffer\";\n\n\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ /* eslint-disable no-proto */ var $0934e0939605d48c$export$a143d493d941bafc;\nvar $0934e0939605d48c$export$e4cf37d7f6fb9e0a;\nvar $0934e0939605d48c$export$f99ded8fe4b79145;\nvar $0934e0939605d48c$export$599f31c3813fae4d;\n\"use strict\";\nvar $8a0a73e6b73fd0c4$export$a48f0734ac7c2329;\nvar $8a0a73e6b73fd0c4$export$d622b2ad8d90c771;\nvar $8a0a73e6b73fd0c4$export$6100ba28696e12de;\n\"use strict\";\n$8a0a73e6b73fd0c4$export$a48f0734ac7c2329 = $8a0a73e6b73fd0c4$var$byteLength;\n$8a0a73e6b73fd0c4$export$d622b2ad8d90c771 = $8a0a73e6b73fd0c4$var$toByteArray;\n$8a0a73e6b73fd0c4$export$6100ba28696e12de = $8a0a73e6b73fd0c4$var$fromByteArray;\nvar $8a0a73e6b73fd0c4$var$lookup = [];\nvar $8a0a73e6b73fd0c4$var$revLookup = [];\nvar $8a0a73e6b73fd0c4$var$Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\nvar $8a0a73e6b73fd0c4$var$code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor(var $8a0a73e6b73fd0c4$var$i = 0, $8a0a73e6b73fd0c4$var$len = $8a0a73e6b73fd0c4$var$code.length; $8a0a73e6b73fd0c4$var$i < $8a0a73e6b73fd0c4$var$len; ++$8a0a73e6b73fd0c4$var$i){\n    $8a0a73e6b73fd0c4$var$lookup[$8a0a73e6b73fd0c4$var$i] = $8a0a73e6b73fd0c4$var$code[$8a0a73e6b73fd0c4$var$i];\n    $8a0a73e6b73fd0c4$var$revLookup[$8a0a73e6b73fd0c4$var$code.charCodeAt($8a0a73e6b73fd0c4$var$i)] = $8a0a73e6b73fd0c4$var$i;\n}\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n$8a0a73e6b73fd0c4$var$revLookup[\"-\".charCodeAt(0)] = 62;\n$8a0a73e6b73fd0c4$var$revLookup[\"_\".charCodeAt(0)] = 63;\nfunction $8a0a73e6b73fd0c4$var$getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf(\"=\");\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\n// base64 is 4/3 + up to two characters of the original data\nfunction $8a0a73e6b73fd0c4$var$byteLength(b64) {\n    var lens = $8a0a73e6b73fd0c4$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $8a0a73e6b73fd0c4$var$_byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $8a0a73e6b73fd0c4$var$toByteArray(b64) {\n    var tmp;\n    var lens = $8a0a73e6b73fd0c4$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new $8a0a73e6b73fd0c4$var$Arr($8a0a73e6b73fd0c4$var$_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for(i = 0; i < len; i += 4){\n        tmp = $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i)] << 18 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 1)] << 12 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 2)] << 6 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 0xFF;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 2) {\n        tmp = $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i)] << 2 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 1) {\n        tmp = $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i)] << 10 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 1)] << 4 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    return arr;\n}\nfunction $8a0a73e6b73fd0c4$var$tripletToBase64(num) {\n    return $8a0a73e6b73fd0c4$var$lookup[num >> 18 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[num >> 12 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[num >> 6 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[num & 0x3F];\n}\nfunction $8a0a73e6b73fd0c4$var$encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for(var i = start; i < end; i += 3){\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push($8a0a73e6b73fd0c4$var$tripletToBase64(tmp));\n    }\n    return output.join(\"\");\n}\nfunction $8a0a73e6b73fd0c4$var$fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    ;\n    var parts = [];\n    var maxChunkLength = 16383 // must be multiple of 3\n    ;\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push($8a0a73e6b73fd0c4$var$encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push($8a0a73e6b73fd0c4$var$lookup[tmp >> 2] + $8a0a73e6b73fd0c4$var$lookup[tmp << 4 & 0x3F] + \"==\");\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push($8a0a73e6b73fd0c4$var$lookup[tmp >> 10] + $8a0a73e6b73fd0c4$var$lookup[tmp >> 4 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[tmp << 2 & 0x3F] + \"=\");\n    }\n    return parts.join(\"\");\n}\n\n\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ var $998eb38f4d082829$export$aafa59e2e03f2942;\nvar $998eb38f4d082829$export$68d8715fc104d294;\n$998eb38f4d082829$export$aafa59e2e03f2942 = function(buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n    if (e === 0) e = 1 - eBias;\n    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;\n    else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n$998eb38f4d082829$export$68d8715fc104d294 = function(buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n    } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n        }\n        if (e + eBias >= 1) value += rt / c;\n        else value += rt * Math.pow(2, 1 - eBias);\n        if (value * c >= 2) {\n            e++;\n            c /= 2;\n        }\n        if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n        } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n        } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n        }\n    }\n    for(; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n    e = e << mLen | m;\n    eLen += mLen;\n    for(; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n    buffer[offset + i - d] |= s * 128;\n};\n\n\nvar $0934e0939605d48c$var$customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" // eslint-disable-line dot-notation\n ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") // eslint-disable-line dot-notation\n : null;\n$0934e0939605d48c$export$a143d493d941bafc = $0934e0939605d48c$var$Buffer;\n$0934e0939605d48c$export$e4cf37d7f6fb9e0a = $0934e0939605d48c$var$SlowBuffer;\n$0934e0939605d48c$export$f99ded8fe4b79145 = 50;\nvar $0934e0939605d48c$var$K_MAX_LENGTH = 0x7fffffff;\n$0934e0939605d48c$export$599f31c3813fae4d = $0934e0939605d48c$var$K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */ $0934e0939605d48c$var$Buffer.TYPED_ARRAY_SUPPORT = $0934e0939605d48c$var$typedArraySupport();\nif (!$0934e0939605d48c$var$Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\nfunction $0934e0939605d48c$var$typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n        var arr = new Uint8Array(1);\n        var proto = {\n            foo: function() {\n                return 42;\n            }\n        };\n        Object.setPrototypeOf(proto, Uint8Array.prototype);\n        Object.setPrototypeOf(arr, proto);\n        return arr.foo() === 42;\n    } catch (e) {\n        return false;\n    }\n}\nObject.defineProperty($0934e0939605d48c$var$Buffer.prototype, \"parent\", {\n    enumerable: true,\n    get: function() {\n        if (!$0934e0939605d48c$var$Buffer.isBuffer(this)) return undefined;\n        return this.buffer;\n    }\n});\nObject.defineProperty($0934e0939605d48c$var$Buffer.prototype, \"offset\", {\n    enumerable: true,\n    get: function() {\n        if (!$0934e0939605d48c$var$Buffer.isBuffer(this)) return undefined;\n        return this.byteOffset;\n    }\n});\nfunction $0934e0939605d48c$var$createBuffer(length) {\n    if (length > $0934e0939605d48c$var$K_MAX_LENGTH) throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    // Return an augmented `Uint8Array` instance\n    var buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, $0934e0939605d48c$var$Buffer.prototype);\n    return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */ function $0934e0939605d48c$var$Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === \"number\") {\n        if (typeof encodingOrOffset === \"string\") throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        return $0934e0939605d48c$var$allocUnsafe(arg);\n    }\n    return $0934e0939605d48c$var$from(arg, encodingOrOffset, length);\n}\n$0934e0939605d48c$var$Buffer.poolSize = 8192 // not used by this implementation\n;\nfunction $0934e0939605d48c$var$from(value, encodingOrOffset, length) {\n    if (typeof value === \"string\") return $0934e0939605d48c$var$fromString(value, encodingOrOffset);\n    if (ArrayBuffer.isView(value)) return $0934e0939605d48c$var$fromArrayView(value);\n    if (value == null) throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n    if ($0934e0939605d48c$var$isInstance(value, ArrayBuffer) || value && $0934e0939605d48c$var$isInstance(value.buffer, ArrayBuffer)) return $0934e0939605d48c$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof SharedArrayBuffer !== \"undefined\" && ($0934e0939605d48c$var$isInstance(value, SharedArrayBuffer) || value && $0934e0939605d48c$var$isInstance(value.buffer, SharedArrayBuffer))) return $0934e0939605d48c$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof value === \"number\") throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    var valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null && valueOf !== value) return $0934e0939605d48c$var$Buffer.from(valueOf, encodingOrOffset, length);\n    var b = $0934e0939605d48c$var$fromObject(value);\n    if (b) return b;\n    if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") return $0934e0939605d48c$var$Buffer.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/ $0934e0939605d48c$var$Buffer.from = function(value, encodingOrOffset, length) {\n    return $0934e0939605d48c$var$from(value, encodingOrOffset, length);\n};\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf($0934e0939605d48c$var$Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf($0934e0939605d48c$var$Buffer, Uint8Array);\nfunction $0934e0939605d48c$var$assertSize(size) {\n    if (typeof size !== \"number\") throw new TypeError('\"size\" argument must be of type number');\n    else if (size < 0) throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n}\nfunction $0934e0939605d48c$var$alloc(size, fill, encoding) {\n    $0934e0939605d48c$var$assertSize(size);\n    if (size <= 0) return $0934e0939605d48c$var$createBuffer(size);\n    if (fill !== undefined) // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === \"string\" ? $0934e0939605d48c$var$createBuffer(size).fill(fill, encoding) : $0934e0939605d48c$var$createBuffer(size).fill(fill);\n    return $0934e0939605d48c$var$createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/ $0934e0939605d48c$var$Buffer.alloc = function(size, fill, encoding) {\n    return $0934e0939605d48c$var$alloc(size, fill, encoding);\n};\nfunction $0934e0939605d48c$var$allocUnsafe(size) {\n    $0934e0939605d48c$var$assertSize(size);\n    return $0934e0939605d48c$var$createBuffer(size < 0 ? 0 : $0934e0939605d48c$var$checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */ $0934e0939605d48c$var$Buffer.allocUnsafe = function(size) {\n    return $0934e0939605d48c$var$allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */ $0934e0939605d48c$var$Buffer.allocUnsafeSlow = function(size) {\n    return $0934e0939605d48c$var$allocUnsafe(size);\n};\nfunction $0934e0939605d48c$var$fromString(string, encoding) {\n    if (typeof encoding !== \"string\" || encoding === \"\") encoding = \"utf8\";\n    if (!$0934e0939605d48c$var$Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n    var length = $0934e0939605d48c$var$byteLength(string, encoding) | 0;\n    var buf = $0934e0939605d48c$var$createBuffer(length);\n    var actual = buf.write(string, encoding);\n    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n    return buf;\n}\nfunction $0934e0939605d48c$var$fromArrayLike(array) {\n    var length = array.length < 0 ? 0 : $0934e0939605d48c$var$checked(array.length) | 0;\n    var buf = $0934e0939605d48c$var$createBuffer(length);\n    for(var i = 0; i < length; i += 1)buf[i] = array[i] & 255;\n    return buf;\n}\nfunction $0934e0939605d48c$var$fromArrayView(arrayView) {\n    if ($0934e0939605d48c$var$isInstance(arrayView, Uint8Array)) {\n        var copy = new Uint8Array(arrayView);\n        return $0934e0939605d48c$var$fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n    return $0934e0939605d48c$var$fromArrayLike(arrayView);\n}\nfunction $0934e0939605d48c$var$fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('\"offset\" is outside of buffer bounds');\n    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('\"length\" is outside of buffer bounds');\n    var buf;\n    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);\n    else if (length === undefined) buf = new Uint8Array(array, byteOffset);\n    else buf = new Uint8Array(array, byteOffset, length);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(buf, $0934e0939605d48c$var$Buffer.prototype);\n    return buf;\n}\nfunction $0934e0939605d48c$var$fromObject(obj) {\n    if ($0934e0939605d48c$var$Buffer.isBuffer(obj)) {\n        var len = $0934e0939605d48c$var$checked(obj.length) | 0;\n        var buf = $0934e0939605d48c$var$createBuffer(len);\n        if (buf.length === 0) return buf;\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj.length !== undefined) {\n        if (typeof obj.length !== \"number\" || $0934e0939605d48c$var$numberIsNaN(obj.length)) return $0934e0939605d48c$var$createBuffer(0);\n        return $0934e0939605d48c$var$fromArrayLike(obj);\n    }\n    if (obj.type === \"Buffer\" && Array.isArray(obj.data)) return $0934e0939605d48c$var$fromArrayLike(obj.data);\n}\nfunction $0934e0939605d48c$var$checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= $0934e0939605d48c$var$K_MAX_LENGTH) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + $0934e0939605d48c$var$K_MAX_LENGTH.toString(16) + \" bytes\");\n    return length | 0;\n}\nfunction $0934e0939605d48c$var$SlowBuffer(length) {\n    if (+length != length) length = 0;\n    return $0934e0939605d48c$var$Buffer.alloc(+length);\n}\n$0934e0939605d48c$var$Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== $0934e0939605d48c$var$Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n    ;\n};\n$0934e0939605d48c$var$Buffer.compare = function compare(a, b) {\n    if ($0934e0939605d48c$var$isInstance(a, Uint8Array)) a = $0934e0939605d48c$var$Buffer.from(a, a.offset, a.byteLength);\n    if ($0934e0939605d48c$var$isInstance(b, Uint8Array)) b = $0934e0939605d48c$var$Buffer.from(b, b.offset, b.byteLength);\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(a) || !$0934e0939605d48c$var$Buffer.isBuffer(b)) throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    if (a === b) return 0;\n    var x = a.length;\n    var y = b.length;\n    for(var i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n$0934e0939605d48c$var$Buffer.isEncoding = function isEncoding(encoding) {\n    switch(String(encoding).toLowerCase()){\n        case \"hex\":\n        case \"utf8\":\n        case \"utf-8\":\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n        case \"base64\":\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return true;\n        default:\n            return false;\n    }\n};\n$0934e0939605d48c$var$Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n    if (list.length === 0) return $0934e0939605d48c$var$Buffer.alloc(0);\n    var i;\n    if (length === undefined) {\n        length = 0;\n        for(i = 0; i < list.length; ++i)length += list[i].length;\n    }\n    var buffer = $0934e0939605d48c$var$Buffer.allocUnsafe(length);\n    var pos = 0;\n    for(i = 0; i < list.length; ++i){\n        var buf = list[i];\n        if ($0934e0939605d48c$var$isInstance(buf, Uint8Array)) {\n            if (pos + buf.length > buffer.length) $0934e0939605d48c$var$Buffer.from(buf).copy(buffer, pos);\n            else Uint8Array.prototype.set.call(buffer, buf, pos);\n        } else if (!$0934e0939605d48c$var$Buffer.isBuffer(buf)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n        else buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nfunction $0934e0939605d48c$var$byteLength(string, encoding) {\n    if ($0934e0939605d48c$var$Buffer.isBuffer(string)) return string.length;\n    if (ArrayBuffer.isView(string) || $0934e0939605d48c$var$isInstance(string, ArrayBuffer)) return string.byteLength;\n    if (typeof string !== \"string\") throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);\n    var len = string.length;\n    var mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0;\n    // Use a for loop to avoid recursion\n    var loweredCase = false;\n    for(;;)switch(encoding){\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return len;\n        case \"utf8\":\n        case \"utf-8\":\n            return $0934e0939605d48c$var$utf8ToBytes(string).length;\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return len * 2;\n        case \"hex\":\n            return len >>> 1;\n        case \"base64\":\n            return $0934e0939605d48c$var$base64ToBytes(string).length;\n        default:\n            if (loweredCase) return mustMatch ? -1 : $0934e0939605d48c$var$utf8ToBytes(string).length // assume utf8\n            ;\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n}\n$0934e0939605d48c$var$Buffer.byteLength = $0934e0939605d48c$var$byteLength;\nfunction $0934e0939605d48c$var$slowToString(encoding, start, end) {\n    var loweredCase = false;\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) start = 0;\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) return \"\";\n    if (end === undefined || end > this.length) end = this.length;\n    if (end <= 0) return \"\";\n    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0;\n    start >>>= 0;\n    if (end <= start) return \"\";\n    if (!encoding) encoding = \"utf8\";\n    while(true)switch(encoding){\n        case \"hex\":\n            return $0934e0939605d48c$var$hexSlice(this, start, end);\n        case \"utf8\":\n        case \"utf-8\":\n            return $0934e0939605d48c$var$utf8Slice(this, start, end);\n        case \"ascii\":\n            return $0934e0939605d48c$var$asciiSlice(this, start, end);\n        case \"latin1\":\n        case \"binary\":\n            return $0934e0939605d48c$var$latin1Slice(this, start, end);\n        case \"base64\":\n            return $0934e0939605d48c$var$base64Slice(this, start, end);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return $0934e0939605d48c$var$utf16leSlice(this, start, end);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (encoding + \"\").toLowerCase();\n            loweredCase = true;\n    }\n}\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\n$0934e0939605d48c$var$Buffer.prototype._isBuffer = true;\nfunction $0934e0939605d48c$var$swap(b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n}\n$0934e0939605d48c$var$Buffer.prototype.swap16 = function swap16() {\n    var len = this.length;\n    if (len % 2 !== 0) throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n    for(var i = 0; i < len; i += 2)$0934e0939605d48c$var$swap(this, i, i + 1);\n    return this;\n};\n$0934e0939605d48c$var$Buffer.prototype.swap32 = function swap32() {\n    var len = this.length;\n    if (len % 4 !== 0) throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n    for(var i = 0; i < len; i += 4){\n        $0934e0939605d48c$var$swap(this, i, i + 3);\n        $0934e0939605d48c$var$swap(this, i + 1, i + 2);\n    }\n    return this;\n};\n$0934e0939605d48c$var$Buffer.prototype.swap64 = function swap64() {\n    var len = this.length;\n    if (len % 8 !== 0) throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n    for(var i = 0; i < len; i += 8){\n        $0934e0939605d48c$var$swap(this, i, i + 7);\n        $0934e0939605d48c$var$swap(this, i + 1, i + 6);\n        $0934e0939605d48c$var$swap(this, i + 2, i + 5);\n        $0934e0939605d48c$var$swap(this, i + 3, i + 4);\n    }\n    return this;\n};\n$0934e0939605d48c$var$Buffer.prototype.toString = function toString() {\n    var length = this.length;\n    if (length === 0) return \"\";\n    if (arguments.length === 0) return $0934e0939605d48c$var$utf8Slice(this, 0, length);\n    return $0934e0939605d48c$var$slowToString.apply(this, arguments);\n};\n$0934e0939605d48c$var$Buffer.prototype.toLocaleString = $0934e0939605d48c$var$Buffer.prototype.toString;\n$0934e0939605d48c$var$Buffer.prototype.equals = function equals(b) {\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n    if (this === b) return true;\n    return $0934e0939605d48c$var$Buffer.compare(this, b) === 0;\n};\n$0934e0939605d48c$var$Buffer.prototype.inspect = function inspect() {\n    var str = \"\";\n    var max = $0934e0939605d48c$export$f99ded8fe4b79145;\n    str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n    if (this.length > max) str += \" ... \";\n    return \"<Buffer \" + str + \">\";\n};\nif ($0934e0939605d48c$var$customInspectSymbol) $0934e0939605d48c$var$Buffer.prototype[$0934e0939605d48c$var$customInspectSymbol] = $0934e0939605d48c$var$Buffer.prototype.inspect;\n$0934e0939605d48c$var$Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if ($0934e0939605d48c$var$isInstance(target, Uint8Array)) target = $0934e0939605d48c$var$Buffer.from(target, target.offset, target.byteLength);\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(target)) throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);\n    if (start === undefined) start = 0;\n    if (end === undefined) end = target ? target.length : 0;\n    if (thisStart === undefined) thisStart = 0;\n    if (thisEnd === undefined) thisEnd = this.length;\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError(\"out of range index\");\n    if (thisStart >= thisEnd && start >= end) return 0;\n    if (thisStart >= thisEnd) return -1;\n    if (start >= end) return 1;\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n    for(var i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction $0934e0939605d48c$var$bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1;\n    // Normalize byteOffset\n    if (typeof byteOffset === \"string\") {\n        encoding = byteOffset;\n        byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;\n    else if (byteOffset < -2147483648) byteOffset = -2147483648;\n    byteOffset = +byteOffset // Coerce to Number.\n    ;\n    if ($0934e0939605d48c$var$numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n    if (byteOffset >= buffer.length) {\n        if (dir) return -1;\n        else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;\n        else return -1;\n    }\n    // Normalize val\n    if (typeof val === \"string\") val = $0934e0939605d48c$var$Buffer.from(val, encoding);\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if ($0934e0939605d48c$var$Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) return -1;\n        return $0934e0939605d48c$var$arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === \"number\") {\n        val = val & 0xFF // Search for a byte value [0-255]\n        ;\n        if (typeof Uint8Array.prototype.indexOf === \"function\") {\n            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n        return $0934e0939605d48c$var$arrayIndexOf(buffer, [\n            val\n        ], byteOffset, encoding, dir);\n    }\n    throw new TypeError(\"val must be string, number or Buffer\");\n}\nfunction $0934e0939605d48c$var$arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n    if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n            if (arr.length < 2 || val.length < 2) return -1;\n            indexSize = 2;\n            arrLength /= 2;\n            valLength /= 2;\n            byteOffset /= 2;\n        }\n    }\n    function read(buf, i) {\n        if (indexSize === 1) return buf[i];\n        else return buf.readUInt16BE(i * indexSize);\n    }\n    var i;\n    if (dir) {\n        var foundIndex = -1;\n        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n        }\n    } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for(i = byteOffset; i >= 0; i--){\n            var found = true;\n            for(var j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {\n                found = false;\n                break;\n            }\n            if (found) return i;\n        }\n    }\n    return -1;\n}\n$0934e0939605d48c$var$Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n$0934e0939605d48c$var$Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return $0934e0939605d48c$var$bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n$0934e0939605d48c$var$Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return $0934e0939605d48c$var$bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction $0934e0939605d48c$var$hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n    if (!length) length = remaining;\n    else {\n        length = Number(length);\n        if (length > remaining) length = remaining;\n    }\n    var strLen = string.length;\n    if (length > strLen / 2) length = strLen / 2;\n    for(var i = 0; i < length; ++i){\n        var parsed = parseInt(string.substr(i * 2, 2), 16);\n        if ($0934e0939605d48c$var$numberIsNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n    }\n    return i;\n}\nfunction $0934e0939605d48c$var$utf8Write(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction $0934e0939605d48c$var$asciiWrite(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$asciiToBytes(string), buf, offset, length);\n}\nfunction $0934e0939605d48c$var$base64Write(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$base64ToBytes(string), buf, offset, length);\n}\nfunction $0934e0939605d48c$var$ucs2Write(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n$0934e0939605d48c$var$Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        encoding = \"utf8\";\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === \"string\") {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n        if (isFinite(length)) {\n            length = length >>> 0;\n            if (encoding === undefined) encoding = \"utf8\";\n        } else {\n            encoding = length;\n            length = undefined;\n        }\n    } else throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError(\"Attempt to write outside buffer bounds\");\n    if (!encoding) encoding = \"utf8\";\n    var loweredCase = false;\n    for(;;)switch(encoding){\n        case \"hex\":\n            return $0934e0939605d48c$var$hexWrite(this, string, offset, length);\n        case \"utf8\":\n        case \"utf-8\":\n            return $0934e0939605d48c$var$utf8Write(this, string, offset, length);\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return $0934e0939605d48c$var$asciiWrite(this, string, offset, length);\n        case \"base64\":\n            // Warning: maxLength not taken into account in base64Write\n            return $0934e0939605d48c$var$base64Write(this, string, offset, length);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return $0934e0939605d48c$var$ucs2Write(this, string, offset, length);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n};\n$0934e0939605d48c$var$Buffer.prototype.toJSON = function toJSON() {\n    return {\n        type: \"Buffer\",\n        data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n};\nfunction $0934e0939605d48c$var$base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) return $8a0a73e6b73fd0c4$export$6100ba28696e12de(buf);\n    else return $8a0a73e6b73fd0c4$export$6100ba28696e12de(buf.slice(start, end));\n}\nfunction $0934e0939605d48c$var$utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n    var i = start;\n    while(i < end){\n        var firstByte = buf[i];\n        var codePoint = null;\n        var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n        if (i + bytesPerSequence <= end) {\n            var secondByte, thirdByte, fourthByte, tempCodePoint;\n            switch(bytesPerSequence){\n                case 1:\n                    if (firstByte < 0x80) codePoint = firstByte;\n                    break;\n                case 2:\n                    secondByte = buf[i + 1];\n                    if ((secondByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                        if (tempCodePoint > 0x7F) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 3:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                        if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 4:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    fourthByte = buf[i + 3];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                        if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) codePoint = tempCodePoint;\n                    }\n            }\n        }\n        if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xFFFD;\n            bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000;\n            res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n            codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n        res.push(codePoint);\n        i += bytesPerSequence;\n    }\n    return $0934e0939605d48c$var$decodeCodePointsArray(res);\n}\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar $0934e0939605d48c$var$MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction $0934e0939605d48c$var$decodeCodePointsArray(codePoints) {\n    var len = codePoints.length;\n    if (len <= $0934e0939605d48c$var$MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    ;\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    var res = \"\";\n    var i = 0;\n    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += $0934e0939605d48c$var$MAX_ARGUMENTS_LENGTH));\n    return res;\n}\nfunction $0934e0939605d48c$var$asciiSlice(buf, start, end) {\n    var ret = \"\";\n    end = Math.min(buf.length, end);\n    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 0x7F);\n    return ret;\n}\nfunction $0934e0939605d48c$var$latin1Slice(buf, start, end) {\n    var ret = \"\";\n    end = Math.min(buf.length, end);\n    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);\n    return ret;\n}\nfunction $0934e0939605d48c$var$hexSlice(buf, start, end) {\n    var len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    var out = \"\";\n    for(var i = start; i < end; ++i)out += $0934e0939605d48c$var$hexSliceLookupTable[buf[i]];\n    return out;\n}\nfunction $0934e0939605d48c$var$utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = \"\";\n    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n    for(var i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    return res;\n}\n$0934e0939605d48c$var$Buffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n    } else if (start > len) start = len;\n    if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n    } else if (end > len) end = len;\n    if (end < start) end = start;\n    var newBuf = this.subarray(start, end);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(newBuf, $0934e0939605d48c$var$Buffer.prototype);\n    return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */ function $0934e0939605d48c$var$checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n    if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n}\n$0934e0939605d48c$var$Buffer.prototype.readUintLE = $0934e0939605d48c$var$Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUintBE = $0934e0939605d48c$var$Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    var val = this[offset + --byteLength];\n    var mul = 1;\n    while(byteLength > 0 && (mul *= 0x100))val += this[offset + --byteLength] * mul;\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint8 = $0934e0939605d48c$var$Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 1, this.length);\n    return this[offset];\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint16LE = $0934e0939605d48c$var$Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint16BE = $0934e0939605d48c$var$Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint32LE = $0934e0939605d48c$var$Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint32BE = $0934e0939605d48c$var$Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n$0934e0939605d48c$var$Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n    while(i > 0 && (mul *= 0x100))val += this[offset + --i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    var val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    var val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n$0934e0939605d48c$var$Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return $998eb38f4d082829$export$aafa59e2e03f2942(this, offset, true, 23, 4);\n};\n$0934e0939605d48c$var$Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return $998eb38f4d082829$export$aafa59e2e03f2942(this, offset, false, 23, 4);\n};\n$0934e0939605d48c$var$Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 8, this.length);\n    return $998eb38f4d082829$export$aafa59e2e03f2942(this, offset, true, 52, 8);\n};\n$0934e0939605d48c$var$Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 8, this.length);\n    return $998eb38f4d082829$export$aafa59e2e03f2942(this, offset, false, 52, 8);\n};\nfunction $0934e0939605d48c$var$checkInt(buf, value, offset, ext, max, min) {\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n}\n$0934e0939605d48c$var$Buffer.prototype.writeUintLE = $0934e0939605d48c$var$Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUintBE = $0934e0939605d48c$var$Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint8 = $0934e0939605d48c$var$Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint16LE = $0934e0939605d48c$var$Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint16BE = $0934e0939605d48c$var$Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint32LE = $0934e0939605d48c$var$Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint32BE = $0934e0939605d48c$var$Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 1, 0x7f, -128);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\nfunction $0934e0939605d48c$var$checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n    if (offset < 0) throw new RangeError(\"Index out of range\");\n}\nfunction $0934e0939605d48c$var$writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -340282346638528860000000000000000000000);\n    $998eb38f4d082829$export$68d8715fc104d294(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n}\n$0934e0939605d48c$var$Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeFloat(this, value, offset, true, noAssert);\n};\n$0934e0939605d48c$var$Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeFloat(this, value, offset, false, noAssert);\n};\nfunction $0934e0939605d48c$var$writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n    $998eb38f4d082829$export$68d8715fc104d294(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n}\n$0934e0939605d48c$var$Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeDouble(this, value, offset, true, noAssert);\n};\n$0934e0939605d48c$var$Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeDouble(this, value, offset, false, noAssert);\n};\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n$0934e0939605d48c$var$Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(target)) throw new TypeError(\"argument should be a Buffer\");\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start;\n    // Copy 0 bytes; we're done\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0;\n    // Fatal error conditions\n    if (targetStart < 0) throw new RangeError(\"targetStart out of bounds\");\n    if (start < 0 || start >= this.length) throw new RangeError(\"Index out of range\");\n    if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n    // Are we oob?\n    if (end > this.length) end = this.length;\n    if (target.length - targetStart < end - start) end = target.length - targetStart + start;\n    var len = end - start;\n    if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\") // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    return len;\n};\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n$0934e0939605d48c$var$Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === \"string\") {\n        if (typeof start === \"string\") {\n            encoding = start;\n            start = 0;\n            end = this.length;\n        } else if (typeof end === \"string\") {\n            encoding = end;\n            end = this.length;\n        }\n        if (encoding !== undefined && typeof encoding !== \"string\") throw new TypeError(\"encoding must be a string\");\n        if (typeof encoding === \"string\" && !$0934e0939605d48c$var$Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n        if (val.length === 1) {\n            var code = val.charCodeAt(0);\n            if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") // Fast path: If `val` fits into a single byte, use that numeric value.\n            val = code;\n        }\n    } else if (typeof val === \"number\") val = val & 255;\n    else if (typeof val === \"boolean\") val = Number(val);\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) throw new RangeError(\"Out of range index\");\n    if (end <= start) return this;\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    var i;\n    if (typeof val === \"number\") for(i = start; i < end; ++i)this[i] = val;\n    else {\n        var bytes = $0934e0939605d48c$var$Buffer.isBuffer(val) ? val : $0934e0939605d48c$var$Buffer.from(val, encoding);\n        var len = bytes.length;\n        if (len === 0) throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];\n    }\n    return this;\n};\n// HELPER FUNCTIONS\n// ================\nvar $0934e0939605d48c$var$INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction $0934e0939605d48c$var$base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split(\"=\")[0];\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = str.trim().replace($0934e0939605d48c$var$INVALID_BASE64_RE, \"\");\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return \"\";\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while(str.length % 4 !== 0)str = str + \"=\";\n    return str;\n}\nfunction $0934e0939605d48c$var$utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n    for(var i = 0; i < length; ++i){\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) // valid bmp char, but last char was a lead\n        {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break;\n            bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else throw new Error(\"Invalid code point\");\n    }\n    return bytes;\n}\nfunction $0934e0939605d48c$var$asciiToBytes(str) {\n    var byteArray = [];\n    for(var i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n    return byteArray;\n}\nfunction $0934e0939605d48c$var$utf16leToBytes(str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n    for(var i = 0; i < str.length; ++i){\n        if ((units -= 2) < 0) break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n    }\n    return byteArray;\n}\nfunction $0934e0939605d48c$var$base64ToBytes(str) {\n    return $8a0a73e6b73fd0c4$export$d622b2ad8d90c771($0934e0939605d48c$var$base64clean(str));\n}\nfunction $0934e0939605d48c$var$blitBuffer(src, dst, offset, length) {\n    for(var i = 0; i < length; ++i){\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction $0934e0939605d48c$var$isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction $0934e0939605d48c$var$numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj // eslint-disable-line no-self-compare\n    ;\n}\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar $0934e0939605d48c$var$hexSliceLookupTable = function() {\n    var alphabet = \"0123456789abcdef\";\n    var table = new Array(256);\n    for(var i = 0; i < 16; ++i){\n        var i16 = i * 16;\n        for(var j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n    return table;\n}();\n\n\nvar $1c4b86cb67229007$require$Buffer = $0934e0939605d48c$export$a143d493d941bafc;\n// detect ReactNative environment\nconst $1c4b86cb67229007$var$isReactNative = typeof navigator !== \"undefined\" && typeof navigator.product === \"string\" && navigator.product.toLowerCase() === \"reactnative\";\nclass $1c4b86cb67229007$export$911baa0677ac404c extends (0, $970e2439289df85f$export$86495b081fef8e52) {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */ constructor(opts){\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) // let probe timeout\n        return;\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = $1c4b86cb67229007$var$isReactNative ? {} : (0, $fcbdbaa3cd961e27$export$357523c63a2253b9)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) opts.headers = this.opts.extraHeaders;\n        try {\n            this.ws = (0, $cef15c53d6c0c24e$export$3407ba5dfb7a683d) && !$1c4b86cb67229007$var$isReactNative ? protocols ? new (0, $cef15c53d6c0c24e$export$3909fb301d3dc8c9)(uri, protocols) : new (0, $cef15c53d6c0c24e$export$3909fb301d3dc8c9)(uri) : new (0, $cef15c53d6c0c24e$export$3909fb301d3dc8c9)(uri, protocols, opts);\n        } catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || (0, $cef15c53d6c0c24e$export$790dcbc41e2d75d5);\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */ addEventListeners() {\n        this.ws.onopen = ()=>{\n            if (this.opts.autoUnref) this.ws._socket.unref();\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent)=>this.onClose({\n                description: \"websocket connection closed\",\n                context: closeEvent\n            });\n        this.ws.onmessage = (ev)=>this.onData(ev.data);\n        this.ws.onerror = (e)=>this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for(let i = 0; i < packets.length; i++){\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            (0, $561487b8227635b6$export$2e2bcd8739ae039)(packet, this.supportsBinary, (data)=>{\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!(0, $cef15c53d6c0c24e$export$3407ba5dfb7a683d)) {\n                    if (packet.options) opts.compress = packet.options.compress;\n                    if (this.opts.perMessageDeflate) {\n                        const len = // @ts-ignore\n                        \"string\" === typeof data ? $1c4b86cb67229007$require$Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) opts.compress = false;\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (0, $cef15c53d6c0c24e$export$3407ba5dfb7a683d) // TypeError is thrown when passing the second argument on Safari\n                    this.ws.send(data);\n                    else this.ws.send(data, opts);\n                } catch (e) {}\n                if (lastPacket) // fake drain\n                // defer to next tick to allow Socket to clear writeBuffer\n                (0, $cef15c53d6c0c24e$export$bdd553fddd433dcb)(()=>{\n                    this.writable = true;\n                    this.emitReserved(\"drain\");\n                }, this.setTimeoutFn);\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */ uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port && (\"wss\" === schema && Number(this.opts.port) !== 443 || \"ws\" === schema && Number(this.opts.port) !== 80)) port = \":\" + this.opts.port;\n        // append timestamp to URI\n        if (this.opts.timestampRequests) query[this.opts.timestampParam] = (0, $b0be4220a43aac53$export$5bb64b92cb4135a)();\n        // communicate binary support capabilities\n        if (!this.supportsBinary) query.b64 = 1;\n        const encodedQuery = (0, $204e8548e3057537$export$c564cdbbe6da493)(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return schema + \"://\" + (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? \"?\" + encodedQuery : \"\");\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */ check() {\n        return !!(0, $cef15c53d6c0c24e$export$3909fb301d3dc8c9);\n    }\n}\n\n\nconst $1e8fdbaba1cca440$export$46dec00755c1153b = {\n    websocket: (0, $1c4b86cb67229007$export$911baa0677ac404c),\n    polling: (0, $f00a2be7170d46e1$export$265ee5eefd4c309b)\n};\n\n\n\n\n// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */ const $278b35c341751f73$var$re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst $278b35c341751f73$var$parts = [\n    \"source\",\n    \"protocol\",\n    \"authority\",\n    \"userInfo\",\n    \"user\",\n    \"password\",\n    \"host\",\n    \"port\",\n    \"relative\",\n    \"path\",\n    \"directory\",\n    \"file\",\n    \"query\",\n    \"anchor\"\n];\nfunction $278b35c341751f73$export$98e6a39c04603d36(str) {\n    const src = str, b = str.indexOf(\"[\"), e = str.indexOf(\"]\");\n    if (b != -1 && e != -1) str = str.substring(0, b) + str.substring(b, e).replace(/:/g, \";\") + str.substring(e, str.length);\n    let m = $278b35c341751f73$var$re.exec(str || \"\"), uri = {}, i = 14;\n    while(i--)uri[$278b35c341751f73$var$parts[i]] = m[i] || \"\";\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, \":\");\n        uri.authority = uri.authority.replace(\"[\", \"\").replace(\"]\", \"\").replace(/;/g, \":\");\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = $278b35c341751f73$var$pathNames(uri, uri[\"path\"]);\n    uri.queryKey = $278b35c341751f73$var$queryKey(uri, uri[\"query\"]);\n    return uri;\n}\nfunction $278b35c341751f73$var$pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == \"/\" || path.length === 0) names.splice(0, 1);\n    if (path.slice(-1) == \"/\") names.splice(names.length - 1, 1);\n    return names;\n}\nfunction $278b35c341751f73$var$queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function($0, $1, $2) {\n        if ($1) data[$1] = $2;\n    });\n    return data;\n}\n\n\n\n\nclass $e4147e052f16e9bd$export$4798917dbf149b79 extends (0, $457c1af18044583a$export$4293555f241ae35a) {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */ constructor(uri, opts = {}){\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = (0, $278b35c341751f73$export$98e6a39c04603d36)(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query) opts.query = uri.query;\n        } else if (opts.host) opts.hostname = (0, $278b35c341751f73$export$98e6a39c04603d36)(opts.host).host;\n        (0, $fcbdbaa3cd961e27$export$2f67576668b97183)(this, opts);\n        this.secure = null != opts.secure ? opts.secure : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) // if no port is specified manually, use the protocol default\n        opts.port = this.secure ? \"443\" : \"80\";\n        this.hostname = opts.hostname || (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port = opts.port || (typeof location !== \"undefined\" && location.port ? location.port : this.secure ? \"443\" : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\"\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") this.opts.query = (0, $204e8548e3057537$export$2f872c0f2117be69)(this.opts.query);\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = ()=>{\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = ()=>{\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */ createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = (0, $4dc1a5a6e008a7e7$export$a51d6b395ff4c65a);\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id) query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query: query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new (0, $1e8fdbaba1cca440$export$46dec00755c1153b)[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */ open() {\n        let transport;\n        if (this.opts.rememberUpgrade && $e4147e052f16e9bd$export$4798917dbf149b79.priorWebsocketSuccess && this.transports.indexOf(\"websocket\") !== -1) transport = \"websocket\";\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(()=>{\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        } else transport = this.transports[0];\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        } catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */ setTransport(transport) {\n        if (this.transport) this.transport.removeAllListeners();\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport.on(\"drain\", this.onDrain.bind(this)).on(\"packet\", this.onPacket.bind(this)).on(\"error\", this.onError.bind(this)).on(\"close\", (reason)=>this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */ probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        $e4147e052f16e9bd$export$4798917dbf149b79.priorWebsocketSuccess = false;\n        const onTransportOpen = ()=>{\n            if (failed) return;\n            transport.send([\n                {\n                    type: \"ping\",\n                    data: \"probe\"\n                }\n            ]);\n            transport.once(\"packet\", (msg)=>{\n                if (failed) return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport) return;\n                    $e4147e052f16e9bd$export$4798917dbf149b79.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(()=>{\n                        if (failed) return;\n                        if (\"closed\" === this.readyState) return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([\n                            {\n                                type: \"upgrade\"\n                            }\n                        ]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                } else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed) return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err)=>{\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) freezeTransport();\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = ()=>{\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */ onOpen() {\n        this.readyState = \"open\";\n        $e4147e052f16e9bd$export$4798917dbf149b79.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for(; i < l; i++)this.probe(this.upgrades[i]);\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */ onPacket(packet) {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState || \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch(packet.type){\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */ onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState) return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */ resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(()=>{\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) this.pingTimeoutTimer.unref();\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */ onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) this.emitReserved(\"drain\");\n        else this.flush();\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */ flush() {\n        if (\"closed\" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */ getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload && this.transport.name === \"polling\" && this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) return this.writeBuffer;\n        let payloadSize = 1; // first packet type\n        for(let i = 0; i < this.writeBuffer.length; i++){\n            const data = this.writeBuffer[i].data;\n            if (data) payloadSize += (0, $fcbdbaa3cd961e27$export$a48f0734ac7c2329)(data);\n            if (i > 0 && payloadSize > this.maxPayload) return this.writeBuffer.slice(0, i);\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */ write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */ sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) return;\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn) this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */ close() {\n        const close = ()=>{\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = ()=>{\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = ()=>{\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) this.once(\"drain\", ()=>{\n                if (this.upgrading) waitForUpgrade();\n                else close();\n            });\n            else if (this.upgrading) waitForUpgrade();\n            else close();\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */ onError(err) {\n        $e4147e052f16e9bd$export$4798917dbf149b79.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */ onClose(reason, description) {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState || \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */ filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for(; i < j; i++)if (~this.transports.indexOf(upgrades[i])) filteredUpgrades.push(upgrades[i]);\n        return filteredUpgrades;\n    }\n}\n$e4147e052f16e9bd$export$4798917dbf149b79.protocol = (0, $4dc1a5a6e008a7e7$export$a51d6b395ff4c65a);\n\n\n\n\n\n\n\nconst $9bfa9dc3bdf2a3df$export$a51d6b395ff4c65a = (0, $e4147e052f16e9bd$export$4798917dbf149b79).protocol;\n\n\nfunction $19b9ebf5d418a7eb$export$128fa18b7194ef(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || typeof location !== \"undefined\" && location;\n    if (null == uri) uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) uri = loc.protocol + uri;\n            else uri = loc.host + uri;\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) uri = loc.protocol + \"//\" + uri;\n            else uri = \"https://\" + uri;\n        }\n        // parse\n        obj = (0, $278b35c341751f73$export$98e6a39c04603d36)(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) obj.port = \"80\";\n        else if (/^(http|ws)s$/.test(obj.protocol)) obj.port = \"443\";\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href = obj.protocol + \"://\" + host + (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n\n\n\nvar $2820aaddc1388453$exports = {};\n\n$parcel$export($2820aaddc1388453$exports, \"protocol\", () => $2820aaddc1388453$export$a51d6b395ff4c65a);\n$parcel$export($2820aaddc1388453$exports, \"PacketType\", () => $2820aaddc1388453$export$84d4095e16c6fc19);\n$parcel$export($2820aaddc1388453$exports, \"Encoder\", () => $2820aaddc1388453$export$a50aceb0e02a00aa);\n$parcel$export($2820aaddc1388453$exports, \"Decoder\", () => $2820aaddc1388453$export$f9de6ca0bc043724);\n\nconst $865b63e01200baa4$var$withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst $865b63e01200baa4$var$isView = (obj)=>{\n    return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n};\nconst $865b63e01200baa4$var$toString = Object.prototype.toString;\nconst $865b63e01200baa4$var$withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && $865b63e01200baa4$var$toString.call(Blob) === \"[object BlobConstructor]\";\nconst $865b63e01200baa4$var$withNativeFile = typeof File === \"function\" || typeof File !== \"undefined\" && $865b63e01200baa4$var$toString.call(File) === \"[object FileConstructor]\";\nfunction $865b63e01200baa4$export$37488ff1135b1696(obj) {\n    return $865b63e01200baa4$var$withNativeArrayBuffer && (obj instanceof ArrayBuffer || $865b63e01200baa4$var$isView(obj)) || $865b63e01200baa4$var$withNativeBlob && obj instanceof Blob || $865b63e01200baa4$var$withNativeFile && obj instanceof File;\n}\nfunction $865b63e01200baa4$export$5234c529abdb5610(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") return false;\n    if (Array.isArray(obj)) {\n        for(let i = 0, l = obj.length; i < l; i++){\n            if ($865b63e01200baa4$export$5234c529abdb5610(obj[i])) return true;\n        }\n        return false;\n    }\n    if ($865b63e01200baa4$export$37488ff1135b1696(obj)) return true;\n    if (obj.toJSON && typeof obj.toJSON === \"function\" && arguments.length === 1) return $865b63e01200baa4$export$5234c529abdb5610(obj.toJSON(), true);\n    for(const key in obj){\n        if (Object.prototype.hasOwnProperty.call(obj, key) && $865b63e01200baa4$export$5234c529abdb5610(obj[key])) return true;\n    }\n    return false;\n}\n\n\nfunction $f55c94805f898ea3$export$ac2edb9eb7af56f6(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = $f55c94805f898ea3$var$_deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return {\n        packet: pack,\n        buffers: buffers\n    };\n}\nfunction $f55c94805f898ea3$var$_deconstructPacket(data, buffers) {\n    if (!data) return data;\n    if ((0, $865b63e01200baa4$export$37488ff1135b1696)(data)) {\n        const placeholder = {\n            _placeholder: true,\n            num: buffers.length\n        };\n        buffers.push(data);\n        return placeholder;\n    } else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for(let i = 0; i < data.length; i++)newData[i] = $f55c94805f898ea3$var$_deconstructPacket(data[i], buffers);\n        return newData;\n    } else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for(const key in data)if (Object.prototype.hasOwnProperty.call(data, key)) newData[key] = $f55c94805f898ea3$var$_deconstructPacket(data[key], buffers);\n        return newData;\n    }\n    return data;\n}\nfunction $f55c94805f898ea3$export$a00da3b1ec037a04(packet, buffers) {\n    packet.data = $f55c94805f898ea3$var$_reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction $f55c94805f898ea3$var$_reconstructPacket(data, buffers) {\n    if (!data) return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" && data.num >= 0 && data.num < buffers.length;\n        if (isIndexValid) return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        else throw new Error(\"illegal attachments\");\n    } else if (Array.isArray(data)) for(let i = 0; i < data.length; i++)data[i] = $f55c94805f898ea3$var$_reconstructPacket(data[i], buffers);\n    else if (typeof data === \"object\") {\n        for(const key in data)if (Object.prototype.hasOwnProperty.call(data, key)) data[key] = $f55c94805f898ea3$var$_reconstructPacket(data[key], buffers);\n    }\n    return data;\n}\n\n\n\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */ const $2820aaddc1388453$var$RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\"\n];\nconst $2820aaddc1388453$export$a51d6b395ff4c65a = 5;\nvar $2820aaddc1388453$export$84d4095e16c6fc19;\n(function(PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})($2820aaddc1388453$export$84d4095e16c6fc19 || ($2820aaddc1388453$export$84d4095e16c6fc19 = {}));\nclass $2820aaddc1388453$export$a50aceb0e02a00aa {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */ constructor(replacer){\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */ encode(obj) {\n        if (obj.type === $2820aaddc1388453$export$84d4095e16c6fc19.EVENT || obj.type === $2820aaddc1388453$export$84d4095e16c6fc19.ACK) {\n            if ((0, $865b63e01200baa4$export$5234c529abdb5610)(obj)) return this.encodeAsBinary({\n                type: obj.type === $2820aaddc1388453$export$84d4095e16c6fc19.EVENT ? $2820aaddc1388453$export$84d4095e16c6fc19.BINARY_EVENT : $2820aaddc1388453$export$84d4095e16c6fc19.BINARY_ACK,\n                nsp: obj.nsp,\n                data: obj.data,\n                id: obj.id\n            });\n        }\n        return [\n            this.encodeAsString(obj)\n        ];\n    }\n    /**\n     * Encode packet as string.\n     */ encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === $2820aaddc1388453$export$84d4095e16c6fc19.BINARY_EVENT || obj.type === $2820aaddc1388453$export$84d4095e16c6fc19.BINARY_ACK) str += obj.attachments + \"-\";\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) str += obj.nsp + \",\";\n        // immediately followed by the id\n        if (null != obj.id) str += obj.id;\n        // json data\n        if (null != obj.data) str += JSON.stringify(obj.data, this.replacer);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */ encodeAsBinary(obj) {\n        const deconstruction = (0, $f55c94805f898ea3$export$ac2edb9eb7af56f6)(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction $2820aaddc1388453$var$isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\nclass $2820aaddc1388453$export$f9de6ca0bc043724 extends (0, $457c1af18044583a$export$4293555f241ae35a) {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */ constructor(reviver){\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */ add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) throw new Error(\"got plaintext data when reconstructing a packet\");\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === $2820aaddc1388453$export$84d4095e16c6fc19.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === $2820aaddc1388453$export$84d4095e16c6fc19.BINARY_ACK) {\n                packet.type = isBinaryEvent ? $2820aaddc1388453$export$84d4095e16c6fc19.EVENT : $2820aaddc1388453$export$84d4095e16c6fc19.ACK;\n                // binary packet's json\n                this.reconstructor = new $2820aaddc1388453$var$BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) super.emitReserved(\"decoded\", packet);\n            } else // non-binary full packet\n            super.emitReserved(\"decoded\", packet);\n        } else if ((0, $865b63e01200baa4$export$37488ff1135b1696)(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) throw new Error(\"got binary data when not reconstructing a packet\");\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        } else throw new Error(\"Unknown type: \" + obj);\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */ decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0))\n        };\n        if ($2820aaddc1388453$export$84d4095e16c6fc19[p.type] === undefined) throw new Error(\"unknown packet type \" + p.type);\n        // look up attachments if type binary\n        if (p.type === $2820aaddc1388453$export$84d4095e16c6fc19.BINARY_EVENT || p.type === $2820aaddc1388453$export$84d4095e16c6fc19.BINARY_ACK) {\n            const start = i + 1;\n            while(str.charAt(++i) !== \"-\" && i != str.length);\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") throw new Error(\"Illegal attachments\");\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while(++i){\n                const c = str.charAt(i);\n                if (\",\" === c) break;\n                if (i === str.length) break;\n            }\n            p.nsp = str.substring(start, i);\n        } else p.nsp = \"/\";\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while(++i){\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length) break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if ($2820aaddc1388453$export$f9de6ca0bc043724.isPayloadValid(p.type, payload)) p.data = payload;\n            else throw new Error(\"invalid payload\");\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        } catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch(type){\n            case $2820aaddc1388453$export$84d4095e16c6fc19.CONNECT:\n                return $2820aaddc1388453$var$isObject(payload);\n            case $2820aaddc1388453$export$84d4095e16c6fc19.DISCONNECT:\n                return payload === undefined;\n            case $2820aaddc1388453$export$84d4095e16c6fc19.CONNECT_ERROR:\n                return typeof payload === \"string\" || $2820aaddc1388453$var$isObject(payload);\n            case $2820aaddc1388453$export$84d4095e16c6fc19.EVENT:\n            case $2820aaddc1388453$export$84d4095e16c6fc19.BINARY_EVENT:\n                return Array.isArray(payload) && (typeof payload[0] === \"number\" || typeof payload[0] === \"string\" && $2820aaddc1388453$var$RESERVED_EVENTS.indexOf(payload[0]) === -1);\n            case $2820aaddc1388453$export$84d4095e16c6fc19.ACK:\n            case $2820aaddc1388453$export$84d4095e16c6fc19.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */ destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */ class $2820aaddc1388453$var$BinaryReconstructor {\n    constructor(packet){\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */ takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = (0, $f55c94805f898ea3$export$a00da3b1ec037a04)(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */ finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n\n\nfunction $e5ed0f2d13e2ffa5$export$af631764ddc44097(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n\n\n\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */ const $365f59c6fb02b648$var$RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1\n});\nclass $365f59c6fb02b648$export$4798917dbf149b79 extends (0, $457c1af18044583a$export$4293555f241ae35a) {\n    /**\n     * `Socket` constructor.\n     */ constructor(io, nsp, opts){\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */ this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */ this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */ this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */ this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */ this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */ this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) this.auth = opts.auth;\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect) this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */ get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */ subEvents() {\n        if (this.subs) return;\n        const io = this.io;\n        this.subs = [\n            (0, $e5ed0f2d13e2ffa5$export$af631764ddc44097)(io, \"open\", this.onopen.bind(this)),\n            (0, $e5ed0f2d13e2ffa5$export$af631764ddc44097)(io, \"packet\", this.onpacket.bind(this)),\n            (0, $e5ed0f2d13e2ffa5$export$af631764ddc44097)(io, \"error\", this.onerror.bind(this)),\n            (0, $e5ed0f2d13e2ffa5$export$af631764ddc44097)(io, \"close\", this.onclose.bind(this))\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */ get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */ connect() {\n        if (this.connected) return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"]) this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState) this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */ open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */ send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */ emit(ev, ...args) {\n        if ($365f59c6fb02b648$var$RESERVED_EVENTS.hasOwnProperty(ev)) throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: (0, $2820aaddc1388453$export$84d4095e16c6fc19).EVENT,\n            data: args\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine && this.io.engine.transport && this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) ;\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        } else this.sendBuffer.push(packet);\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */ _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(()=>{\n            delete this.acks[id];\n            for(let i = 0; i < this.sendBuffer.length; i++)if (this.sendBuffer[i].id === id) this.sendBuffer.splice(i, 1);\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args)=>{\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [\n                null,\n                ...args\n            ]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */ emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject)=>{\n            args.push((arg1, arg2)=>{\n                if (withErr) return arg1 ? reject(arg1) : resolve(arg2);\n                else return resolve(arg1);\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */ _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") ack = args.pop();\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args: args,\n            flags: Object.assign({\n                fromQueue: true\n            }, this.flags)\n        };\n        args.push((err, ...responseArgs)=>{\n            if (packet !== this._queue[0]) // the packet has already been acknowledged\n            return;\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) ack(err);\n                }\n            } else {\n                this._queue.shift();\n                if (ack) ack(null, ...responseArgs);\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */ _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) return;\n        const packet = this._queue[0];\n        if (packet.pending && !force) return;\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */ packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */ onopen() {\n        if (typeof this.auth == \"function\") this.auth((data)=>{\n            this._sendConnectPacket(data);\n        });\n        else this._sendConnectPacket(this.auth);\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */ _sendConnectPacket(data) {\n        this.packet({\n            type: (0, $2820aaddc1388453$export$84d4095e16c6fc19).CONNECT,\n            data: this._pid ? Object.assign({\n                pid: this._pid,\n                offset: this._lastOffset\n            }, data) : data\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */ onerror(err) {\n        if (!this.connected) this.emitReserved(\"connect_error\", err);\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */ onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */ onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace) return;\n        switch(packet.type){\n            case (0, $2820aaddc1388453$export$84d4095e16c6fc19).CONNECT:\n                if (packet.data && packet.data.sid) this.onconnect(packet.data.sid, packet.data.pid);\n                else this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                break;\n            case (0, $2820aaddc1388453$export$84d4095e16c6fc19).EVENT:\n            case (0, $2820aaddc1388453$export$84d4095e16c6fc19).BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case (0, $2820aaddc1388453$export$84d4095e16c6fc19).ACK:\n            case (0, $2820aaddc1388453$export$84d4095e16c6fc19).BINARY_ACK:\n                this.onack(packet);\n                break;\n            case (0, $2820aaddc1388453$export$84d4095e16c6fc19).DISCONNECT:\n                this.ondisconnect();\n                break;\n            case (0, $2820aaddc1388453$export$84d4095e16c6fc19).CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */ onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) args.push(this.ack(packet.id));\n        if (this.connected) this.emitEvent(args);\n        else this.receiveBuffer.push(Object.freeze(args));\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners)listener.apply(this, args);\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") this._lastOffset = args[args.length - 1];\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */ ack(id) {\n        const self = this;\n        let sent = false;\n        return function(...args) {\n            // prevent double callbacks\n            if (sent) return;\n            sent = true;\n            self.packet({\n                type: (0, $2820aaddc1388453$export$84d4095e16c6fc19).ACK,\n                id: id,\n                data: args\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */ onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */ onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */ emitBuffered() {\n        this.receiveBuffer.forEach((args)=>this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet)=>{\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */ ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */ destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy)=>subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */ disconnect() {\n        if (this.connected) this.packet({\n            type: (0, $2820aaddc1388453$export$84d4095e16c6fc19).DISCONNECT\n        });\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) // fire events\n        this.onclose(\"io client disconnect\");\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */ close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */ compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */ get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */ timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */ onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */ prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */ offAny(listener) {\n        if (!this._anyListeners) return this;\n        if (listener) {\n            const listeners = this._anyListeners;\n            for(let i = 0; i < listeners.length; i++)if (listener === listeners[i]) {\n                listeners.splice(i, 1);\n                return this;\n            }\n        } else this._anyListeners = [];\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */ listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */ onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */ prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */ offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) return this;\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for(let i = 0; i < listeners.length; i++)if (listener === listeners[i]) {\n                listeners.splice(i, 1);\n                return this;\n            }\n        } else this._anyOutgoingListeners = [];\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */ listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */ notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners)listener.apply(this, packet.data);\n        }\n    }\n}\n\n\n\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */ function $0a06b747f4081c6f$export$2d38012449449c89(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */ $0a06b747f4081c6f$export$2d38012449449c89.prototype.duration = function() {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */ $0a06b747f4081c6f$export$2d38012449449c89.prototype.reset = function() {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */ $0a06b747f4081c6f$export$2d38012449449c89.prototype.setMin = function(min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */ $0a06b747f4081c6f$export$2d38012449449c89.prototype.setMax = function(max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */ $0a06b747f4081c6f$export$2d38012449449c89.prototype.setJitter = function(jitter) {\n    this.jitter = jitter;\n};\n\n\n\nclass $84cdc7ed694072f2$export$d0d38e7dec7a1a61 extends (0, $457c1af18044583a$export$4293555f241ae35a) {\n    constructor(uri, opts){\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        (0, $fcbdbaa3cd961e27$export$2f67576668b97183)(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new (0, $0a06b747f4081c6f$export$2d38012449449c89)({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor()\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || $2820aaddc1388453$exports;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect) this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length) return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined) return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined) return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 || _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined) return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 || _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined) return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 || _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length) return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */ maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) // keeps reconnection from firing twice for the same reconnection loop\n        this.reconnect();\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */ open(fn) {\n        if (~this._readyState.indexOf(\"open\")) return this;\n        this.engine = new (0, $e4147e052f16e9bd$export$4798917dbf149b79)(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = (0, $e5ed0f2d13e2ffa5$export$af631764ddc44097)(socket, \"open\", function() {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = (0, $e5ed0f2d13e2ffa5$export$af631764ddc44097)(socket, \"error\", (err)=>{\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) fn(err);\n            else // Only do this if there is no fn to handle the error\n            self.maybeReconnectOnOpen();\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) openSubDestroy(); // prevents a race condition with the 'open' event\n            // set timer\n            const timer = this.setTimeoutFn(()=>{\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) timer.unref();\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */ connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */ onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push((0, $e5ed0f2d13e2ffa5$export$af631764ddc44097)(socket, \"ping\", this.onping.bind(this)), (0, $e5ed0f2d13e2ffa5$export$af631764ddc44097)(socket, \"data\", this.ondata.bind(this)), (0, $e5ed0f2d13e2ffa5$export$af631764ddc44097)(socket, \"error\", this.onerror.bind(this)), (0, $e5ed0f2d13e2ffa5$export$af631764ddc44097)(socket, \"close\", this.onclose.bind(this)), (0, $e5ed0f2d13e2ffa5$export$af631764ddc44097)(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */ onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */ ondata(data) {\n        try {\n            this.decoder.add(data);\n        } catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */ ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        (0, $cef15c53d6c0c24e$export$bdd553fddd433dcb)(()=>{\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */ onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */ socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new (0, $365f59c6fb02b648$export$4798917dbf149b79)(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        } else if (this._autoConnect && !socket.active) socket.connect();\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */ _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps){\n            const socket = this.nsps[nsp];\n            if (socket.active) return;\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */ _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for(let i = 0; i < encodedPackets.length; i++)this.engine.write(encodedPackets[i], packet.options);\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */ cleanup() {\n        this.subs.forEach((subDestroy)=>subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */ _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine) this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */ disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */ onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) this.reconnect();\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */ reconnect() {\n        if (this._reconnecting || this.skipReconnect) return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        } else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(()=>{\n                if (self.skipReconnect) return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect) return;\n                self.open((err)=>{\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    } else self.onreconnect();\n                });\n            }, delay);\n            if (this.opts.autoUnref) timer.unref();\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */ onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n\n\n\n\n/**\n * Managers cache.\n */ const $74cfaa375dcbd11d$var$cache = {};\nfunction $74cfaa375dcbd11d$export$841407ceb083bd74(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = (0, $19b9ebf5d418a7eb$export$128fa18b7194ef)(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = $74cfaa375dcbd11d$var$cache[id] && path in $74cfaa375dcbd11d$var$cache[id][\"nsps\"];\n    const newConnection = opts.forceNew || opts[\"force new connection\"] || false === opts.multiplex || sameNamespace;\n    let io;\n    if (newConnection) io = new (0, $84cdc7ed694072f2$export$d0d38e7dec7a1a61)(source, opts);\n    else {\n        if (!$74cfaa375dcbd11d$var$cache[id]) $74cfaa375dcbd11d$var$cache[id] = new (0, $84cdc7ed694072f2$export$d0d38e7dec7a1a61)(source, opts);\n        io = $74cfaa375dcbd11d$var$cache[id];\n    }\n    if (parsed.query && !opts.query) opts.query = parsed.queryKey;\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign($74cfaa375dcbd11d$export$841407ceb083bd74, {\n    Manager: $84cdc7ed694072f2$export$d0d38e7dec7a1a61,\n    Socket: $365f59c6fb02b648$export$4798917dbf149b79,\n    io: $74cfaa375dcbd11d$export$841407ceb083bd74,\n    connect: $74cfaa375dcbd11d$export$841407ceb083bd74\n});\n\n\nvar $81586d39ed578c8f$require$io = $74cfaa375dcbd11d$export$841407ceb083bd74;\nvar $9a3a59fd4e8a6314$exports = {};\n/**\n * This module contains classes and functions intended for use by both the\n * client and the server, in order to provide a common interface.\n *\n * <br>\n * <img\n * src =\n * \"https://raw.githubusercontent.com/wiki/hcilab/wams/graphs/shared.png\"\n * style = \"max-height: 250px;\"\n * >\n *\n * @module shared\n */ \"use strict\";\nvar $022b237644207d82$exports = {};\n\"use strict\";\n/**\n * Given a previous ID, returns the next unique ID in the sequence.\n *\n * @inner\n * @memberof module:shared.IdStamper\n * @throws Error\n *\n * @param {number} previous - The previously assigned unique ID.\n *\n * @returns {number} The next unique ID\n */ function $022b237644207d82$var$getUniqueId(previous) {\n    const next = previous + 1;\n    if (Number.isSafeInteger(next)) return next;\n    throw new Error(\"Ran out of unique IDs!\");\n}\n/**\n * Class for stamping and cloning integer IDs. Stamped IDs are unique on a\n * per-IdStamper basis.\n *\n * @example\n * const stamper = new IdStamper();\n * const obj = {};\n * stamper.stampNewId(obj);\n * console.log(obj.id);  // an integer unique to Ids stamped by stamper\n * obj.id = 2;           // has no effect.\n * delete obj.id;        // false\n *\n * const danger = {};\n * IdStamper.cloneId(danger, obj.id); // Will work. 'danger' & 'obj' are\n *                                    // now both using the same Id.\n *\n * @memberof module:shared\n */ class $022b237644207d82$var$IdStamper {\n    constructor(){\n        /**\n     * The value of the previously assigned ID.\n     *\n     * @type {number}\n     * @memberof module:shared.IdStamper\n     */ this.previousId = 0;\n    }\n    /**\n   * Stamps an integer ID, unique to this IdStamper, onto the given object.\n   *\n   * All Ids produced by this method are guaranteed to be unique, on a\n   * per-stamper basis. (Two uniquely constructed stampers can and will generate\n   * identical Ids).\n   *\n   * @param {Object} obj - An object onto which an ID will be stamped.\n   */ stampNewId(obj) {\n        this.previousId = $022b237644207d82$var$getUniqueId(this.previousId);\n        Object.defineProperty(obj, \"id\", {\n            value: this.previousId,\n            configurable: false,\n            enumerable: true,\n            writable: false\n        });\n    }\n    /**\n   * Stamps a clone of the given ID onto the given object.\n   *\n   * @param {Object} obj - An object onto which an ID will be stamped.\n   * @param {number} id - The ID to clone onto obj.\n   */ static cloneId(obj, id) {\n        if (Number.isSafeInteger(id)) Object.defineProperty(obj, \"id\", {\n            value: id,\n            configurable: false,\n            enumerable: true,\n            writable: false\n        });\n    }\n}\n$022b237644207d82$exports = $022b237644207d82$var$IdStamper;\n\n\nvar $c680aea5536b41c4$exports = {};\n\"use strict\";\n/**\n * Enum of the various message types.\n *\n * @name Message\n * @enum {string}\n * @readonly\n */ const $c680aea5536b41c4$var$Message = {\n    // For the server to inform about changes to the model\n    /** @const */ ADD_ELEMENT: \"add-element\",\n    /** @const */ ADD_IMAGE: \"add-image\",\n    /** @const */ ADD_ITEM: \"add-item\",\n    /** @const */ ADD_SHADOW: \"add-shadow\",\n    /** @const */ ADD_GROUP: \"add-group\",\n    /** @const */ RM_ITEM: \"remove-item\",\n    /** @const */ RM_SHADOW: \"remove-shadow\",\n    /** @const */ UD_ITEM: \"update-item\",\n    /** @const */ UD_SHADOW: \"update-shadow\",\n    /** @const */ UD_VIEW: \"update-view\",\n    // For hopefully occasional extra adjustments to objects in the model.\n    /** @const */ RM_ATTRS: \"remove-attributes\",\n    /** @const */ SET_ITEMS: \"set-items\",\n    /** @const */ SET_ATTRS: \"set-attributes\",\n    /** @const */ SET_IMAGE: \"set-image\",\n    /** @const */ SET_RENDER: \"set-render\",\n    /** @const */ SET_PARENT: \"set-parent\",\n    // Connection establishment related (disconnect, initial setup)\n    /** @const */ INITIALIZE: \"initialize\",\n    /** @const */ LAYOUT: \"layout\",\n    /** @const */ FULL: \"full\",\n    // User event related\n    /** @const */ CLICK: \"click\",\n    /** @const */ RESIZE: \"resize\",\n    /** @const */ SWIPE: \"swipe\",\n    /** @const */ TRACK: \"track\",\n    /** @const */ TRANSFORM: \"transform\",\n    // Multi-device gesture related\n    /** @const */ POINTER: \"pointer\",\n    /** @const */ BLUR: \"blur\",\n    // Page event related\n    /** @const */ IMG_LOAD: \"image-loaded\",\n    // User defined actions\n    /** @const */ DISPATCH: \"dispatch\"\n};\nObject.freeze($c680aea5536b41c4$var$Message);\n$c680aea5536b41c4$exports = $c680aea5536b41c4$var$Message;\n\n\nvar $b0140f97e673c7b5$exports = {};\n\"use strict\";\n/**\n * This Item class provides a common interface between the client and the server\n * by which the Items can interact safely.\n *\n * @class Item\n * @memberof module:shared\n */ class $b0140f97e673c7b5$var$Item {\n    constructor(values = {}){\n        Object.assign(this, {\n            id: null,\n            /**\n       * @name x\n       * @type {number}\n       * @default 0\n       * @memberof module:shared.Item\n       * @instance\n       */ x: 0,\n            /**\n       * @name y\n       * @type {number}\n       * @default 0\n       * @memberof module:shared.Item\n       * @instance\n       */ y: 0,\n            /**\n       * @name rotation\n       * @type {number}\n       * @default 0\n       * @memberof module:shared.Item\n       * @instance\n       */ rotation: 0,\n            /**\n       * @name scale\n       * @type {number}\n       * @default 1\n       * @memberof module:shared.Item\n       * @instance\n       */ scale: 1,\n            /**\n       * @name type\n       * @type {string}\n       * @default 'item/polygonal'\n       * @memberof module:shared.Item\n       * @instance\n       */ type: \"item/polygonal\",\n            /**\n       * Whether to raise item upon interaction or lock Z position instead.\n       *\n       * @name lockZ\n       * @type {boolean}\n       * @default false\n       * @memberof module:shared.Item\n       * @instance\n       */ lockZ: false,\n            ...values\n        });\n    }\n    /**\n   * @return object A serialized version of the item, ready for transmission.\n   */ toJSON() {\n        return {\n            id: this.id,\n            x: this.x,\n            y: this.y,\n            rotation: this.rotation,\n            scale: this.scale,\n            type: this.type,\n            lockZ: this.lockZ\n        };\n    }\n}\nclass $b0140f97e673c7b5$var$RectangularItem extends $b0140f97e673c7b5$var$Item {\n    constructor(values = {}){\n        super({\n            /**\n       * @name width\n       * @type {number}\n       * @default 400\n       * @memberof module:shared.WamsElement\n       * @instance\n       */ width: 400,\n            /**\n       * @name height\n       * @type {number}\n       * @default 300\n       * @memberof module:shared.WamsElement\n       * @instance\n       */ height: 300,\n            type: \"item/rectangular\",\n            ...values\n        });\n    }\n    /**\n   * @return object A serialized version of the item, ready for transmission.\n   * @override\n   */ toJSON() {\n        return {\n            ...super.toJSON(),\n            width: this.width,\n            height: this.height\n        };\n    }\n}\n/**\n * This WamsElement class provides a common interface between the client and the\n * server by which the elements interact safely.\n *\n * @class WamsElement\n * @memberof module:shared\n */ class $b0140f97e673c7b5$var$WamsElement extends $b0140f97e673c7b5$var$RectangularItem {\n    constructor(values = {}){\n        super({\n            /**\n       * Type of DOM element this represents.\n       *\n       * @name tagname\n       * @type {string}\n       * @default 'div'\n       * @memberof module:shared.WamsElement\n       * @instance\n       */ tagname: \"div\",\n            type: \"item/element\",\n            ...values\n        });\n    }\n    /**\n   * @return object A serialized version of the item, ready for transmission.\n   */ toJSON() {\n        return {\n            ...super.toJSON(),\n            tagname: this.tagname\n        };\n    }\n}\n/**\n * This WamsImage class provides a common interface between the client and the\n * server by which the images can interact safely.\n *\n * @class WamsImage\n * @memberof module:shared\n */ class $b0140f97e673c7b5$var$WamsImage extends $b0140f97e673c7b5$var$RectangularItem {\n    constructor(values = {}){\n        super({\n            type: \"item/image\",\n            ...values\n        });\n    }\n}\n/**\n * This View class provides a common interface between the client and\n * the server by which the Views can interact safely.\n *\n * @class View\n * @memberof module:shared\n */ class $b0140f97e673c7b5$var$View extends $b0140f97e673c7b5$var$RectangularItem {\n    constructor(values = {}){\n        super({\n            width: 1600,\n            height: 900,\n            /**\n       * The index is an integer identifying the View, coming from ServerController.\n       *\n       * @name index\n       * @type {number}\n       * @default undefined\n       * @memberof module:shared.View\n       * @instance\n       */ index: undefined,\n            type: \"view/background\",\n            ...values\n        });\n    }\n    /**\n   * @return object A serialized version of the view, ready for transmission.\n   * @override\n   */ toJSON() {\n        return {\n            ...super.toJSON(),\n            index: this.index\n        };\n    }\n}\n$b0140f97e673c7b5$exports = {\n    Item: $b0140f97e673c7b5$var$Item,\n    View: $b0140f97e673c7b5$var$View,\n    WamsElement: $b0140f97e673c7b5$var$WamsElement,\n    WamsImage: $b0140f97e673c7b5$var$WamsImage\n};\n\n\nvar $2ddb4406b5710b24$exports = {};\n\"use strict\";\n/**\n * @namespace utilities\n * @memberof module:shared\n */ /**\n * Plain, simple NOP definition. If there's a faster NOP, redefine it here.\n *\n * @memberof module:shared.utilities\n */ const $2ddb4406b5710b24$var$NOP = ()=>{};\n/**\n * Removes the given item from the given array, according to its Id.\n *\n * @memberof module:shared.utilities\n *\n * @param {Object[]} array - The array to modify.\n * @param {Object} item  - The item to remove from array according to its Id.\n *\n * @return {boolean} True if the item was found and removed, false otherwise.\n */ function $2ddb4406b5710b24$var$removeById(array, item) {\n    const idx = array.findIndex((o)=>o.id === item.id);\n    if (idx >= 0) {\n        array.splice(idx, 1);\n        return true;\n    }\n    return false;\n}\n$2ddb4406b5710b24$exports = Object.freeze({\n    NOP: $2ddb4406b5710b24$var$NOP,\n    removeById: $2ddb4406b5710b24$var$removeById\n});\n\n\nvar $77dc2d94e185a53d$exports = {};\n\"use strict\";\nvar $8a13928bd6cf2429$exports = {};\n\"use strict\";\n/**\n * Defines a set of basic operations on a point in a two dimensional space.\n *\n * @memberof module:shared\n *\n * @param {number} [x=0] - x coordinate of the point.\n * @param {number} [y=0] - y coordinate of the point.\n */ class $8a13928bd6cf2429$var$Point2D {\n    constructor(x = 0, y = 0){\n        /**\n     * X coordinate of the point.\n     *\n     * @type {number}\n     */ this.x = x;\n        /**\n     * Y coordinate of the point.\n     *\n     * @type {number}\n     */ this.y = y;\n    }\n    /**\n   * Add the given point to this point.\n   *\n   * @param {module:shared.Point2D} point - The point to add.\n   *\n   * @return {module:shared.Point2D} this\n   */ add({ x: x = 0 , y: y = 0  }) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    /**\n   * Calculates the angle between this point and the given point.\n   *\n   * @param {!module:shared.Point2D} point - Projected point for calculating\n   * the angle.\n   *\n   * @return {number} Radians along the unit circle where the projected point\n   * lies.\n   */ angleTo(point) {\n        return Math.atan2(point.y - this.y, point.x - this.x);\n    }\n    /**\n   * Determine the average distance from this point to the provided array of\n   * points.\n   *\n   * @param {!module:shared.Point2D[]} points - the Point2D objects to\n   * calculate the average distance to.\n   *\n   * @return {number} The average distance from this point to the provided\n   * points.\n   */ averageDistanceTo(points) {\n        return this.totalDistanceTo(points) / points.length;\n    }\n    /**\n   * Clones this point.\n   *\n   * @returns {module:shared.Point2D} An exact clone of this point.\n   */ clone() {\n        return new $8a13928bd6cf2429$var$Point2D(this.x, this.y);\n    }\n    /**\n   * Calculates the distance between two points.\n   *\n   * @param {!module:shared.Point2D} point - Point to which the distance is\n   * calculated.\n   *\n   * @return {number} The distance between the two points, a.k.a. the\n   * hypoteneuse.\n   */ distanceTo(point) {\n        return Math.hypot(point.x - this.x, point.y - this.y);\n    }\n    /**\n   * Divide the point's values by the given amount.\n   *\n   * @param {number} coefficient - divide x,y by this amount.\n   *\n   * @return {module:shared.Point2D} this\n   */ divideBy(coefficient = 1) {\n        this.x /= coefficient;\n        this.y /= coefficient;\n        return this;\n    }\n    /**\n   * Tests if a point is Left|On|Right of an infinite line. Assumes that the\n   * given points are such that one is above and one is below this point. Note\n   * that the semantics of left/right is based on the normal coordinate space,\n   * not the y-axis-inverted coordinate space of images and the canvas.\n   *\n   * @see {@link http://geomalgorithms.com/a03-_inclusion.html}\n   *\n   * @param {module:shared.Point2D} p0 - first point of the line.\n   * @param {module:shared.Point2D} p1 - second point of the line.\n   *\n   * @return {number} >0 if this point is left of the line through p0 and p1\n   * @return {number} =0 if this point is on the line\n   * @return {number} <0 if this point is right of the line\n   */ isLeftOf(p0, p1) {\n        const dl = p1.minus(p0);\n        const dp = this.minus(p0);\n        return dl.x * dp.y - dl.y * dp.x;\n    }\n    /**\n   * Subtracts the given point from this point to form a new point.\n   *\n   * @param {module:shared.Point2D} p - Point to subtract from this point.\n   *\n   * @return {module:shared.Point2D} A new point which is the simple subraction\n   * of the given point from this point.\n   */ minus({ x: x = 0 , y: y = 0  }) {\n        return new $8a13928bd6cf2429$var$Point2D(this.x - x, this.y - y);\n    }\n    /**\n   * Multiply this point by the given point, in-place.\n   *\n   * @param {number} coefficient - Amount by which to multiply the values in\n   * this point.\n   *\n   * @return {module:shared.Point2D} this\n   */ multiplyBy(coefficient = 1) {\n        this.x *= coefficient;\n        this.y *= coefficient;\n        return this;\n    }\n    /**\n   * Rotate the point by theta radians.\n   *\n   * @param {number} theta - Amount of rotation to apply, in radians.\n   *\n   * @return {module:shared.Point2D} this\n   */ rotate(theta = 0) {\n        const { x: x , y: y  } = this;\n        const cosTheta = Math.cos(theta);\n        const sinTheta = Math.sin(theta);\n        this.x = x * cosTheta - y * sinTheta;\n        this.y = x * sinTheta + y * cosTheta;\n        return this;\n    }\n    /**\n   * Calculates the total distance from this point to an array of points.\n   *\n   * @param {!module:shared.Point2D[]} points - The array of Point2D objects to\n   * calculate the total distance to.\n   *\n   * @return {number} The total distance from this point to the provided points.\n   */ totalDistanceTo(points) {\n        return points.reduce((d, p)=>d + this.distanceTo(p), 0);\n    }\n    /**\n   * Calculates the midpoint of a list of points.\n   *\n   * @param {module:shared.Point2D[]} points - The array of Point2D objects for\n   * which to calculate the midpoint\n   *\n   * @return {?module:shared.Point2D} The midpoint of the provided points. Null\n   * if the provided array is empty.\n   */ static midpoint(points = []) {\n        if (points.length === 0) return null;\n        const total = $8a13928bd6cf2429$var$Point2D.sum(points);\n        return new $8a13928bd6cf2429$var$Point2D(total.x / points.length, total.y / points.length);\n    }\n    /**\n   * Calculates the sum of the given points.\n   *\n   * @param {module:shared.Point2D[]} points - The Point2D objects to sum up.\n   *\n   * @return {module:shared.Point2D} A new Point2D representing the sum of the\n   * given points.\n   */ static sum(points = []) {\n        return points.reduce((total, pt)=>total.add(pt), new $8a13928bd6cf2429$var$Point2D(0, 0));\n    }\n}\n$8a13928bd6cf2429$exports = $8a13928bd6cf2429$var$Point2D;\n\n\n/**\n * A polygon in two dimensions. Can be complex.\n *\n * @memberof module:shared\n * @implements {module:shared.Hitbox}\n *\n * @param {module:shared.Point2D[]} points - The points that make up the\n * polygon, given in order (clockwise and counter-clockwise are both fine).\n */ class $77dc2d94e185a53d$var$Polygon2D {\n    constructor(points){\n        if (points.length < 1) throw new TypeError(\"A polygon requires at least one vertex.\");\n        /**\n     * A closed list of the points making up this polygon. \"Closed\" here means\n     * that the first and last entries of the list are the same. Closing the\n     * polygon in this manner is handled by the constructor.\n     *\n     * @type {module:shared.Point2D[]}\n     */ this.points = points.map(({ x: x , y: y  })=>new $8a13928bd6cf2429$exports(x, y));\n        /**\n     * Store the centroid of the polygon for quick hit tests.\n     *\n     * @type {module:shared.Point2D[]}\n     */ this.centroid = $8a13928bd6cf2429$exports.midpoint(this.points);\n        /**\n     * Save the maximum radius of the polygon for quick hit tests.\n     *\n     * @type {number}\n     */ this.radius = this.points.reduce((max, point)=>{\n            const curr = this.centroid.distanceTo(point);\n            return max > curr ? max : curr;\n        });\n        // Close the polygon.\n        this.points.push(this.points[0].clone());\n    }\n    /**\n   * Determines if a point is inside the polygon.\n   *\n   * Rules for deciding whether a point is inside the polygon:\n   *  1. If it is clearly outside, return false.\n   *  2. If it is clearly inside, return true.\n   *  3. If it is on a left or bottom edge, return true.\n   *  4. If it is on a right or top edge, return false.\n   *  5. If it is on a lower-left vertex, return true.\n   *  6. If it is on a lower-right, upper-left, or upper-right vertex, return\n   *      false.\n   *\n   * Uses the winding number method for robust and efficient point-in-polygon\n   * detection.\n   * @see {@link http://geomalgorithms.com/a03-_inclusion.html}\n   *\n   * @param {module:shared.Point2D[]} p - Point to test.\n   *\n   * @return {boolean} true if the point is inside the polygon, false otherwise.\n   */ contains(p) {\n        if (this.centroid.distanceTo(p) > this.radius) return false;\n        return this.winding_number(p) !== 0;\n    }\n    /**\n   * Winding number test for a point in a polygon\n   *\n   * @see {@link http://geomalgorithms.com/a03-_inclusion.html}\n   *\n   * @param {module:shared.Point2D[]} point - The point to test.\n   *\n   * @return {number} The winding number (=0 only when P is outside)\n   */ winding_number(p) {\n        let wn = 0;\n        const point = new $8a13928bd6cf2429$exports(p.x, p.y);\n        for(let i = 0; i < this.points.length - 1; ++i)if (this.points[i].y <= point.y) {\n            if (this.points[i + 1].y > point.y) // Upward crossing\n            {\n                if (point.isLeftOf(this.points[i], this.points[i + 1]) > 0) ++wn;\n            }\n        } else {\n            if (this.points[i + 1].y <= point.y) // Downward crossing\n            {\n                if (point.isLeftOf(this.points[i], this.points[i + 1]) < 0) --wn;\n            }\n        }\n        return wn;\n    }\n}\n$77dc2d94e185a53d$exports = $77dc2d94e185a53d$var$Polygon2D;\n\n\n\nvar $6ca1b6f3784b814a$exports = {};\n\"use strict\";\n/**\n * A rectangular hitbox. Remember that this rectangle describes the item as if\n * its settings were x=0, y=0, scale=1, rotation=0.\n *\n * @memberof module:shared\n * @implements {module:shared.Hitbox}\n *\n * @param {number} width - The width of the rectangle.\n * @param {number} height - The height of the rectangle.\n * @param {number} [x=0] - The x offset of the rectangle.\n * @param {number} [y=0] - The y offset of the rectangle.\n */ class $6ca1b6f3784b814a$var$Rectangle {\n    constructor(width, height, x = 0, y = 0){\n        /**\n     * The width of the rectangle.\n     *\n     * @type {number}\n     */ this.width = width;\n        /**\n     * The height of the rectangle.\n     *\n     * @type {number}\n     */ this.height = height;\n        /**\n     * The x coordinate of the rectangle.\n     *\n     * @type {number}\n     */ this.x = x;\n        /**\n     * The y coordinate of the rectangle.\n     *\n     * @type {number}\n     */ this.y = y;\n    }\n    /**\n   * Determines if a point is inside the rectangle.\n   *\n   * @param {module:shared.Point2D} point - The point to test.\n   *\n   * @return {boolean} true if the point is inside the rectangle, false\n   * otherwise.\n   */ contains(point) {\n        return point.x >= this.x && point.x <= this.x + this.width && point.y >= this.y && point.y <= this.y + this.height;\n    }\n}\n$6ca1b6f3784b814a$exports = $6ca1b6f3784b814a$var$Rectangle;\n\n\nvar $dc4ea179441b1f14$exports = {};\n\"use strict\";\n/**\n * A simple line hitbox. Remember that this line describes the item as if\n * its settings were x=0, y=0, scale=1, rotation=0.\n *\n * The hitbox supports a line whose enpoint is rounded with a radius of width/2.\n *\n * @memberof module:shared\n * @implements {module:shared.Hitbox}\n *\n * @param {number} [x1=0] - The x1 offset of the line.\n * @param {number} [y1=0] - The y1 offset of the line.\n * @param {number} [x2=1] - The x2 offset of the line.\n * @param {number} [y2=1] - The y2 offset of the line.\n * @param {number} [width=1] - The width of the line.\n */ class $dc4ea179441b1f14$var$RoundedLine {\n    constructor(x1 = 0, y1 = 0, x2 = 1, y2 = 1, width = 1){\n        /**\n     * The x1 coordinate of the line.\n     *\n     * @type {number}\n     * @default 0\n     */ this.x1 = x1;\n        /**\n     * The y1 coordinate of the line.\n     *\n     * @type {number}\n     * @default 0\n     */ this.y1 = y1;\n        /**\n     * The x2 coordinate of the line.\n     *\n     * @type {number}\n     * @default 1\n     */ this.x2 = x2;\n        /**\n     * The y1 coordinate of the line.\n     *\n     * @type {number}\n     * @default 1\n     */ this.y2 = y2;\n        /**\n     * The width of the line.\n     *\n     * @type {number}\n     * @default 1\n     */ this.width = width;\n    }\n    /**\n   * Determines if a point is inside the line.\n   *\n   * @param {module:shared.Point2D} point - The point to test.\n   *\n   * @return {boolean} true if the point is inside the line, false otherwise.\n   */ contains(point) {\n        // Distance to first endpoint\n        const A = point.x - this.x1;\n        const B = point.y - this.y1;\n        // Length of line\n        const C = this.x2 - this.x1;\n        const D = this.y2 - this.y1;\n        const dot = A * C + B * D;\n        const lengthSquared = C * C + D * D;\n        // Find the nearest point along the line\n        let param = -1;\n        if (lengthSquared !== 0) param = dot / lengthSquared;\n        let xx, yy;\n        if (param < 0) {\n            xx = this.x1;\n            yy = this.y1;\n        } else if (param > 1) {\n            xx = this.x2;\n            yy = this.y2;\n        } else {\n            xx = this.x1 + param * C;\n            yy = this.y1 + param * D;\n        }\n        // Is the distance to the nearest point less than half the width?\n        const dx = point.x - xx;\n        const dy = point.y - yy;\n        const dist = Math.sqrt(dx * dx + dy * dy);\n        return dist <= this.width / 2;\n    }\n}\n$dc4ea179441b1f14$exports = $dc4ea179441b1f14$var$RoundedLine;\n\n\nvar $187e1e6ba0cb70c9$exports = {};\n\"use strict\";\n/**\n * A simple circular hitbox. Remember that this circle describes the item as if\n * its settings were x=0, y=0, scale=1, rotation=0.\n *\n * @memberof module:shared\n * @implements {module:shared.Hitbox}\n *\n * @param {number} radius - The radius of the circle.\n * @param {number} [x=0] - The x offset of the circle.\n * @param {number} [y=0] - The y offset of the circle.\n */ class $187e1e6ba0cb70c9$var$Circle {\n    constructor(radius, x = 0, y = 0){\n        /**\n     * The radius of the circle.\n     *\n     * @type {number}\n     */ this.radius = radius;\n        /**\n     * The x coordinate of the circle.\n     *\n     * @type {number}\n     */ this.x = x;\n        /**\n     * The y coordinate of the circle.\n     *\n     * @type {number}\n     */ this.y = y;\n    }\n    /**\n   * Determines if a point is inside the circle.\n   *\n   * @param {module:shared.Point2D} point - The point to test.\n   *\n   * @return {boolean} true if the point is inside the circle, false\n   * otherwise.\n   */ contains(point) {\n        const distance = Math.sqrt(Math.pow(point.x - this.x, 2) + Math.pow(point.y - this.y, 2));\n        return distance <= this.radius;\n    }\n}\n$187e1e6ba0cb70c9$exports = $187e1e6ba0cb70c9$var$Circle;\n\n\nvar $bd2734bd55df0418$exports = {};\n\"use strict\";\n/**\n * An oval hitbox. Remember that this oval describes the item as if its settings\n * were x=0, y=0, scale=1, rotation=0.\n *\n * @memberof module:shared\n * @implements {module:shared.Hitbox}\n *\n * @param {number} radiusX - The radius of the oval in the x direction.\n * @param {number} radiusY - The radius of the oval in the y direction.\n * @param {number} [x=0] - The x offset of the oval.\n * @param {number} [y=0] - The y offset of the oval.\n */ class $bd2734bd55df0418$var$Oval {\n    constructor(radiusX, radiusY, x = 0, y = 0){\n        /**\n     * The radius of the circle in the x direction.\n     *\n     * @type {number}\n     */ this.radiusX = radiusX;\n        /**\n     * The radius of the circle in the y direction.\n     *\n     * @type {number}\n     */ this.radiusY = radiusY;\n        /**\n     * The x coordinate of the centre of the oval.\n     *\n     * @type {number}\n     */ this.x = x;\n        /**\n     * The y coordinate of the centre of the oval.\n     *\n     * @type {number}\n     */ this.y = y;\n    }\n    /**\n   * Determines if a point is inside the oval.\n   *\n   * @param {module:shared.Point2D} point - The point to test.\n   *\n   * @return {boolean} true if the point is inside the oval, false otherwise.\n   */ contains(point) {\n        const distance = Math.sqrt(Math.pow(point.x - this.x, 2) / Math.pow(this.radiusX, 2) + Math.pow(point.y - this.y, 2) / Math.pow(this.radiusY, 2));\n        return distance <= 1;\n    }\n}\n$bd2734bd55df0418$exports = $bd2734bd55df0418$var$Oval;\n\n\n/**\n * This object stores a set of core constants for use by both the client and\n *  the server.\n *\n * @memberof module:shared\n * @enum {number}\n */ const $9a3a59fd4e8a6314$var$constants = {\n    // General constants\n    ROTATE_0: 0,\n    ROTATE_90: Math.PI / 2,\n    ROTATE_180: Math.PI,\n    ROTATE_270: Math.PI * 1.5,\n    ROTATE_360: Math.PI * 2,\n    // Namespaces\n    /** @type {string} */ NS_WAMS: \"/wams\",\n    NS_WAMS_TRACKING: \"/\"\n};\n/**\n * A list of colours, for use by the API for shadows, and by end-point apps too\n * if desired.\n *\n * @memberof module:shared\n * @type {string[]}\n */ const $9a3a59fd4e8a6314$var$colours = [\n    \"saddlebrown\",\n    \"red\",\n    \"blue\",\n    \"lime\",\n    \"darkorange\",\n    \"purple\",\n    \"yellow\",\n    \"aqua\",\n    \"darkgreen\",\n    \"fuchsia\"\n];\n/*\n * Package up the module and freeze it for delivery.\n */ $9a3a59fd4e8a6314$exports = Object.freeze({\n    colours: $9a3a59fd4e8a6314$var$colours,\n    constants: $9a3a59fd4e8a6314$var$constants,\n    Circle: $187e1e6ba0cb70c9$exports,\n    Oval: $bd2734bd55df0418$exports,\n    IdStamper: $022b237644207d82$exports,\n    Message: $c680aea5536b41c4$exports,\n    Point2D: $8a13928bd6cf2429$exports,\n    Polygon2D: $77dc2d94e185a53d$exports,\n    Rectangle: $6ca1b6f3784b814a$exports,\n    RoundedLine: $dc4ea179441b1f14$exports,\n    ...$b0140f97e673c7b5$exports,\n    ...$2ddb4406b5710b24$exports\n});\n\n\nvar $81586d39ed578c8f$require$constants = $9a3a59fd4e8a6314$exports.constants;\nvar $81586d39ed578c8f$require$Message = $9a3a59fd4e8a6314$exports.Message;\nvar $81586d39ed578c8f$require$NOP = $9a3a59fd4e8a6314$exports.NOP;\nvar $2d527d3dfbe18544$exports = {};\n\"use strict\";\nvar $c7ae6dd8608f332b$exports = {};\n/**\n * The API interface for Westures. Defines a number of gestures on top of the\n * engine provided by {@link\n * https://mvanderkamp.github.io/westures-core/index.html|westures-core}.\n *\n * @namespace westures\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$exports = {};\n/**\n * The global API interface for westures-core. Exposes all classes, constants,\n * and routines used by the package. Use responsibly.\n *\n * @namespace westures-core\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$exports = {};\n\"use strict\";\nlet $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$var$g_id = 0;\n/**\n * The Gesture class that all gestures inherit from. A custom gesture class will\n * need to override some or all of the four phase \"hooks\": start, move, end, and\n * cancel.\n *\n * @memberof westures-core\n *\n * @param {string} type - The name of the gesture.\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n *    is recognized on the associated element.\n * @param {object} [options] - Generic gesture options\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n */ class $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$var$Gesture {\n    constructor(type, element, handler, options = {}){\n        if (typeof type !== \"string\") throw new TypeError(\"Gestures require a string type / name\");\n        /**\n     * The name of the gesture. (e.g. 'pan' or 'tap' or 'pinch').\n     *\n     * @type {string}\n     */ this.type = type;\n        /**\n     * The unique identifier for each gesture. This allows for distinctions\n     * across instances of Gestures that are created on the fly (e.g.\n     * gesture-tap-1, gesture-tap-2).\n     *\n     * @type {string}\n     */ this.id = `gesture-${this.type}-${$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$var$g_id++}`;\n        /**\n     * The element to which to associate the gesture.\n     *\n     * @type {Element}\n     */ this.element = element;\n        /**\n     * The function handler to execute when the gesture is recognized on the\n     * associated element.\n     *\n     * @type {Function}\n     */ this.handler = handler;\n        /**\n     * The options. Can usually be adjusted live, though be careful doing this.\n     *\n     * @type {object}\n     */ this.options = {\n            ...$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$var$Gesture.DEFAULTS,\n            ...options\n        };\n    }\n    /**\n   * Determines whether this gesture is enabled.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {boolean} true if enabled, false otherwise.\n   */ isEnabled(state) {\n        const count = state.active.length;\n        const event = state.event;\n        const { enableKeys: enableKeys , disableKeys: disableKeys , minInputs: minInputs , maxInputs: maxInputs  } = this.options;\n        return minInputs <= count && maxInputs >= count && (enableKeys.length === 0 || enableKeys.some((k)=>event[k])) && !disableKeys.some((k)=>event[k]);\n    }\n    /**\n   * Event hook for the start phase of a gesture.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */ start() {\n        return null;\n    }\n    /**\n   * Event hook for the move phase of a gesture.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */ move() {\n        return null;\n    }\n    /**\n   * Event hook for the end phase of a gesture.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */ end() {\n        return null;\n    }\n    /**\n   * Event hook for when an input is cancelled.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */ cancel() {\n        return null;\n    }\n    /**\n   * Evalutes the given gesture hook, and dispatches any data that is produced\n   * by calling [recognize]{@link westures-core.Gesture#recognize}.\n   *\n   * @param {string} hook - Must be one of 'start', 'move', 'end', or 'cancel'.\n   * @param {westures-core.State} state - The current State instance.\n   */ evaluateHook(hook, state) {\n        const data = this[hook](state);\n        if (data) this.recognize(hook, state, data);\n    }\n    /**\n   * Recognize a Gesture by calling the handler. Standardizes the way the\n   * handler is called so that classes extending Gesture can circumvent the\n   * evaluateHook approach but still provide results that have a common format.\n   *\n   * Note that the properties in the \"data\" object will receive priority when\n   * constructing the results. This can be used to override standard results\n   * such as the phase or the centroid.\n   *\n   * @param {string} hook - Must be one of 'start', 'move', 'end', or 'cancel'.\n   * @param {westures-core.State} state - current input state.\n   * @param {Object} data - Results data specific to the recognized gesture.\n   */ recognize(hook, state, data) {\n        this.handler({\n            centroid: state.centroid,\n            event: state.event,\n            phase: hook,\n            type: this.type,\n            target: this.element,\n            ...data\n        });\n    }\n}\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$var$Gesture.DEFAULTS = {\n    enableKeys: [],\n    disableKeys: [],\n    minInputs: 1,\n    maxInputs: Number.MAX_VALUE\n};\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$exports = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$var$Gesture;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$e2125e2e71e37a0c$exports = {};\n\"use strict\";\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$exports = {};\n\"use strict\";\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$exports = {};\n\"use strict\";\n/**\n * The Point2D class stores and operates on 2-dimensional points, represented as\n * x and y coordinates.\n *\n * @memberof westures-core\n *\n * @param {number} [ x=0 ] - The x coordinate of the point.\n * @param {number} [ y=0 ] - The y coordinate of the point.\n */ class $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$var$Point2D {\n    constructor(x = 0, y = 0){\n        /**\n     * The x coordinate of the point.\n     *\n     * @type {number}\n     */ this.x = x;\n        /**\n     * The y coordinate of the point.\n     *\n     * @type {number}\n     */ this.y = y;\n    }\n    /**\n   * Calculates the angle between this point and the given point.\n   *\n   * @param {!westures-core.Point2D} point - Projected point for calculating the\n   * angle.\n   *\n   * @return {number} Radians along the unit circle where the projected\n   * point lies.\n   */ angleTo(point) {\n        return Math.atan2(point.y - this.y, point.x - this.x);\n    }\n    /**\n   * Determine the angle from the centroid to each of the points.\n   *\n   * @param {!westures-core.Point2D[]} points - the Point2D objects to calculate\n   *    the angles to.\n   *\n   * @returns {number[]}\n   */ anglesTo(points) {\n        return points.map((point)=>this.angleTo(point));\n    }\n    /**\n   * Determine the average distance from this point to the provided array of\n   * points.\n   *\n   * @param {!westures-core.Point2D[]} points - the Point2D objects to calculate\n   *    the average distance to.\n   *\n   * @return {number} The average distance from this point to the provided\n   *    points.\n   */ averageDistanceTo(points) {\n        return this.totalDistanceTo(points) / points.length;\n    }\n    /**\n   * Clone this point.\n   *\n   * @return {westures-core.Point2D} A new Point2D, identical to this point.\n   */ clone() {\n        return new $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$var$Point2D(this.x, this.y);\n    }\n    /**\n   * Calculates the distance between two points.\n   *\n   * @param {!westures-core.Point2D} point - Point to which the distance is\n   * calculated.\n   *\n   * @return {number} The distance between the two points, a.k.a. the\n   *    hypoteneuse.\n   */ distanceTo(point) {\n        return Math.hypot(point.x - this.x, point.y - this.y);\n    }\n    /**\n   * Subtract the given point from this point.\n   *\n   * @param {!westures-core.Point2D} point - Point to subtract from this point.\n   *\n   * @return {westures-core.Point2D} A new Point2D, which is the result of (this\n   * - point).\n   */ minus(point) {\n        return new $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$var$Point2D(this.x - point.x, this.y - point.y);\n    }\n    /**\n   * Return the summation of this point to the given point.\n   *\n   * @param {!westures-core.Point2D} point - Point to add to this point.\n   *\n   * @return {westures-core.Point2D} A new Point2D, which is the addition of the\n   * two points.\n   */ plus(point) {\n        return new $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$var$Point2D(this.x + point.x, this.y + point.y);\n    }\n    /**\n   * Calculates the total distance from this point to an array of points.\n   *\n   * @param {!westures-core.Point2D[]} points - The array of Point2D objects to\n   *    calculate the total distance to.\n   *\n   * @return {number} The total distance from this point to the provided points.\n   */ totalDistanceTo(points) {\n        return points.reduce((d, p)=>d + this.distanceTo(p), 0);\n    }\n    /**\n   * Calculates the centroid of a list of points.\n   *\n   * @param {westures-core.Point2D[]} points - The array of Point2D objects for\n   * which to calculate the centroid.\n   *\n   * @return {westures-core.Point2D} The centroid of the provided points.\n   */ static centroid(points = []) {\n        if (points.length === 0) return null;\n        const total = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$var$Point2D.sum(points);\n        total.x /= points.length;\n        total.y /= points.length;\n        return total;\n    }\n    /**\n   * Calculates the sum of the given points.\n   *\n   * @param {westures-core.Point2D[]} points - The Point2D objects to sum up.\n   *\n   * @return {westures-core.Point2D} A new Point2D representing the sum of the\n   * given points.\n   */ static sum(points = []) {\n        return points.reduce((total, pt)=>{\n            total.x += pt.x;\n            total.y += pt.y;\n            return total;\n        }, new $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$var$Point2D(0, 0));\n    }\n}\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$exports = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$var$Point2D;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports = {};\n\"use strict\";\n/**\n * List of events that trigger the cancel phase.\n *\n * @memberof westures-core\n * @type {string[]}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$CANCEL_EVENTS = [\n    \"blur\",\n    \"pointercancel\",\n    \"touchcancel\",\n    \"mouseleave\"\n];\n/**\n * List of keyboard events that trigger a restart.\n *\n * @memberof westures-core\n * @type {string[]}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$KEYBOARD_EVENTS = [\n    \"keydown\",\n    \"keyup\"\n];\n/**\n * List of mouse events to listen to.\n *\n * @memberof westures-core\n * @type {string[]}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$MOUSE_EVENTS = [\n    \"mousedown\",\n    \"mousemove\",\n    \"mouseup\"\n];\n/**\n * List of pointer events to listen to.\n *\n * @memberof westures-core\n * @type {string[]}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$POINTER_EVENTS = [\n    \"pointerdown\",\n    \"pointermove\",\n    \"pointerup\"\n];\n/**\n * List of touch events to listen to.\n *\n * @memberof westures-core\n * @type {string[]}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$TOUCH_EVENTS = [\n    \"touchend\",\n    \"touchmove\",\n    \"touchstart\"\n];\n/**\n * List of potentially state-modifying keys.\n * Entries are: ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].\n *\n * @memberof westures-core\n * @type {string[]}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$STATE_KEYS = [\n    \"altKey\",\n    \"ctrlKey\",\n    \"metaKey\",\n    \"shiftKey\"\n];\n/**\n * List of the 'key' values on KeyboardEvent objects of the potentially\n * state-modifying keys.\n *\n * @memberof westures-core\n * @type {string[]}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$STATE_KEY_STRINGS = [\n    \"Alt\",\n    \"Control\",\n    \"Meta\",\n    \"Shift\"\n];\n/**\n * The cancel phase.\n *\n * @memberof westures-core\n * @type {string}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$CANCEL = \"cancel\";\n/**\n * The end phase.\n *\n * @memberof westures-core\n * @type {string}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$END = \"end\";\n/**\n * The move phase.\n *\n * @memberof westures-core\n * @type {string}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$MOVE = \"move\";\n/**\n * The start phase.\n *\n * @memberof westures-core\n * @type {string}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$START = \"start\";\n/**\n * The recognized phases.\n *\n * @memberof westures-core\n * @type {list.<string>}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$PHASES = [\n    $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$START,\n    $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$MOVE,\n    $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$END,\n    $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$CANCEL\n];\n/**\n * Object that normalizes the names of window events to be either of type start,\n * move, end, or cancel.\n *\n * @memberof westures-core\n * @type {object}\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$PHASE = {\n    blur: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$CANCEL,\n    pointercancel: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$CANCEL,\n    touchcancel: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$CANCEL,\n    mouseup: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$END,\n    pointerup: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$END,\n    touchend: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$END,\n    mousemove: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$MOVE,\n    pointermove: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$MOVE,\n    touchmove: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$MOVE,\n    mousedown: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$START,\n    pointerdown: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$START,\n    touchstart: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$START\n};\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports = {\n    CANCEL_EVENTS: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$CANCEL_EVENTS,\n    KEYBOARD_EVENTS: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$KEYBOARD_EVENTS,\n    MOUSE_EVENTS: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$MOUSE_EVENTS,\n    POINTER_EVENTS: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$POINTER_EVENTS,\n    TOUCH_EVENTS: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$TOUCH_EVENTS,\n    STATE_KEYS: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$STATE_KEYS,\n    STATE_KEY_STRINGS: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$STATE_KEY_STRINGS,\n    CANCEL: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$CANCEL,\n    END: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$END,\n    MOVE: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$MOVE,\n    START: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$START,\n    PHASE: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$PHASE,\n    PHASES: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$PHASES\n};\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$require$PHASE = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.PHASE;\n/**\n * @private\n * @inner\n * @memberof westures-core.PointerData\n *\n * @return {Event} The Event object which corresponds to the given identifier.\n *    Contains clientX, clientY values.\n */ function $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$var$getEventObject(event, identifier) {\n    if (event.changedTouches) return Array.from(event.changedTouches).find((touch)=>{\n        return touch.identifier === identifier;\n    });\n    return event;\n}\n/**\n * Low-level storage of pointer data based on incoming data from an interaction\n * event.\n *\n * @memberof westures-core\n *\n * @param {Event} event - The event object being wrapped.\n * @param {number} identifier - The index of touch if applicable\n */ class $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$var$PointerData {\n    constructor(event, identifier){\n        const { clientX: clientX , clientY: clientY  } = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$var$getEventObject(event, identifier);\n        /**\n     * The original event object.\n     *\n     * @type {Event}\n     */ this.event = event;\n        /**\n     * The type or 'phase' of this batch of pointer data. 'start' or 'move' or\n     * 'end' or 'cancel'\n     *\n     * @type {string}\n     */ this.type = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$require$PHASE[event.type];\n        /**\n     * The timestamp of the event in milliseconds elapsed since January 1, 1970,\n     * 00:00:00 UTC.\n     *\n     * @type {number}\n     */ this.time = Date.now();\n        /**\n     * The (x,y) coordinate of the event, wrapped in a Point2D.\n     *\n     * @type {westures-core.Point2D}\n     */ this.point = new $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$exports(clientX, clientY);\n    }\n}\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$exports = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$var$PointerData;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$exports = {};\n\"use strict\";\nconst $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$PI_2 = 2 * Math.PI;\nconst $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$PI_NVE = -Math.PI;\n/**\n * Helper function to regulate angular differences, so they don't jump from 0 to\n * 2 * PI or vice versa.\n *\n * @memberof westures-core\n *\n * @param {number} a - Angle in radians.\n * @param {number} b - Angle in radians.\n\n * @return {number} c, given by: c = a - b such that |c| < PI\n */ function $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$angularDifference(a, b) {\n    let diff = a - b;\n    if (diff < $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$PI_NVE) diff += $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$PI_2;\n    else if (diff > Math.PI) diff -= $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$PI_2;\n    return diff;\n}\n/**\n * In case event.composedPath() is not available.\n *\n * @memberof westures-core\n *\n * @param {Event} event\n *\n * @return {Element[]} The elements along the composed path of the event.\n */ function $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$getPropagationPath(event) {\n    if (typeof event.composedPath === \"function\") return event.composedPath();\n    const path = [];\n    for(let node = event.target; node !== document; node = node.parentNode)path.push(node);\n    path.push(document);\n    path.push(window);\n    return path;\n}\n/**\n * Performs a set filter operation.\n *\n * @memberof westures-core\n *\n * @param {Set} set - The set to filter.\n * @param {Function} predicate - Function to test elements of 'set'. Receives\n * one argument: the current set element.\n *\n * @return {Set} Set consisting of elements in 'set' for which 'predicate' is\n * true.\n */ function $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$setFilter(set, predicate) {\n    const result = new Set();\n    set.forEach((element)=>{\n        if (predicate(element)) result.add(element);\n    });\n    return result;\n}\n/**\n * Performs a set difference operation.\n *\n * @memberof westures-core\n *\n * @param {Set} left - Base set.\n * @param {Set} right - Set of elements to remove from 'left'.\n *\n * @return {Set} Set consisting of elements in 'left' that are not in\n * 'right'.\n */ function $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$setDifference(left, right) {\n    return $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$setFilter(left, (element)=>!right.has(element));\n}\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$exports = {\n    angularDifference: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$angularDifference,\n    getPropagationPath: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$getPropagationPath,\n    setDifference: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$setDifference,\n    setFilter: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$setFilter\n};\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$e2125e2e71e37a0c$require$getPropagationPath = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$exports.getPropagationPath;\n/**\n * Tracks a single input and contains information about the current, previous,\n * and initial events.\n *\n * @memberof westures-core\n *\n * @param {(PointerEvent | MouseEvent | TouchEvent)} event - The input event\n * which will initialize this Input object.\n * @param {number} identifier - The identifier for this input, so that it can\n * be located in subsequent Event objects.\n */ class $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$e2125e2e71e37a0c$var$Input {\n    constructor(event, identifier){\n        const currentData = new $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$exports(event, identifier);\n        /**\n     * The set of elements along the original event's propagation path at the\n     * time it was dispatched.\n     *\n     * @type {WeakSet.<Element>}\n     */ this.initialElements = new WeakSet($c7ae6dd8608f332b$var$$17807945cdde5d67$var$$e2125e2e71e37a0c$require$getPropagationPath(event));\n        /**\n     * Holds the initial data from the mousedown / touchstart / pointerdown that\n     * began this input.\n     *\n     * @type {westures-core.PointerData}\n     */ this.initial = currentData;\n        /**\n     * Holds the most current pointer data for this Input.\n     *\n     * @type {westures-core.PointerData}\n     */ this.current = currentData;\n        /**\n     * Holds the previous pointer data for this Input.\n     *\n     * @type {westures-core.PointerData}\n     */ this.previous = currentData;\n        /**\n     * The identifier for the pointer / touch / mouse button associated with\n     * this input.\n     *\n     * @type {number}\n     */ this.identifier = identifier;\n    }\n    /**\n   * The phase of the input: 'start' or 'move' or 'end' or 'cancel'\n   *\n   * @type {string}\n   */ get phase() {\n        return this.current.type;\n    }\n    /**\n   * The timestamp of the initiating event for this input.\n   *\n   * @type {number}\n   */ get startTime() {\n        return this.initial.time;\n    }\n    /**\n   * The amount of time elapsed between the start of this input and its latest\n   * event.\n   *\n   * @type {number}\n   */ get elapsedTime() {\n        return this.current.time - this.initial.time;\n    }\n    /**\n   * @return {number} The distance between the initiating event for this input\n   *    and its current event.\n   */ totalDistance() {\n        return this.initial.point.distanceTo(this.current.point);\n    }\n    /**\n   * Saves the given raw event in PointerData form as the current data for this\n   * input, pushing the old current data into the previous slot, and tossing\n   * out the old previous data.\n   *\n   * @param {Event} event - The event object to wrap with a PointerData.\n   */ update(event) {\n        this.previous = this.current;\n        this.current = new $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$exports(event, this.identifier);\n    }\n}\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$e2125e2e71e37a0c$exports = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$e2125e2e71e37a0c$var$Input;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$exports = {};\n\"use strict\";\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$exports = {};\n\"use strict\";\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$CANCEL = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.CANCEL;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$END = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.END;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$MOVE = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.MOVE;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$PHASE = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.PHASE;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$START = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.START;\nconst $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$symbols = {\n    inputs: Symbol.for(\"inputs\")\n};\n/**\n * Set of helper functions for updating inputs based on type of input.\n * Must be called with a bound 'this', via bind(), or call(), or apply().\n *\n * @private\n * @inner\n * @memberof westure-core.State\n */ const $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$update_fns = {\n    TouchEvent: function TouchEvent(event) {\n        Array.from(event.changedTouches).forEach((touch)=>{\n            this.updateInput(event, touch.identifier);\n        });\n    },\n    PointerEvent: function PointerEvent(event) {\n        this.updateInput(event, event.pointerId);\n    },\n    MouseEvent: function MouseEvent(event) {\n        if (event.button === 0) this.updateInput(event, event.button);\n    }\n};\n/**\n * Keeps track of currently active and ending input points on the interactive\n * surface.\n *\n * @memberof westures-core\n *\n * @param {Element} element - The element underpinning the associated Region.\n */ class $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$State {\n    constructor(element){\n        /**\n     * Keep a reference to the element for the associated region.\n     *\n     * @type {Element}\n     */ this.element = element;\n        /**\n     * Keeps track of the current Input objects.\n     *\n     * @alias [@@inputs]\n     * @type {Map.<westures-core.Input>}\n     * @memberof westure-core.State\n     */ this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$symbols.inputs] = new Map();\n        /**\n     * All currently valid inputs, including those that have ended.\n     *\n     * @type {westures-core.Input[]}\n     */ this.inputs = [];\n        /**\n     * The array of currently active inputs, sourced from the current Input\n     * objects. \"Active\" is defined as not being in the 'end' phase.\n     *\n     * @type {westures-core.Input[]}\n     */ this.active = [];\n        /**\n     * The array of latest point data for the currently active inputs, sourced\n     * from this.active.\n     *\n     * @type {westures-core.Point2D[]}\n     */ this.activePoints = [];\n        /**\n     * The centroid of the currently active points.\n     *\n     * @type {westures-core.Point2D}\n     */ this.centroid = {};\n        /**\n     * The latest event that the state processed.\n     *\n     * @type {Event}\n     */ this.event = null;\n    }\n    /**\n   * Deletes all inputs that are in the 'end' phase.\n   */ clearEndedInputs() {\n        this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$symbols.inputs].forEach((v, k)=>{\n            if (v.phase === \"end\") this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$symbols.inputs].delete(k);\n        });\n    }\n    /**\n   * @param {string} phase - One of 'start', 'move', 'end', or 'cancel'.\n   *\n   * @return {westures-core.Input[]} Inputs in the given phase.\n   */ getInputsInPhase(phase) {\n        return this.inputs.filter((i)=>i.phase === phase);\n    }\n    /**\n   * @param {string} phase - One of 'start', 'move', 'end', or 'cancel'.\n   *\n   * @return {westures-core.Input[]} Inputs <b>not</b> in the given phase.\n   */ getInputsNotInPhase(phase) {\n        return this.inputs.filter((i)=>i.phase !== phase);\n    }\n    /**\n   * @return {boolean} True if there are no active inputs. False otherwise.\n   */ hasNoInputs() {\n        return this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$symbols.inputs].size === 0;\n    }\n    /**\n   * Update the input with the given identifier using the given event.\n   *\n   * @private\n   *\n   * @param {Event} event - The event being captured.\n   * @param {number} identifier - The identifier of the input to update.\n   */ updateInput(event, identifier) {\n        switch($c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$PHASE[event.type]){\n            case $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$START:\n                this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$symbols.inputs].set(identifier, new $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$e2125e2e71e37a0c$exports(event, identifier));\n                try {\n                    this.element.setPointerCapture(identifier);\n                } catch (e) {\n                // NOP: Optional operation failed.\n                }\n                break;\n            // All of 'end', 'move', and 'cancel' perform updates, hence the\n            // following fall-throughs\n            case $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$END:\n                try {\n                    this.element.releasePointerCapture(identifier);\n                } catch (e1) {\n                // NOP: Optional operation failed.\n                }\n            case $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$CANCEL:\n            case $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$MOVE:\n                if (this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$symbols.inputs].has(identifier)) this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$symbols.inputs].get(identifier).update(event);\n                break;\n            default:\n                console.warn(`Unrecognized event type: ${event.type}`);\n        }\n    }\n    /**\n   * Updates the inputs with new information based upon a new event being fired.\n   *\n   * @private\n   * @param {Event} event - The event being captured.\n   */ updateAllInputs(event) {\n        $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$update_fns[event.constructor.name].call(this, event);\n        this.updateFields(event);\n    }\n    /**\n   * Updates the convenience fields.\n   *\n   * @private\n   * @param {Event} event - Event with which to update the convenience fields.\n   */ updateFields(event) {\n        this.inputs = Array.from(this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$symbols.inputs].values());\n        this.active = this.getInputsNotInPhase(\"end\");\n        this.activePoints = this.active.map((i)=>i.current.point);\n        this.centroid = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$exports.centroid(this.activePoints);\n        this.event = event;\n    }\n}\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$exports = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$State;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$CANCEL_EVENTS = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.CANCEL_EVENTS;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$KEYBOARD_EVENTS = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.KEYBOARD_EVENTS;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$MOUSE_EVENTS = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.MOUSE_EVENTS;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$POINTER_EVENTS = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.POINTER_EVENTS;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$TOUCH_EVENTS = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.TOUCH_EVENTS;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$STATE_KEY_STRINGS = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.STATE_KEY_STRINGS;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$PHASE = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.PHASE;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$CANCEL = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.CANCEL;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$END = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.END;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$START = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports.START;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$setDifference = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$exports.setDifference;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$setFilter = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$exports.setFilter;\n/**\n * Allows the user to specify the control region which will listen for user\n * input events.\n *\n * @memberof westures-core\n *\n * @param {Element} element=window - The element which should listen to input\n * events.\n * @param {object} [options]\n * @param {boolean} [options.capture=false] - Whether the region uses the\n * capture phase of input events. If false, uses the bubbling phase.\n * @param {boolean} [options.preferPointer=true] - If false, the region listens\n * to mouse/touch events instead of pointer events.\n * @param {boolean} [options.preventDefault=true] - Whether the default\n * browser functionality should be disabled. This option should most likely be\n * ignored. Here there by dragons if set to false.\n * @param {string} [options.touchAction='none'] - Value to set the CSS\n * 'touch-action' property to on elements added to the region.\n */ class $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$var$Region {\n    constructor(element = window, options = {}){\n        options = {\n            ...$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$var$Region.DEFAULTS,\n            ...options\n        };\n        /**\n     * The list of relations between elements, their gestures, and the handlers.\n     *\n     * @type {Set.<westures-core.Gesture>}\n     */ this.gestures = new Set();\n        /**\n     * The list of active gestures for the current input session.\n     *\n     * @type {Set.<westures-core.Gesture>}\n     */ this.activeGestures = new Set();\n        /**\n     * The base list of potentially active gestures for the current input\n     * session.\n     *\n     * @type {Set.<westures-core.Gesture>}\n     */ this.potentialGestures = new Set();\n        /**\n     * The element being bound to.\n     *\n     * @type {Element}\n     */ this.element = element;\n        /**\n     * The user-supplied options for the Region.\n     *\n     * @type {object}\n     */ this.options = options;\n        /**\n     * The internal state object for a Region.  Keeps track of inputs.\n     *\n     * @type {westures-core.State}\n     */ this.state = new $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$exports(this.element);\n        // Begin operating immediately.\n        this.activate();\n    }\n    /**\n   * Activates the region by adding event listeners for all appropriate input\n   * events to the region's element.\n   *\n   * @private\n   */ activate() {\n        /*\n     * Listening to both mouse and touch comes with the difficulty that\n     * preventDefault() must be called to prevent both events from iterating\n     * through the system. However I have left it as an option to the end user,\n     * which defaults to calling preventDefault(), in case there's a use-case I\n     * haven't considered or am not aware of.\n     *\n     * It also may be a good idea to keep regions small in large pages.\n     *\n     * See:\n     *  https://www.html5rocks.com/en/mobile/touchandmouse/\n     *  https://developer.mozilla.org/en-US/docs/Web/API/Touch_events\n     *  https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events\n     */ let eventNames = [];\n        if (this.options.preferPointer && window.PointerEvent) eventNames = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$POINTER_EVENTS;\n        else eventNames = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$MOUSE_EVENTS.concat($c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$TOUCH_EVENTS);\n        // Bind detected browser events to the region element.\n        const arbitrate = this.arbitrate.bind(this);\n        eventNames.forEach((eventName)=>{\n            this.element.addEventListener(eventName, arbitrate, {\n                capture: this.options.capture,\n                once: false,\n                passive: false\n            });\n        });\n        const cancel = this.cancel.bind(this);\n        $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$CANCEL_EVENTS.forEach((eventName)=>{\n            window.addEventListener(eventName, cancel);\n        });\n        const handleKeyboardEvent = this.handleKeyboardEvent.bind(this);\n        $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$KEYBOARD_EVENTS.forEach((eventName)=>{\n            window.addEventListener(eventName, handleKeyboardEvent);\n        });\n    }\n    /**\n   * Handles a cancel event. Resets the state and the active / potential gesture\n   * lists.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   */ cancel(event) {\n        if (this.options.preventDefault) event.preventDefault();\n        this.state.inputs.forEach((input)=>{\n            input.update(event);\n        });\n        this.activeGestures.forEach((gesture)=>{\n            gesture.evaluateHook($c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$CANCEL, this.state);\n        });\n        this.state = new $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$exports(this.element);\n        this.resetActiveGestures();\n    }\n    /**\n   * Handles a keyboard event, triggering a restart of any gestures that need\n   * it.\n   *\n   * @private\n   * @param {KeyboardEvent} event - The keyboard event.\n   */ handleKeyboardEvent(event) {\n        if ($c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$STATE_KEY_STRINGS.indexOf(event.key) >= 0) {\n            this.state.event = event;\n            const oldActiveGestures = this.activeGestures;\n            this.setActiveGestures();\n            $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$setDifference(oldActiveGestures, this.activeGestures).forEach((gesture)=>{\n                gesture.evaluateHook($c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$END, this.state);\n            });\n            $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$setDifference(this.activeGestures, oldActiveGestures).forEach((gesture)=>{\n                gesture.evaluateHook($c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$START, this.state);\n            });\n        }\n    }\n    /**\n   * Resets the active gestures.\n   *\n   * @private\n   */ resetActiveGestures() {\n        this.potentialGestures = new Set();\n        this.activeGestures = new Set();\n    }\n    /**\n   * Selects active gestures from the list of potentially active gestures.\n   *\n   * @private\n   */ setActiveGestures() {\n        this.activeGestures = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$setFilter(this.potentialGestures, (gesture)=>{\n            return gesture.isEnabled(this.state);\n        });\n    }\n    /**\n   * Selects the potentially active gestures.\n   *\n   * @private\n   */ setPotentialGestures() {\n        const input = this.state.inputs[0];\n        this.potentialGestures = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$setFilter(this.gestures, (gesture)=>{\n            return input.initialElements.has(gesture.element);\n        });\n    }\n    /**\n   * Selects the gestures that are active for the current input sequence.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   * @param {boolean} isInitial - Whether this is an initial contact.\n   */ updateActiveGestures(event, isInitial) {\n        if ($c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$PHASE[event.type] === $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$START) {\n            if (isInitial) this.setPotentialGestures();\n            this.setActiveGestures();\n        }\n    }\n    /**\n   * Evaluates whether the current input session has completed.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   */ pruneActiveGestures(event) {\n        if ($c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$PHASE[event.type] === $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$END) {\n            if (this.state.hasNoInputs()) this.resetActiveGestures();\n            else this.setActiveGestures();\n        }\n    }\n    /**\n   * All input events flow through this function. It makes sure that the input\n   * state is maintained, determines which gestures to analyze based on the\n   * initial position of the inputs, calls the relevant gesture hooks, and\n   * dispatches gesture data.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   */ arbitrate(event) {\n        const isInitial = this.state.hasNoInputs();\n        this.state.updateAllInputs(event);\n        this.updateActiveGestures(event, isInitial);\n        if (this.activeGestures.size > 0) {\n            if (this.options.preventDefault) event.preventDefault();\n            this.activeGestures.forEach((gesture)=>{\n                gesture.evaluateHook($c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$PHASE[event.type], this.state);\n            });\n        }\n        this.state.clearEndedInputs();\n        this.pruneActiveGestures(event);\n    }\n    /**\n   * Adds the given gesture to the region.\n   *\n   * @param {westures-core.Gesture} gesture - Instantiated gesture to add.\n   */ addGesture(gesture) {\n        gesture.element.style.touchAction = this.options.touchAction;\n        this.gestures.add(gesture);\n    }\n    /**\n   * Removes the given gesture from the region.\n   *\n   * @param {westures-core.Gesture} gesture - Instantiated gesture to add.\n   */ removeGesture(gesture) {\n        this.gestures.delete(gesture);\n        this.potentialGestures.delete(gesture);\n        this.activeGestures.delete(gesture);\n    }\n    /**\n   * Retrieves Gestures by their associated element.\n   *\n   * @param {Element} element - The element for which to find gestures.\n   *\n   * @return {westures-core.Gesture[]} Gestures to which the element is bound.\n   */ getGesturesByElement(element) {\n        return $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$setFilter(this.gestures, (gesture)=>gesture.element === element);\n    }\n    /**\n   * Remove all gestures bound to the given element.\n   *\n   * @param {Element} element - The element to unbind.\n   */ removeGesturesByElement(element) {\n        this.getGesturesByElement(element).forEach((g)=>this.removeGesture(g));\n    }\n}\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$var$Region.DEFAULTS = {\n    capture: false,\n    preferPointer: true,\n    preventDefault: true,\n    touchAction: \"none\"\n};\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$exports = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$var$Region;\nvar $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$exports = {};\n\"use strict\";\nconst $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$cascade = Symbol(\"cascade\");\nconst $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$smooth = Symbol(\"smooth\");\n/**\n * Determines whether to apply smoothing. Smoothing is on by default but turned\n * off if either:<br>\n *  1. The user explicitly requests that it be turned off.<br>\n *  2. The active pointer is not \"coarse\".<br>\n *\n * @see {@link\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia}\n *\n * @inner\n * @memberof westures-core.Smoothable\n *\n * @param {boolean} isRequested - Whether smoothing was requested by the user.\n *\n * @returns {boolean} Whether to apply smoothing.\n */ function $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$smoothingIsApplicable(isRequested) {\n    if (isRequested) try {\n        return window.matchMedia(\"(pointer: coarse)\").matches;\n    } catch (e) {\n        return true;\n    }\n    return false;\n}\n/**\n * A Smoothable datatype is one that is capable of smoothing out a series of\n * values as they come in, one at a time, providing a more consistent series. It\n * does this by creating some inertia in the values using a cascading average.\n * (For those who are interested in such things, this effectively means that it\n * provides a practical application of Zeno's Dichotomy).\n *\n * @example\n * const x = new Smoothable({ identity: 1 });\n * const a = x.next(1);   // 1.0\n * const b = x.next(1.2); // 1.1\n * const c = x.next(0.9); // 1.0\n * const d = x.next(0.6); // 0.8\n * const e = x.next(1.2); // 1.0\n * const f = x.next(1.6); // 1.3\n * x.restart();\n * const g = x.next(0);   // 0.5\n *\n * @memberof westures-core\n *\n * @param {Object} [options]\n * @param {boolean} [options.applySmoothing=true] Whether to apply smoothing to\n * the data.\n * @param {*} [options.identity=0] The identity value of this smoothable data.\n */ class $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$Smoothable {\n    constructor(options = {}){\n        const final_options = {\n            ...$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$Smoothable.DEFAULTS,\n            ...options\n        };\n        /**\n     * The function through which smoothed emits are passed.\n     *\n     * @method\n     * @param {*} data - The data to emit.\n     *\n     * @return {*} The smoothed out data.\n     */ this.next = null;\n        if ($c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$smoothingIsApplicable(final_options.applySmoothing)) this.next = this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$smooth].bind(this);\n        else this.next = (data)=>data;\n        /**\n     * The \"identity\" value of the data that will be smoothed.\n     *\n     * @type {*}\n     * @default 0\n     */ this.identity = final_options.identity;\n        /**\n     * The cascading average of outgoing values.\n     *\n     * @memberof westures-core.Smoothable\n     * @alias [@@cascade]\n     * @type {object}\n     */ this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$cascade] = this.identity;\n    }\n    /**\n   * Restart the Smoothable gesture.\n   */ restart() {\n        this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$cascade] = this.identity;\n    }\n    /**\n   * Smooth out the outgoing data.\n   *\n   * @memberof westures-core.Smoothable\n   * @alias [@@smooth]\n   * @param {object} data - The next batch of data to emit.\n   *\n   * @return {?object}\n   */ [$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$smooth](data) {\n        const average = this.average(this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$cascade], data);\n        this[$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$cascade] = average;\n        return average;\n    }\n    /**\n   * Average out two values, as part of the smoothing algorithm. Override this\n   * method if the data being smoothed is not a Number.\n   *\n   * @param {number} a\n   * @param {number} b\n   *\n   * @return {number} The average of 'a' and 'b'\n   */ average(a, b) {\n        return (a + b) / 2;\n    }\n}\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$Smoothable.DEFAULTS = {\n    applySmoothing: true,\n    identity: 0\n};\n$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$exports = $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$Smoothable;\n$c7ae6dd8608f332b$var$$17807945cdde5d67$exports = {\n    Gesture: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$exports,\n    Input: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$e2125e2e71e37a0c$exports,\n    Point2D: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$exports,\n    PointerData: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$exports,\n    Region: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$exports,\n    Smoothable: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$exports,\n    State: $c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$exports,\n    ...$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports,\n    ...$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$exports\n};\nvar $c7ae6dd8608f332b$var$$edded22326d64913$exports = {};\n/*\n * Contains the Pan class.\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$edded22326d64913$require$Gesture = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Gesture;\nvar $c7ae6dd8608f332b$var$$edded22326d64913$require$Point2D = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Point2D;\nvar $c7ae6dd8608f332b$var$$edded22326d64913$require$Smoothable = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Smoothable;\n/**\n * Data returned when a Pan is recognized.\n *\n * @typedef {Object} PanData\n * @mixes ReturnTypes.BaseData\n *\n * @property {westures-core.Point2D} translation - The change vector from the\n * last emit.\n *\n * @memberof ReturnTypes\n */ /**\n * A Pan is defined as a normal movement in any direction.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PanData}\n * @see {westures-core.Smoothable}\n * @memberof westures\n *\n * @param {Element} element - The element with which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n */ class $c7ae6dd8608f332b$var$$edded22326d64913$var$Pan extends $c7ae6dd8608f332b$var$$edded22326d64913$require$Gesture {\n    constructor(element, handler, options = {}){\n        super(\"pan\", element, handler, options);\n        /**\n     * The previous point location.\n     *\n     * @type {westures-core.Point2D}\n     */ this.previous = null;\n        /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<westures-core.Point2D>}\n     */ this.outgoing = new $c7ae6dd8608f332b$var$$edded22326d64913$require$Smoothable({\n            ...options,\n            identity: new $c7ae6dd8608f332b$var$$edded22326d64913$require$Point2D()\n        });\n        this.outgoing.average = (a, b)=>$c7ae6dd8608f332b$var$$edded22326d64913$require$Point2D.centroid([\n                a,\n                b\n            ]);\n    }\n    /**\n   * Resets the gesture's progress by saving the current centroid of the active\n   * inputs. To be called whenever the number of inputs changes.\n   *\n   * @param {State} state\n   */ restart(state) {\n        this.previous = state.centroid;\n        this.outgoing.restart();\n    }\n    start(state) {\n        this.restart(state);\n    }\n    move(state) {\n        const translation = state.centroid.minus(this.previous);\n        this.previous = state.centroid;\n        return {\n            translation: this.outgoing.next(translation)\n        };\n    }\n    end(state) {\n        this.restart(state);\n    }\n    cancel(state) {\n        this.restart(state);\n    }\n}\n$c7ae6dd8608f332b$var$$edded22326d64913$exports = $c7ae6dd8608f332b$var$$edded22326d64913$var$Pan;\nvar $c7ae6dd8608f332b$var$$a29eb49c9650e38a$exports = {};\n/*\n * Contains the abstract Pinch class.\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$a29eb49c9650e38a$require$Gesture = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Gesture;\nvar $c7ae6dd8608f332b$var$$a29eb49c9650e38a$require$Smoothable = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Smoothable;\n/**\n * Data returned when a Pinch is recognized.\n *\n * @typedef {Object} PinchData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} distance - The average distance from an active input to\n *    the centroid.\n * @property {number} scale - The proportional change in distance since last\n * emit.\n *\n * @memberof ReturnTypes\n */ /**\n * A Pinch is defined as two or more inputs moving either together or apart.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PinchData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=2] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n */ class $c7ae6dd8608f332b$var$$a29eb49c9650e38a$var$Pinch extends $c7ae6dd8608f332b$var$$a29eb49c9650e38a$require$Gesture {\n    constructor(element, handler, options = {}){\n        options = {\n            ...$c7ae6dd8608f332b$var$$a29eb49c9650e38a$var$Pinch.DEFAULTS,\n            ...options\n        };\n        super(\"pinch\", element, handler, options);\n        /**\n     * The previous distance.\n     *\n     * @type {number}\n     */ this.previous = 0;\n        /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */ this.outgoing = new $c7ae6dd8608f332b$var$$a29eb49c9650e38a$require$Smoothable({\n            ...options,\n            identity: 1\n        });\n    }\n    /**\n   * Initializes the gesture progress.\n   *\n   * @param {State} state - current input state.\n   */ restart(state) {\n        this.previous = state.centroid.averageDistanceTo(state.activePoints);\n        this.outgoing.restart();\n    }\n    start(state) {\n        this.restart(state);\n    }\n    move(state) {\n        const distance = state.centroid.averageDistanceTo(state.activePoints);\n        const scale = distance / this.previous;\n        this.previous = distance;\n        return {\n            distance: distance,\n            scale: this.outgoing.next(scale)\n        };\n    }\n    end(state) {\n        this.restart(state);\n    }\n    cancel(state) {\n        this.restart(state);\n    }\n}\n$c7ae6dd8608f332b$var$$a29eb49c9650e38a$var$Pinch.DEFAULTS = Object.freeze({\n    minInputs: 2\n});\n$c7ae6dd8608f332b$var$$a29eb49c9650e38a$exports = $c7ae6dd8608f332b$var$$a29eb49c9650e38a$var$Pinch;\nvar $c7ae6dd8608f332b$var$$044241a6e313bbcb$exports = {};\n/*\n * Contains the Press class.\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$044241a6e313bbcb$require$Gesture = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Gesture;\nvar $c7ae6dd8608f332b$var$$044241a6e313bbcb$require$Point2D = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Point2D;\nvar $c7ae6dd8608f332b$var$$044241a6e313bbcb$require$MOVE = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.MOVE;\n/**\n * Data returned when a Press is recognized.\n *\n * @typedef {Object} PressData\n *\n * @property {westures-core.Point2D} centroid - The current centroid of the\n * input points.\n * @property {westures-core.Point2D} initial - The initial centroid of the input\n * points.\n * @property {number} distance - The total movement since initial contact.\n *\n * @memberof ReturnTypes\n */ /**\n * A Press is defined as one or more input points being held down without\n * moving. Press gestures may be stacked by pressing with additional pointers\n * beyond the minimum, so long as none of the points move or are lifted, a Press\n * will be recognized for each additional pointer.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PressData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {number} [options.delay=1000] - The delay before emitting, during\n * which time the number of inputs must not go below minInputs.\n * @param {number} [options.tolerance=10] - The tolerance in pixels a user can\n * move and still allow the gesture to emit.\n */ class $c7ae6dd8608f332b$var$$044241a6e313bbcb$var$Press extends $c7ae6dd8608f332b$var$$044241a6e313bbcb$require$Gesture {\n    constructor(element, handler, options = {}){\n        super(\"press\", element, handler, {\n            ...$c7ae6dd8608f332b$var$$044241a6e313bbcb$var$Press.DEFAULTS,\n            ...options\n        });\n    }\n    start(state) {\n        const initial = state.centroid;\n        const originalInputs = Array.from(state.active);\n        setTimeout(()=>{\n            const inputs = state.active.filter((i)=>originalInputs.includes(i));\n            if (inputs.length === originalInputs.length) {\n                const centroid = $c7ae6dd8608f332b$var$$044241a6e313bbcb$require$Point2D.centroid(inputs.map((i)=>i.current.point));\n                const distance = initial.distanceTo(centroid);\n                if (distance <= this.options.tolerance) this.recognize($c7ae6dd8608f332b$var$$044241a6e313bbcb$require$MOVE, state, {\n                    centroid: centroid,\n                    distance: distance,\n                    initial: initial\n                });\n            }\n        }, this.options.delay);\n    }\n}\n$c7ae6dd8608f332b$var$$044241a6e313bbcb$var$Press.DEFAULTS = Object.freeze({\n    delay: 1000,\n    tolerance: 10\n});\n$c7ae6dd8608f332b$var$$044241a6e313bbcb$exports = $c7ae6dd8608f332b$var$$044241a6e313bbcb$var$Press;\nvar $c7ae6dd8608f332b$var$$b6747a8030ff7e4d$exports = {};\n/*\n * Contains the abstract Pull class.\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$b6747a8030ff7e4d$require$Smoothable = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Smoothable;\nvar $c7ae6dd8608f332b$var$$5618dc3399c82d06$exports = {};\n/*\n * Contains the Rotate class.\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$5618dc3399c82d06$require$Gesture = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Gesture;\nvar $c7ae6dd8608f332b$var$$5618dc3399c82d06$require$Point2D = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Point2D;\nvar $c7ae6dd8608f332b$var$$5618dc3399c82d06$require$Smoothable = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Smoothable;\n/**\n * Data returned when a Pivotable is recognized.\n *\n * @typedef {Object} SwivelData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} rotation - In radians, the change in angle since last\n * emit.\n * @property {westures-core.Point2D} pivot - The pivot point.\n *\n * @memberof ReturnTypes\n */ /**\n * A Pivotable is a single input rotating around a fixed point. The fixed point\n * is determined by the input's location at its 'start' phase.\n *\n * @extends westures.Gesture\n * @see {ReturnTypes.SwivelData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n * @param {number} [options.deadzoneRadius=15] - The radius in pixels around the\n * start point in which to do nothing.\n * @param {Element} [options.dynamicPivot=false] - Normally the center point of\n * the gesture's element is used as the pivot. If this option is set, the\n * initial contact point with the element is used as the pivot instead.\n */ class $c7ae6dd8608f332b$var$$5618dc3399c82d06$var$Pivotable extends $c7ae6dd8608f332b$var$$5618dc3399c82d06$require$Gesture {\n    constructor(type = \"pivotable\", element, handler, options = {}){\n        super(type, element, handler, {\n            ...$c7ae6dd8608f332b$var$$5618dc3399c82d06$var$Pivotable.DEFAULTS,\n            ...options\n        });\n        /**\n     * The pivot point of the pivotable.\n     *\n     * @type {westures-core.Point2D}\n     */ this.pivot = null;\n        /**\n     * The previous data.\n     *\n     * @type {number}\n     */ this.previous = 0;\n        /**\n     * The outgoing data.\n     *\n     * @type {westures-core.Smoothable}\n     */ this.outgoing = new $c7ae6dd8608f332b$var$$5618dc3399c82d06$require$Smoothable(options);\n    }\n    /**\n   * Determine the center point of the given element's bounding client\n   * rectangle.\n   *\n   * @static\n   *\n   * @param {Element} element - The DOM element to analyze.\n   * @return {westures-core.Point2D} - The center of the element's bounding\n   * client rectangle.\n   */ static getClientCenter(element) {\n        const rect = element.getBoundingClientRect();\n        return new $c7ae6dd8608f332b$var$$5618dc3399c82d06$require$Point2D(rect.left + rect.width / 2, rect.top + rect.height / 2);\n    }\n    /**\n   * Updates the previous data. It will be called during the 'start' and 'end'\n   * phases, and should also be called during the 'move' phase implemented by\n   * the subclass.\n   *\n   * @abstract\n   * @param {State} state - the current input state.\n   */ updatePrevious() {\n        throw \"Gestures which extend Pivotable must implement updatePrevious()\";\n    }\n    /**\n   * Restart the given progress object using the given input object.\n   *\n   * @param {State} state - current input state.\n   */ restart(state) {\n        if (this.options.dynamicPivot) {\n            this.pivot = state.centroid;\n            this.previous = 0;\n        } else {\n            this.pivot = $c7ae6dd8608f332b$var$$5618dc3399c82d06$var$Pivotable.getClientCenter(this.element);\n            this.updatePrevious(state);\n        }\n        this.outgoing.restart();\n    }\n    start(state) {\n        this.restart(state);\n    }\n    end(state) {\n        if (state.active.length > 0) this.restart(state);\n        else this.outgoing.restart();\n    }\n    cancel() {\n        this.outgoing.restart();\n    }\n}\n$c7ae6dd8608f332b$var$$5618dc3399c82d06$var$Pivotable.DEFAULTS = Object.freeze({\n    deadzoneRadius: 15,\n    dynamicPivot: false\n});\n$c7ae6dd8608f332b$var$$5618dc3399c82d06$exports = $c7ae6dd8608f332b$var$$5618dc3399c82d06$var$Pivotable;\n/**\n * Data returned when a Pull is recognized.\n *\n * @typedef {Object} PullData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} distance - The average distance from an active input to\n * the centroid.\n * @property {number} scale - The proportional change in distance since last\n * emit.\n * @property {westures-core.Point2D} pivot - The pivot point.\n *\n * @memberof ReturnTypes\n */ /**\n * A Pull is defined as a single input moving away from or towards a pivot\n * point.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PullData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n * @param {number} [options.deadzoneRadius=15] - The radius in pixels around the\n * start point in which to do nothing.\n * @param {Element} [options.dynamicPivot=false] - Normally the center point of\n * the gesture's element is used as the pivot. If this option is set, the\n * initial contact point with the element is used as the pivot instead.\n */ class $c7ae6dd8608f332b$var$$b6747a8030ff7e4d$var$Pull extends $c7ae6dd8608f332b$var$$5618dc3399c82d06$exports {\n    constructor(element, handler, options = {}){\n        super(\"pull\", element, handler, options);\n        /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */ this.outgoing = new $c7ae6dd8608f332b$var$$b6747a8030ff7e4d$require$Smoothable({\n            ...options,\n            identity: 1\n        });\n    }\n    updatePrevious(state) {\n        this.previous = this.pivot.distanceTo(state.centroid);\n    }\n    move(state) {\n        const pivot = this.pivot;\n        const distance = pivot.distanceTo(state.centroid);\n        const scale = distance / this.previous;\n        const { deadzoneRadius: deadzoneRadius  } = this.options;\n        let rv = null;\n        if (distance > deadzoneRadius && this.previous > deadzoneRadius) rv = {\n            distance: distance,\n            scale: this.outgoing.next(scale),\n            pivot: pivot\n        };\n        /*\n     * Updating the previous distance regardless of emit prevents sudden changes\n     * when the user exits the deadzone circle.\n     */ this.previous = distance;\n        return rv;\n    }\n}\n$c7ae6dd8608f332b$var$$b6747a8030ff7e4d$exports = $c7ae6dd8608f332b$var$$b6747a8030ff7e4d$var$Pull;\nvar $c7ae6dd8608f332b$var$$2779699df4dafe8f$exports = {};\n/*\n * Contains the Rotate class.\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$2779699df4dafe8f$require$angularDifference = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.angularDifference;\nvar $c7ae6dd8608f332b$var$$2779699df4dafe8f$require$Gesture = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Gesture;\nvar $c7ae6dd8608f332b$var$$2779699df4dafe8f$require$Smoothable = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Smoothable;\n/**\n * Data returned when a Rotate is recognized.\n *\n * @typedef {Object} RotateData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} rotation - In radians, the change in angle since last\n * emit.\n *\n * @memberof ReturnTypes\n */ /**\n * A Rotate is defined as two inputs moving with a changing angle between them.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.RotateData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=2] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n */ class $c7ae6dd8608f332b$var$$2779699df4dafe8f$var$Rotate extends $c7ae6dd8608f332b$var$$2779699df4dafe8f$require$Gesture {\n    constructor(element, handler, options = {}){\n        options = {\n            ...$c7ae6dd8608f332b$var$$2779699df4dafe8f$var$Rotate.DEFAULTS,\n            ...options\n        };\n        super(\"rotate\", element, handler, options);\n        /**\n     * Track the previous angles for each input.\n     *\n     * @type {number[]}\n     */ this.previousAngles = [];\n        /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */ this.outgoing = new $c7ae6dd8608f332b$var$$2779699df4dafe8f$require$Smoothable(options);\n    }\n    /**\n   * Restart the gesture for a new number of inputs.\n   *\n   * @param {State} state - current input state.\n   */ restart(state) {\n        this.previousAngles = state.centroid.anglesTo(state.activePoints);\n        this.outgoing.restart();\n    }\n    start(state) {\n        this.restart(state);\n    }\n    move(state) {\n        const stagedAngles = state.centroid.anglesTo(state.activePoints);\n        const angle = stagedAngles.reduce((total, current, index)=>{\n            return total + $c7ae6dd8608f332b$var$$2779699df4dafe8f$require$angularDifference(current, this.previousAngles[index]);\n        }, 0);\n        this.previousAngles = stagedAngles;\n        const rotation = angle / state.activePoints.length;\n        return {\n            rotation: this.outgoing.next(rotation)\n        };\n    }\n    end(state) {\n        this.restart(state);\n    }\n    cancel() {\n        this.outgoing.restart();\n    }\n}\n$c7ae6dd8608f332b$var$$2779699df4dafe8f$var$Rotate.DEFAULTS = Object.freeze({\n    minInputs: 2\n});\n$c7ae6dd8608f332b$var$$2779699df4dafe8f$exports = $c7ae6dd8608f332b$var$$2779699df4dafe8f$var$Rotate;\nvar $c7ae6dd8608f332b$var$$29f6d3783b0fe128$exports = {};\n/*\n * Contains the Swipe class.\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$29f6d3783b0fe128$require$Gesture = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Gesture;\nconst $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$PROGRESS_STACK_SIZE = 7;\nconst $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$MS_THRESHOLD = 300;\n/**\n * Data returned when a Swipe is recognized.\n *\n * @typedef {Object} SwipeData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} velocity - The velocity of the swipe.\n * @property {number} direction - In radians, the direction of the swipe.\n * @property {westures-core.Point2D} point - The point at which the swipe ended.\n * @property {number} time - The epoch time, in ms, when the swipe ended.\n *\n * @memberof ReturnTypes\n */ /**\n * A swipe is defined as input(s) moving in the same direction in an relatively\n * increasing velocity and leaving the screen at some point before it drops\n * below it's escape velocity.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.SwipeData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n */ class $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$Swipe extends $c7ae6dd8608f332b$var$$29f6d3783b0fe128$require$Gesture {\n    constructor(element, handler, options = {}){\n        super(\"swipe\", element, handler, options);\n        /**\n     * Moves list.\n     *\n     * @type {object[]}\n     */ this.moves = [];\n        /**\n     * Data to emit when all points have ended.\n     *\n     * @type {ReturnTypes.SwipeData}\n     */ this.saved = null;\n    }\n    /**\n   * Restart the swipe state for a new numper of inputs.\n   */ restart() {\n        this.moves = [];\n        this.saved = null;\n    }\n    start() {\n        this.restart();\n    }\n    move(state) {\n        this.moves.push({\n            time: Date.now(),\n            point: state.centroid\n        });\n        if (this.moves.length > $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$PROGRESS_STACK_SIZE) this.moves.splice(0, this.moves.length - $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$PROGRESS_STACK_SIZE);\n    }\n    end(state) {\n        const result = this.getResult();\n        this.moves = [];\n        if (state.active.length > 0) {\n            this.saved = result;\n            return null;\n        }\n        this.saved = null;\n        return $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$Swipe.validate(result);\n    }\n    cancel() {\n        this.restart();\n    }\n    /**\n   * Get the swipe result.\n   *\n   * @returns {?ReturnTypes.SwipeData}\n   */ getResult() {\n        if (this.moves.length < $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$PROGRESS_STACK_SIZE) return this.saved;\n        const vlim = $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$PROGRESS_STACK_SIZE - 1;\n        const { point: point , time: time  } = this.moves[vlim];\n        const velocity = $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$Swipe.calc_velocity(this.moves, vlim);\n        const direction = $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$Swipe.calc_angle(this.moves, vlim);\n        const centroid = point;\n        return {\n            point: point,\n            velocity: velocity,\n            direction: direction,\n            time: time,\n            centroid: centroid\n        };\n    }\n    /**\n   * Validates that an emit should occur with the given data.\n   *\n   * @static\n   * @param {?ReturnTypes.SwipeData} data\n   * @returns {?ReturnTypes.SwipeData}\n   */ static validate(data) {\n        if (data == null) return null;\n        return Date.now() - data.time > $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$MS_THRESHOLD ? null : data;\n    }\n    /**\n   * Calculates the angle of movement along a series of moves.\n   *\n   * @static\n   * @see {@link https://en.wikipedia.org/wiki/Mean_of_circular_quantities}\n   *\n   * @param {{time: number, point: westures-core.Point2D}} moves - The moves\n   * list to process.\n   * @param {number} vlim - The number of moves to process.\n   *\n   * @return {number} The angle of the movement.\n   */ static calc_angle(moves, vlim) {\n        const point = moves[vlim].point;\n        let sin = 0;\n        let cos = 0;\n        for(let i = 0; i < vlim; ++i){\n            const angle = moves[i].point.angleTo(point);\n            sin += Math.sin(angle);\n            cos += Math.cos(angle);\n        }\n        sin /= vlim;\n        cos /= vlim;\n        return Math.atan2(sin, cos);\n    }\n    /**\n   * Local helper function for calculating the velocity between two timestamped\n   * points.\n   *\n   * @static\n   * @param {object} start\n   * @param {westures-core.Point2D} start.point\n   * @param {number} start.time\n   * @param {object} end\n   * @param {westures-core.Point2D} end.point\n   * @param {number} end.time\n   *\n   * @return {number} velocity from start to end point.\n   */ static velocity(start, end) {\n        const distance = end.point.distanceTo(start.point);\n        const time = end.time - start.time + 1;\n        return distance / time;\n    }\n    /**\n   * Calculates the veloctiy of movement through a series of moves.\n   *\n   * @static\n   * @param {{time: number, point: westures-core.Point2D}} moves - The moves\n   * list to process.\n   * @param {number} vlim - The number of moves to process.\n   *\n   * @return {number} The velocity of the moves.\n   */ static calc_velocity(moves, vlim) {\n        let max = 0;\n        for(let i = 0; i < vlim; ++i){\n            const current = $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$Swipe.velocity(moves[i], moves[i + 1]);\n            if (current > max) max = current;\n        }\n        return max;\n    }\n}\n$c7ae6dd8608f332b$var$$29f6d3783b0fe128$exports = $c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$Swipe;\nvar $c7ae6dd8608f332b$var$$5bf1e923ca9fec67$exports = {};\n/*\n * Contains the Rotate class.\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$5bf1e923ca9fec67$require$angularDifference = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.angularDifference;\nvar $c7ae6dd8608f332b$var$$5bf1e923ca9fec67$require$Smoothable = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Smoothable;\n/**\n * Data returned when a Swivel is recognized.\n *\n * @typedef {Object} SwivelData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} rotation - In radians, the change in angle since last\n * emit.\n * @property {westures-core.Point2D} pivot - The pivot point.\n *\n * @memberof ReturnTypes\n */ /**\n * A Swivel is a single input rotating around a fixed point. The fixed point is\n * determined by the input's location at its 'start' phase.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.SwivelData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n * @param {number} [options.deadzoneRadius=15] - The radius in pixels around the\n * start point in which to do nothing.\n * @param {Element} [options.dynamicPivot=false] - Normally the center point of\n * the gesture's element is used as the pivot. If this option is set, the\n * initial contact point with the element is used as the pivot instead.\n */ class $c7ae6dd8608f332b$var$$5bf1e923ca9fec67$var$Swivel extends $c7ae6dd8608f332b$var$$5618dc3399c82d06$exports {\n    constructor(element, handler, options = {}){\n        super(\"swivel\", element, handler, options);\n        /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */ this.outgoing = new $c7ae6dd8608f332b$var$$5bf1e923ca9fec67$require$Smoothable(options);\n    }\n    updatePrevious(state) {\n        this.previous = this.pivot.angleTo(state.centroid);\n    }\n    move(state) {\n        const pivot = this.pivot;\n        const angle = pivot.angleTo(state.centroid);\n        const rotation = $c7ae6dd8608f332b$var$$5bf1e923ca9fec67$require$angularDifference(angle, this.previous);\n        let rv = null;\n        if (pivot.distanceTo(state.centroid) > this.options.deadzoneRadius) rv = {\n            rotation: this.outgoing.next(rotation),\n            pivot: pivot\n        };\n        /*\n     * Updating the previous angle regardless of emit prevents sudden flips when\n     * the user exits the deadzone circle.\n     */ this.previous = angle;\n        return rv;\n    }\n}\n$c7ae6dd8608f332b$var$$5bf1e923ca9fec67$exports = $c7ae6dd8608f332b$var$$5bf1e923ca9fec67$var$Swivel;\nvar $c7ae6dd8608f332b$var$$2f0219f585763ab0$exports = {};\n/*\n * Contains the Tap class.\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$2f0219f585763ab0$require$Gesture = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Gesture;\nvar $c7ae6dd8608f332b$var$$2f0219f585763ab0$require$Point2D = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Point2D;\n/**\n * Data returned when a Tap is recognized.\n *\n * @typedef {Object} TapData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} x - x coordinate of tap point.\n * @property {number} y - y coordinate of tap point.\n *\n * @memberof ReturnTypes\n */ /**\n * A Tap is defined as a touchstart to touchend event in quick succession.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.TapData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {number} [options.minDelay=0] - The minimum delay between a touchstart\n * and touchend can be configured in milliseconds.\n * @param {number} [options.maxDelay=300] - The maximum delay between a\n * touchstart and touchend can be configured in milliseconds.\n * @param {number} [options.maxRetain=300] - The maximum time after a tap ends\n * before it is discarded can be configured in milliseconds. Useful for\n * multi-tap gestures, to allow things like slow \"double clicks\".\n * @param {number} [options.numTaps=1] - Number of taps to require.\n * @param {number} [options.tolerance=10] - The tolerance in pixels an input can\n * move before it will no longer be considered part of a tap.\n */ class $c7ae6dd8608f332b$var$$2f0219f585763ab0$var$Tap extends $c7ae6dd8608f332b$var$$2f0219f585763ab0$require$Gesture {\n    constructor(element, handler, options = {}){\n        super(\"tap\", element, handler, {\n            ...$c7ae6dd8608f332b$var$$2f0219f585763ab0$var$Tap.DEFAULTS,\n            ...options\n        });\n        /**\n     * An array of inputs that have ended recently.\n     *\n     * @type {Input[]}\n     */ this.taps = [];\n    }\n    end(state) {\n        const now = Date.now();\n        const { minDelay: minDelay , maxDelay: maxDelay , maxRetain: maxRetain , numTaps: numTaps , tolerance: tolerance  } = this.options;\n        // Save the recently ended inputs as taps.\n        this.taps = this.taps.concat(state.getInputsInPhase(\"end\")).filter((input)=>{\n            const elapsed = input.elapsedTime;\n            const tdiff = now - input.current.time;\n            return elapsed <= maxDelay && elapsed >= minDelay && tdiff <= maxRetain;\n        });\n        // Validate the list of taps.\n        if (this.taps.length !== numTaps || this.taps.some((i)=>i.totalDistance() > tolerance)) return null;\n        const centroid = $c7ae6dd8608f332b$var$$2f0219f585763ab0$require$Point2D.centroid(this.taps.map((i)=>i.current.point));\n        this.taps = []; // Critical! Used taps need to be cleared!\n        return {\n            centroid: centroid,\n            ...centroid\n        };\n    }\n}\n$c7ae6dd8608f332b$var$$2f0219f585763ab0$var$Tap.DEFAULTS = Object.freeze({\n    minDelay: 0,\n    maxDelay: 300,\n    maxRetain: 300,\n    numTaps: 1,\n    tolerance: 10\n});\n$c7ae6dd8608f332b$var$$2f0219f585763ab0$exports = $c7ae6dd8608f332b$var$$2f0219f585763ab0$var$Tap;\nvar $c7ae6dd8608f332b$var$$13a50dd07826f9eb$exports = {};\n/*\n * Contains the Track class.\n */ \"use strict\";\nvar $c7ae6dd8608f332b$var$$13a50dd07826f9eb$require$Gesture = $c7ae6dd8608f332b$var$$17807945cdde5d67$exports.Gesture;\n/**\n * Data returned when a Track is recognized.\n *\n * @typedef {Object} TrackData\n * @mixes ReturnTypes.BaseData\n *\n * @property {westures-core.Point2D[]} active - Points currently in 'start' or\n *    'move' phase.\n *\n * @memberof ReturnTypes\n */ /**\n * A Track gesture forwards a list of active points and their centroid on each\n * of the selected phases.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.TrackData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {string[]} [options.phases=[]] Phases to recognize. Entries can be any\n * or all of 'start', 'move', 'end', and 'cancel'.\n */ class $c7ae6dd8608f332b$var$$13a50dd07826f9eb$var$Track extends $c7ae6dd8608f332b$var$$13a50dd07826f9eb$require$Gesture {\n    constructor(element, handler, options = {}){\n        super(\"track\", element, handler, {\n            ...$c7ae6dd8608f332b$var$$13a50dd07826f9eb$var$Track.DEFAULTS,\n            ...options\n        });\n    }\n    /**\n   * Filters out the state's data, down to what should be emitted.\n\n   * @param {State} state - current input state.\n   * @return {ReturnTypes.TrackData}\n   */ data({ activePoints: activePoints  }) {\n        return {\n            active: activePoints\n        };\n    }\n    tracks(phase) {\n        return this.options.phases.includes(phase);\n    }\n    start(state) {\n        return this.tracks(\"start\") ? this.data(state) : null;\n    }\n    move(state) {\n        return this.tracks(\"move\") ? this.data(state) : null;\n    }\n    end(state) {\n        return this.tracks(\"end\") ? this.data(state) : null;\n    }\n    cancel(state) {\n        return this.tracks(\"cancel\") ? this.data(state) : null;\n    }\n}\n$c7ae6dd8608f332b$var$$13a50dd07826f9eb$var$Track.DEFAULTS = Object.freeze({\n    phases: Object.freeze([])\n});\n$c7ae6dd8608f332b$var$$13a50dd07826f9eb$exports = $c7ae6dd8608f332b$var$$13a50dd07826f9eb$var$Track;\n$c7ae6dd8608f332b$exports = {\n    Pan: $c7ae6dd8608f332b$var$$edded22326d64913$exports,\n    Pinch: $c7ae6dd8608f332b$var$$a29eb49c9650e38a$exports,\n    Press: $c7ae6dd8608f332b$var$$044241a6e313bbcb$exports,\n    Pull: $c7ae6dd8608f332b$var$$b6747a8030ff7e4d$exports,\n    Rotate: $c7ae6dd8608f332b$var$$2779699df4dafe8f$exports,\n    Swipe: $c7ae6dd8608f332b$var$$29f6d3783b0fe128$exports,\n    Swivel: $c7ae6dd8608f332b$var$$5bf1e923ca9fec67$exports,\n    Tap: $c7ae6dd8608f332b$var$$2f0219f585763ab0$exports,\n    Track: $c7ae6dd8608f332b$var$$13a50dd07826f9eb$exports,\n    ...$c7ae6dd8608f332b$var$$17807945cdde5d67$exports\n}; /**\n * Here are the return \"types\" of the gestures that are included in this\n * package.\n *\n * @namespace ReturnTypes\n */  /**\n * The base data that is included for all emitted gestures.\n *\n * @typedef {Object} BaseData\n *\n * @property {westures-core.Point2D} centroid - The centroid of the input\n * points.\n * @property {Event} event - The input event which caused the gesture to be\n * recognized.\n * @property {string} phase - 'start', 'move', 'end', or 'cancel'.\n * @property {string} type - The name of the gesture as specified by its\n * designer.\n * @property {Element} target - The bound target of the gesture.\n *\n * @memberof ReturnTypes\n */ \n\n\n\nvar $2d527d3dfbe18544$require$NOP = $9a3a59fd4e8a6314$exports.NOP;\n/**\n * The Interactor class provides a layer of abstraction between the\n * ClientController and the code that processes user inputs.  Data from\n * recognized gestures is reported directly through to the handlers. The\n * handlers are initialized to NOPs so that the functions which call the\n * handlers don't need to check whether the handler exists.\n *\n * Currently, the Interactor makes use of the Westures library.\n *\n * @memberof module:client\n *\n * @see {@link https://mvanderkamp.github.io/westures/}\n *\n * @param {Object} handlers - Object with keys as the names gestures and values\n *    as the corresponding function for handling that gesture when it is\n *    recognized.\n * @param {Function} [handlers.swipe=NOP]\n * @param {Function} [handlers.tap=NOP]\n * @param {Function} [handlers.track=NOP]\n * @param {Function} [handlers.transform=NOP]\n */ class $2d527d3dfbe18544$var$Interactor {\n    constructor(root, handlers = {}){\n        /**\n     * Object holding the handlers, so they can be dynamically referenced by\n     * name.\n     *\n     * @type {Object}\n     * @property {Function} [swipe=NOP]\n     * @property {Function} [tap=NOP]\n     * @property {Function} [track=NOP]\n     * @property {Function} [transform=NOP]\n     */ this.handlers = {\n            ...$2d527d3dfbe18544$var$Interactor.DEFAULT_HANDLERS,\n            ...handlers\n        };\n        /**\n     * Object to coalesce state from multiple gestures during one event cycle.\n     *\n     * @type {Object}\n     */ this._changes = this._resetChanges();\n        this._scheduled = false;\n        // Begin listening activities immediately.\n        this.addGestures(root);\n        window.addEventListener(\"wheel\", this.wheel.bind(this), false);\n    }\n    /**\n   * Sets up gesture listeners via westures.\n   */ addGestures(root) {\n        const region = new $c7ae6dd8608f332b$exports.Region(root, {\n            preventDefault: false\n        });\n        region.addGesture(new $c7ae6dd8608f332b$exports.Pan(root, this.coalesce.bind(this), {\n            disableKeys: [\n                \"ctrlKey\"\n            ]\n        }));\n        region.addGesture(new $c7ae6dd8608f332b$exports.Pinch(root, this.coalesce.bind(this)));\n        region.addGesture(new $c7ae6dd8608f332b$exports.Rotate(root, this.coalesce.bind(this)));\n        region.addGesture(new $c7ae6dd8608f332b$exports.Swipe(root, this.handlers.swipe));\n        region.addGesture(new $c7ae6dd8608f332b$exports.Swivel(root, this.swivel.bind(this), {\n            enableKeys: [\n                \"ctrlKey\"\n            ],\n            dynamicPivot: true,\n            maxInputs: 1\n        }));\n        region.addGesture(new $c7ae6dd8608f332b$exports.Tap(root, this.handlers.tap));\n        region.addGesture(new $c7ae6dd8608f332b$exports.Track(root, this.handlers.track, {\n            phases: [\n                \"start\",\n                \"end\"\n            ]\n        }));\n    }\n    _resetChanges() {\n        return {\n            centroid: {\n                x: 0,\n                y: 0\n            },\n            delta: {\n                scale: 1,\n                rotation: 0,\n                translation: {\n                    x: 0,\n                    y: 0\n                }\n            }\n        };\n    }\n    /**\n   * Coalesce state changes for this event cycle.\n   */ coalesce(data) {\n        this._changes.centroid = data.centroid;\n        if (data.scale) this._changes.delta.scale *= data.scale;\n        if (data.rotation) this._changes.delta.rotation += data.rotation;\n        if (data.translation) {\n            this._changes.delta.translation.x += data.translation.x;\n            this._changes.delta.translation.y += data.translation.y;\n        }\n        if (!this._scheduled) {\n            window.setTimeout(this._emit.bind(this), 0);\n            this._scheduled = true;\n        }\n    }\n    /**\n   * Emit a transform event with the coalesced state changes.\n   */ _emit() {\n        this.handlers.transform(this._changes);\n        this._changes = this._resetChanges();\n        this._scheduled = false;\n    }\n    /**\n   * Send a swivel event through as a transformation.\n   */ swivel({ rotation: rotation , pivot: pivot  }) {\n        this.coalesce({\n            rotation: rotation,\n            centroid: pivot\n        });\n    }\n    /**\n   * Treat scrollwheel events as zoom events.\n   *\n   * @param {WheelEvent} event - The wheel event from the window.\n   */ wheel(event) {\n        event.preventDefault();\n        const factor = event.ctrlKey ? 0.02 : 0.1;\n        const scale = -(Math.sign(event.deltaY) * factor) + 1;\n        const centroid = {\n            x: event.clientX,\n            y: event.clientY\n        };\n        this.handlers.transform({\n            centroid: centroid,\n            delta: {\n                scale: scale\n            }\n        });\n    }\n}\n/**\n * The default handlers used by the Interactor.\n *\n * @type {object}\n */ $2d527d3dfbe18544$var$Interactor.DEFAULT_HANDLERS = Object.freeze({\n    swipe: $2d527d3dfbe18544$require$NOP,\n    tap: $2d527d3dfbe18544$require$NOP,\n    track: $2d527d3dfbe18544$require$NOP,\n    transform: $2d527d3dfbe18544$require$NOP\n});\n$2d527d3dfbe18544$exports = $2d527d3dfbe18544$var$Interactor;\n\n\n// Symbols to identify these methods as intended only for internal use\nconst $81586d39ed578c8f$var$symbols = Object.freeze({\n    attachSocketIoListeners: Symbol(\"attachSocketIoListeners\"),\n    render: Symbol(\"render\")\n});\n/**\n * The ClientController coordinates communication with the wams server. It sends\n * messages based on user interaction with the canvas and receives messages from\n * the server detailing changes to post to the view.\n *\n * @memberof module:client\n *\n * @param {HTMLCanvasElement} canvas - The underlying CanvasElement object, (not\n * the context), which will fill the page.\n * @param {module:client.ClientView} view - The view that will handle rendering\n * duties.\n * @param {module:client.ClientModel} model - The client-side copy of the\n * server's model.\n */ class $81586d39ed578c8f$var$ClientController {\n    constructor(root, canvas, view, model){\n        /**\n     * Root element where WAMS canvas and HTML elements are located.\n     *\n     * @type {Element}\n     */ this.rootElement = root;\n        /**\n     * The HTMLCanvasElement object is stored by the ClientController so that it\n     * is able to respond to user events triggered on the canvas. The view only\n     * needs to know about the canvas drawing context.\n     *\n     * @type {HTMLCanvasElement}\n     */ this.canvas = canvas;\n        /**\n     * From socket.io, the socket provides a channel of communication with the\n     * server.\n     *\n     * @type {Socket}\n     * @see {@link https://socket.io/docs/client-api/}\n     */ this.socket = null;\n        /**\n     * The ClientModel is a client-side copy of the workspace model, kept up to\n     * date by the controller.\n     *\n     * @type {module:client.ClientModel}\n     */ this.model = model;\n        /**\n     * The ClientView handles the final rendering of the model, as informed by\n     * the controller.\n     *\n     * @type {module:client.ClientView}\n     */ this.view = view;\n        /**\n     * List of custom event names that will be listened to.\n     *\n     * @type {array}\n     */ this.eventListeners = [];\n        /**\n     * Queue of events to be called once Client-side listeners are set up.\n     *\n     * @type {array}\n     */ this.eventQueue = [];\n        /**\n     * Tracks whether a render has been scheduled for the next render frame.\n     *\n     * @type {boolean}\n     */ this.renderScheduled = false;\n        /**\n     * Bound reference to the render method, for use as a callback.\n     *\n     * @type {function}\n     */ this.render_fn = this[$81586d39ed578c8f$var$symbols.render].bind(this);\n        /*\n     * For proper function, we need to make sure that the canvas is as large as\n     * it can be at all times, and that at all times we know how big the canvas\n     * is.\n     */ this.resizeCanvasToFillWindow();\n    }\n    /**\n   * Attaches listeners to messages received over the socket connection. All\n   * received messages at this layer should be those conforming to the Message /\n   * Reporter protocol.\n   *\n   * This internal routine should be called as part of socket establishment.\n   *\n   * @alias [@@attachSocketIoListeners]\n   * @memberof module:client.ClientController\n   */ [$81586d39ed578c8f$var$symbols.attachSocketIoListeners]() {\n        const listeners = {\n            // For the server to inform about changes to the model\n            [$81586d39ed578c8f$require$Message.ADD_ELEMENT]: (data)=>this.model.addElement(data),\n            [$81586d39ed578c8f$require$Message.ADD_IMAGE]: (data)=>this.model.addImage(data),\n            [$81586d39ed578c8f$require$Message.ADD_ITEM]: (data)=>this.model.addItem(data),\n            [$81586d39ed578c8f$require$Message.ADD_SHADOW]: (data)=>this.model.addShadow(data),\n            [$81586d39ed578c8f$require$Message.RM_ITEM]: (data)=>this.model.removeItem(data),\n            [$81586d39ed578c8f$require$Message.RM_SHADOW]: (data)=>this.model.removeShadow(data),\n            [$81586d39ed578c8f$require$Message.UD_ITEM]: (data)=>this.model.updateItem(data),\n            [$81586d39ed578c8f$require$Message.UD_SHADOW]: (data)=>this.model.updateShadow(data),\n            [$81586d39ed578c8f$require$Message.UD_VIEW]: (data)=>this.model.updateView(data),\n            // For hopefully occasional extra adjustments to objects in the model.\n            [$81586d39ed578c8f$require$Message.RM_ATTRS]: (data)=>this.model.removeAttributes(data),\n            [$81586d39ed578c8f$require$Message.SET_ATTRS]: (data)=>this.model.setAttributes(data),\n            [$81586d39ed578c8f$require$Message.SET_IMAGE]: (data)=>this.model.setImage(data),\n            [$81586d39ed578c8f$require$Message.SET_RENDER]: (data)=>this.model.setRender(data),\n            [$81586d39ed578c8f$require$Message.SET_PARENT]: (data)=>this.model.setParent(data),\n            // Connection establishment related (disconnect, initial setup)\n            [$81586d39ed578c8f$require$Message.INITIALIZE]: this.initialize.bind(this),\n            [$81586d39ed578c8f$require$Message.LAYOUT]: $81586d39ed578c8f$require$NOP,\n            [$81586d39ed578c8f$require$Message.CLICK]: $81586d39ed578c8f$require$NOP,\n            [$81586d39ed578c8f$require$Message.RESIZE]: $81586d39ed578c8f$require$NOP,\n            [$81586d39ed578c8f$require$Message.SWIPE]: $81586d39ed578c8f$require$NOP,\n            [$81586d39ed578c8f$require$Message.TRACK]: $81586d39ed578c8f$require$NOP,\n            [$81586d39ed578c8f$require$Message.TRANSFORM]: $81586d39ed578c8f$require$NOP,\n            [$81586d39ed578c8f$require$Message.POINTER]: $81586d39ed578c8f$require$NOP,\n            [$81586d39ed578c8f$require$Message.BLUR]: $81586d39ed578c8f$require$NOP,\n            // TODO: This could be more... elegant...\n            [$81586d39ed578c8f$require$Message.FULL]: ()=>{\n                document.body.innerHTML = \"WAMS is full! :(\";\n            },\n            // For user-defined behavior\n            [$81586d39ed578c8f$require$Message.DISPATCH]: this.handleCustomEvent.bind(this)\n        };\n        Object.entries(listeners).forEach(([p, v])=>this.socket.on(p, v));\n        this.socket.onAny(this.scheduleRender.bind(this));\n        // Keep the view size up to date.\n        window.addEventListener(\"resize\", this.resize.bind(this), false);\n        /*\n     * As no automatic draw loop is used, (there are no animations), need to\n     * know when to re-render in response to an image loading.\n     */ const scheduleFn = this.scheduleRender.bind(this);\n        document.addEventListener($81586d39ed578c8f$require$Message.IMG_LOAD, scheduleFn);\n    }\n    /**\n   * Establishes a socket.io connection with the server, using the global WAMS\n   * namespace. Connections should be non-persistent over disconnects, (i.e., no\n   * reconnections), as this was the cause of many bugs.\n   *\n   * This internal routine should be called automatically upon ClientController\n   * instantiation.\n   */ connect() {\n        this.socket = $81586d39ed578c8f$require$io($81586d39ed578c8f$require$constants.NS_WAMS, {\n            autoConnect: false,\n            reconnection: false,\n            transports: [\n                \"websocket\",\n                \"polling\"\n            ]\n        });\n        this[$81586d39ed578c8f$var$symbols.attachSocketIoListeners]();\n        window.requestAnimationFrame(this.render_fn);\n        this.socket.connect();\n    }\n    /**\n   * Renders a frame.\n   *\n   * @alias [@@render]\n   * @memberof module:client.ClientController\n   */ [$81586d39ed578c8f$var$symbols.render]() {\n        if (this.renderScheduled) {\n            this.view.draw();\n            this.renderScheduled = false;\n        }\n        window.requestAnimationFrame(this.render_fn);\n    }\n    /**\n   * @param {object} data\n   */ handleCustomEvent(data) {\n        if (this.eventListeners.indexOf(data.action) < 0) this.eventQueue.push(data);\n        this.model.dispatch(data);\n    }\n    /**\n   * For responding to window resizing by the user. Resizes the canvas to fit\n   * the new window size, and reports the change to the server so it can be\n   * reflected in the model.\n   */ resize() {\n        this.resizeCanvasToFillWindow();\n        this.socket.emit($81586d39ed578c8f$require$Message.RESIZE, this.view);\n        this.view.draw();\n    }\n    /**\n   * Stretches the canvas to fit the available window space, and updates the\n   * view accordingly.\n   *\n   * Note: Scaling to account for device pixel ratio is disabled for iOS\n   * as a workaround for a bug with Safari and Chrome, where `context.setTransform`\n   * would make the page unresponsive.\n   */ resizeCanvasToFillWindow() {\n        const iOS = /iPad|iPhone|iPod|Apple/.test(window.navigator.platform);\n        const dpr = iOS ? 1 : window.devicePixelRatio || 1;\n        const w = window.innerWidth;\n        const h = window.innerHeight;\n        this.canvas.width = w * dpr;\n        this.canvas.height = h * dpr;\n        this.canvas.style.width = `${w}px`;\n        this.canvas.style.height = `${h}px`;\n        this.view.resizeToFillWindow(dpr, iOS);\n    }\n    /**\n   * Schedules a render for the next frame interval.\n   */ scheduleRender() {\n        this.renderScheduled = true;\n    }\n    /**\n   * As this object will be instantiated on page load, and will generate a view\n   * before communication lines with the server have been opened, the view will\n   * not reflect the model automatically. This function responds to a message\n   * from the server which contains the current state of the model, and forwards\n   * this data to the view so that it can correctly render the model.\n   */ initialize(data) {\n        const { clientScripts: clientScripts , stylesheets: stylesheets , title: title , backgroundImage: backgroundImage , color: color , useMultiScreenGestures: useMultiScreenGestures  } = data.settings;\n        if (clientScripts) this.loadClientScripts(clientScripts);\n        if (stylesheets) this.loadStylesheets(stylesheets);\n        document.title = title;\n        this.view.id = data.viewId;\n        if (backgroundImage) {\n            this.canvas.style.backgroundColor = \"transparent\";\n            document.body.style.backgroundImage = `url(\"${backgroundImage}\")`;\n        } else this.canvas.style.backgroundColor = color;\n        this.model.initialize(data);\n        this.setUpInteractor(useMultiScreenGestures);\n        // Need to tell the model what the view looks like once setup is complete.\n        this.socket.emit($81586d39ed578c8f$require$Message.LAYOUT, this.view);\n    }\n    loadClientScripts(scripts) {\n        scripts.forEach((src)=>{\n            const script = document.createElement(\"script\");\n            script.src = src;\n            document.body.appendChild(script);\n        });\n    }\n    loadStylesheets(stylesheets) {\n        stylesheets.forEach((src)=>{\n            const link = document.createElement(\"link\");\n            link.href = src;\n            link.type = \"text/css\";\n            link.rel = \"stylesheet\";\n            document.head.appendChild(link);\n        });\n    }\n    /**\n   * The Interactor is a level of abstraction between the ClientController and\n   * the gesture recognition library such that libraries can be swapped out\n   * more easily, if need be. At least in theory. All the ClientController\n   * needs to provide is handler functions for responding to the recognized\n   * gestures.\n   *\n   * @param {boolean} [useMultiScreenGestures=false] Whether to use server-side\n   * gestures. Default is to use client-side gestures.\n   */ setUpInteractor(useMultiScreenGestures = false) {\n        this.setUpInputForwarding();\n        if (!useMultiScreenGestures) return new $2d527d3dfbe18544$exports(this.rootElement, {\n            swipe: this.socket.emit.bind(this.socket, $81586d39ed578c8f$require$Message.SWIPE),\n            tap: this.socket.emit.bind(this.socket, $81586d39ed578c8f$require$Message.CLICK),\n            track: this.socket.emit.bind(this.socket, $81586d39ed578c8f$require$Message.TRACK),\n            transform: this.socket.emit.bind(this.socket, $81586d39ed578c8f$require$Message.TRANSFORM)\n        });\n    }\n    /**\n   * Set up input event forwarding.\n   */ setUpInputForwarding() {\n        // Forward pointer events\n        [\n            \"pointerdown\",\n            \"pointermove\",\n            \"pointerup\"\n        ].forEach((eventname)=>{\n            window.addEventListener(eventname, (event)=>{\n                // Extract only the properties we care about\n                const { type: type , pointerId: pointerId , clientX: clientX , clientY: clientY , target: target , altKey: altKey , ctrlKey: ctrlKey , metaKey: metaKey , shiftKey: shiftKey  } = event;\n                const data = {\n                    type: type,\n                    pointerId: pointerId,\n                    clientX: clientX,\n                    clientY: clientY,\n                    target: target,\n                    altKey: altKey,\n                    ctrlKey: ctrlKey,\n                    metaKey: metaKey,\n                    shiftKey: shiftKey\n                };\n                this.socket.emit($81586d39ed578c8f$require$Message.POINTER, data);\n            });\n        });\n        // Forward blur and cancel events as \"BLUR\" messages\n        [\n            \"pointercancel\",\n            \"blur\"\n        ].forEach((eventname)=>{\n            window.addEventListener(eventname, (event)=>{\n                this.socket.emit($81586d39ed578c8f$require$Message.BLUR, {});\n            });\n        });\n    }\n    /**\n   * Dispatch a custom ServerEvent.\n   *\n   * @param {string} action\n   * @param {object} payload\n   */ dispatch(action, payload) {\n        this.socket.emit($81586d39ed578c8f$require$Message.DISPATCH, {\n            action: action,\n            payload: payload\n        });\n    }\n}\n$81586d39ed578c8f$exports = $81586d39ed578c8f$var$ClientController;\n\n\nvar $2671a88abd61b478$exports = {};\n\"use strict\";\nvar $49a6b9c9f3993e79$exports = {};\n\"use strict\";\n\nvar $49a6b9c9f3993e79$require$Point2D = $9a3a59fd4e8a6314$exports.Point2D;\nvar $49a6b9c9f3993e79$require$WamsElement = $9a3a59fd4e8a6314$exports.WamsElement;\n/**\n * The ClientElement class exposes the draw() funcitonality of wams elements.\n *\n * @extends module:shared.WamsElement\n * @memberof module:client\n *\n * @param {module:shared.WamsElement} data - The data from the server describing this item.\n */ class $49a6b9c9f3993e79$var$ClientElement extends $49a6b9c9f3993e79$require$WamsElement {\n    constructor(data){\n        super(data);\n        /**\n     * Root element where WAMS canvas and HTML elements are located.\n     *\n     * @type {Element}\n     */ const root = document.querySelector(\"#root\");\n        /**\n     * The DOM element.\n     *\n     * @type {Element}\n     */ this.element = document.createElement(data.tagname);\n        this.element.classList.add(\"wams-element\");\n        this.element.width = this.width;\n        this.element.height = this.height;\n        this.element.style.width = `${this.width}px`;\n        this.element.style.height = `${this.height}px`;\n        root.appendChild(this.element);\n        if (Object.prototype.hasOwnProperty.call(data, \"attributes\")) this.setAttributes(data.attributes);\n    }\n    /**\n   * Render the element. Really just updates the rotation and transformation\n   * matrix.\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {module:client.ClientView} view\n   */ draw(context, view) {\n        const tl = new $49a6b9c9f3993e79$require$Point2D(this.x - view.x, this.y - view.y).divideBy(this.scale).rotate(this.rotation);\n        const rotate = `rotate(${view.rotation - this.rotation}rad) `;\n        const scale = `scale(${this.scale * view.scale}) `;\n        const translate = `translate(${tl.x}px, ${tl.y}px) `;\n        this.element.style.transform = scale + rotate + translate;\n    }\n    /**\n   * Sets attributes for the element.\n   *\n   * @param {object} attributes\n   */ setAttributes(attributes) {\n        this.attributes = attributes;\n        Object.entries(attributes).forEach(([k, v])=>{\n            this.element[k] = v;\n        });\n    }\n    /**\n   * Set parent ServerGroup for the element.\n   *\n   * @param {module:server:ServerGroup} parent server group for this element\n   */ setParent(parent) {\n        this.parent = parent;\n    }\n    /**\n   * Removes attributes from the element.\n   *\n   * @param {string[]} attributes\n   */ removeAttributes(attributes) {\n        attributes.forEach((attr)=>{\n            delete this.attributes[attr];\n            this.element[attr] = null;\n        });\n    }\n}\n$49a6b9c9f3993e79$exports = $49a6b9c9f3993e79$var$ClientElement;\n\n\nvar $06eb776eda6204d9$exports = {};\n\"use strict\";\n\nvar $06eb776eda6204d9$require$WamsImage = $9a3a59fd4e8a6314$exports.WamsImage;\nvar $06eb776eda6204d9$require$Message = $9a3a59fd4e8a6314$exports.Message;\n/**\n * Abstraction of the requisite logic for generating an image object which will\n * load the appropriate image and report when it has finished loading the image\n * so that it can be displayed.\n *\n * @inner\n * @memberof module:client.ClientImage\n *\n * @param {string} src - Image source path.\n *\n * @returns {?Image}\n */ function $06eb776eda6204d9$var$createImage(src) {\n    if (src) {\n        const img = new Image();\n        img.src = src;\n        img.loaded = false;\n        img.addEventListener(\"load\", ()=>{\n            img.loaded = true;\n            document.dispatchEvent(new CustomEvent($06eb776eda6204d9$require$Message.IMG_LOAD));\n        }, {\n            once: true\n        });\n        return img;\n    }\n    return {};\n}\n/**\n * The ClientImage class exposes the draw() funcitonality of wams items.\n *\n * @extends module:shared.WamsImage\n * @memberof module:client\n *\n * @param {module:shared.Item} data - The data from the server describing this item.\n */ class $06eb776eda6204d9$var$ClientImage extends $06eb776eda6204d9$require$WamsImage {\n    constructor(data){\n        super(data);\n        /**\n     * The image to render.\n     *\n     * @type {Image}\n     */ this.image = {};\n        if (data.src) this.setImage(data.src);\n    }\n    /**\n   * Render the image onto the given context.\n   *\n   * @param {CanvasRenderingContext2D} context\n   */ draw(context) {\n        context.save();\n        context.translate(this.x, this.y);\n        context.rotate(-this.rotation);\n        context.scale(this.scale, this.scale);\n        if (this.image.loaded) context.drawImage(this.image, 0, 0, this.width, this.height);\n        else {\n            context.fillStyle = \"darkgrey\";\n            context.fillRect(0, 0, this.width, this.height);\n        }\n        context.restore();\n    }\n    /**\n   * Set parent ServerGroup for the image.\n   *\n   * @param {module:server:ServerGroup} parent server group for this image\n   */ setParent(parent) {\n        this.parent = parent;\n    }\n    /**\n   * Sets the image path and loads the image.\n   *\n   * @param {string} path - The image's source path\n   */ setImage(path) {\n        this.src = path;\n        this.image = $06eb776eda6204d9$var$createImage(path);\n    }\n}\n$06eb776eda6204d9$exports = $06eb776eda6204d9$var$ClientImage;\n\n\nvar $f346ae80a2055480$exports = {};\n\"use strict\";\n\nvar $f346ae80a2055480$require$Item = $9a3a59fd4e8a6314$exports.Item;\nvar $1e33459129279de6$exports = {};\n/*\n * Access point for npm.\n */ \"use strict\";\nvar $1e33459129279de6$var$$663f930907ca9f24$exports = {};\n/*\n * Author: Michael van der Kamp\n * Date: July/August, 2018\n *\n * This file provides the definition of the CanvasSequence class.\n */ \"use strict\";\nvar $1e33459129279de6$var$$9a8fdc9f7382f5d6$exports = {};\n/*\n * Author: Michael van der Kamp\n * Date: July/August, 2018\n *\n * This file defines the low level 'CanvasAtom' for use by a CanvasSequence.\n *\n * A CanvasAtom is a unit of execution in a CanvasSequence. It comes in two\n * flavours: one for describing a method call, one for describing a property\n * assignment.\n */ \"use strict\";\n/**\n * The types of CanvasAtoms that are available.\n *\n * @enum {string}\n * @readonly\n * @lends CanvasAtom\n */ const $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$TYPES = {\n    /** @const */ METHOD: \"method\",\n    /** @const */ PROPERTY: \"property\"\n};\n/**\n * Internal common constructor definition for Canvas Atoms.\n *\n * @param {string} inst - The canvas context instruction.\n * @param {*[]} args - The arguments to the instruction.\n */ class $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$Atom {\n    constructor(inst, args){\n        /**\n     * The canvas context instruction.\n     *\n     * @private\n     * @type {string}\n     */ this.inst = inst;\n        /**\n     * The arguments to the instruction.\n     *\n     * @private\n     * @type {*[]}\n     */ this.args = args;\n    }\n}\n/**\n * A MethodCanvasAtom is used for canvas context methods. The arguments will be\n * treated as an actual array, all of which will be passed to the method when\n * the atom is executed.\n *\n * @extends Atom\n */ class $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$MethodCanvasAtom extends $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$Atom {\n    constructor(inst, args){\n        super(inst, args);\n        /**\n     * The type of atom.\n     *\n     * @private\n     * @type {string}\n     */ this.type = $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$TYPES.METHOD;\n    }\n    /**\n   * Execute the atom on the given context.\n   *\n   * @param {CanvasRenderingContext2D} context\n   */ execute(context) {\n        context[this.inst](...this.args);\n    }\n}\n/**\n * A PropertyCanvasAtom is used for canvas context properties (a.k.a. fields).\n * Only the first argument will be used, and will be the value assigned to the\n * field.\n *\n * @extends Atom\n */ class $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$PropertyCanvasAtom extends $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$Atom {\n    constructor(inst, args){\n        super(inst, args);\n        this.type = $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$TYPES.PROPERTY;\n    }\n    /**\n   * Execute the atom on the given context.\n   *\n   * @param {CanvasRenderingContext2D} context\n   */ execute(context) {\n        context[this.inst] = this.args[0];\n    }\n}\n/*\n * This object is for demultiplexing types in the CanvasAtom constructor.\n * Defined outside the constructor so it doesn't need to be redefined every\n * time a new atom is constructed. Defined outside the class so that it is not\n * externally exposed.\n */ const $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$atomOf = {\n    [$1e33459129279de6$var$$9a8fdc9f7382f5d6$var$TYPES.METHOD]: $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$MethodCanvasAtom,\n    [$1e33459129279de6$var$$9a8fdc9f7382f5d6$var$TYPES.PROPERTY]: $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$PropertyCanvasAtom\n};\n/**\n * The exposed CanvasAtom class. Results in the instantiation of either a\n * MethodCanvasAtom or a PropertyCanvasAtom, depending on the given type.\n *\n * @param {string} type - Either CanvasAtom.METHOD or CanvasAtom.PROPERTY.\n * @param {string} inst - The canvas context instruction.\n * @param {*[]} args - The arguments to the instruction.\n */ class $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$CanvasAtom {\n    constructor(type, inst, args){\n        return new $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$atomOf[type](inst, args);\n    }\n}\n/*\n * Define the types once locally, but make them available externally as\n * immutable properties on the class.\n */ Object.entries($1e33459129279de6$var$$9a8fdc9f7382f5d6$var$TYPES).forEach(([p, v])=>{\n    Object.defineProperty($1e33459129279de6$var$$9a8fdc9f7382f5d6$var$CanvasAtom, p, {\n        value: v,\n        configurable: false,\n        enumerable: true,\n        writable: false\n    });\n});\n$1e33459129279de6$var$$9a8fdc9f7382f5d6$exports = $1e33459129279de6$var$$9a8fdc9f7382f5d6$var$CanvasAtom;\nconst $1e33459129279de6$var$$663f930907ca9f24$var$locals = Object.freeze({\n    METHODS: [\n        \"addHitRegion\",\n        \"arc\",\n        \"arcTo\",\n        \"beginPath\",\n        \"bezierCurveTo\",\n        \"clearHitRegions\",\n        \"clearRect\",\n        \"clip\",\n        \"closePath\",\n        \"drawFocusIfNeeded\",\n        \"drawImage\",\n        \"ellipse\",\n        \"fill\",\n        \"fillRect\",\n        \"fillText\",\n        \"lineTo\",\n        \"moveTo\",\n        \"putImageData\",\n        \"quadraticCurveTo\",\n        \"rect\",\n        \"removeHitRegion\",\n        \"resetTransform\",\n        \"restore\",\n        \"rotate\",\n        \"save\",\n        \"scale\",\n        \"scrollPathIntoView\",\n        \"setLineDash\",\n        \"setTransform\",\n        \"stroke\",\n        \"strokeRect\",\n        \"strokeText\",\n        \"transform\",\n        \"translate\"\n    ],\n    PROPERTIES: [\n        \"direction\",\n        \"fillStyle\",\n        \"filter\",\n        \"font\",\n        \"globalAlpha\",\n        \"globalCompositeOperation\",\n        \"imageSmoothingEnabled\",\n        \"imageSmoothingQuality\",\n        \"lineCap\",\n        \"lineDashOffset\",\n        \"lineJoin\",\n        \"lineWidth\",\n        \"miterLimit\",\n        \"shadowBlur\",\n        \"shadowColor\",\n        \"shadowOffsetX\",\n        \"shadowOffsetY\",\n        \"strokeStyle\",\n        \"textAlign\",\n        \"textBaseline\"\n    ]\n});\n// Mark properties as intended for internal use.\nconst $1e33459129279de6$var$$663f930907ca9f24$var$symbols = Object.freeze({\n    sequence: Symbol.for(\"sequence\"),\n    push: Symbol.for(\"push\"),\n    fromJSON: Symbol.for(\"fromJSON\")\n});\n/**\n * A CanvasSequence is a linear collection of CanvasAtoms, capable of being\n * executed on a CanvasRenderingContext2D.\n *\n * @param {CanvasSequence} [data=null] - An unrevived (i.e. freshly transmitted)\n * CanvasSequence. If present, the constructor revives the sequence. Note that\n * an already revived CanvasSequence cannot be used as the argument here.\n */ class $1e33459129279de6$var$$663f930907ca9f24$var$CanvasSequence {\n    constructor(data = null){\n        /**\n     * The CanvasAtoms that form the sequence.\n     *\n     * @private\n     * @type {CanvasAtom[]}\n     */ this[$1e33459129279de6$var$$663f930907ca9f24$var$symbols.sequence] = [];\n        // If data is present, assume it is a CanvasSequence that needs reviving.\n        if (data) this[$1e33459129279de6$var$$663f930907ca9f24$var$symbols.fromJSON](data);\n    }\n    /**\n   * Revive the sequence from transmitted JSON data.\n   *\n   * @private\n   * @param {CanvasSequence} [data={}]\n   */ [$1e33459129279de6$var$$663f930907ca9f24$var$symbols.fromJSON](data = {\n        sequence: []\n    }) {\n        data.sequence.forEach(({ type: type , inst: inst , args: args  })=>{\n            this[$1e33459129279de6$var$$663f930907ca9f24$var$symbols.push](type, inst, args);\n        });\n    }\n    /**\n   * Push a new CanvasAtom onto the end of the sequence.\n   *\n   * @private\n   * @param {string} type - The type of CanvasAtom to push.\n   * @param {string} inst - The canvas context instruction.\n   * @param {*[]} args - The arguments to the canvas context instruction.\n   */ [$1e33459129279de6$var$$663f930907ca9f24$var$symbols.push](type, inst, args) {\n        this[$1e33459129279de6$var$$663f930907ca9f24$var$symbols.sequence].push(new $1e33459129279de6$var$$9a8fdc9f7382f5d6$exports(type, inst, args));\n    }\n    /**\n   * Execute the sequence on the given context.\n   *\n   * @param {CanvasRenderingContext2D} context\n   */ execute(context) {\n        context.save();\n        this[$1e33459129279de6$var$$663f930907ca9f24$var$symbols.sequence].forEach((a)=>a.execute(context));\n        context.restore();\n    }\n    /**\n   * Export a JSON serialized version of the sequence, ready for transmission.\n   *\n   * @return {CanvasSequence} In JSON serialized form.\n   */ toJSON() {\n        return {\n            sequence: this[$1e33459129279de6$var$$663f930907ca9f24$var$symbols.sequence]\n        };\n    }\n}\n$1e33459129279de6$var$$663f930907ca9f24$var$locals.METHODS.forEach((m)=>{\n    Object.defineProperty($1e33459129279de6$var$$663f930907ca9f24$var$CanvasSequence.prototype, m, {\n        value: function pushMethodCall(...args) {\n            this[$1e33459129279de6$var$$663f930907ca9f24$var$symbols.push]($1e33459129279de6$var$$9a8fdc9f7382f5d6$exports.METHOD, m, args);\n        },\n        writable: false,\n        enumerable: true,\n        configurable: false\n    });\n});\n$1e33459129279de6$var$$663f930907ca9f24$var$locals.PROPERTIES.forEach((p)=>{\n    Object.defineProperty($1e33459129279de6$var$$663f930907ca9f24$var$CanvasSequence.prototype, p, {\n        get () {\n            throw `Invalid canvas sequencer interaction, cannot get ${p}.`;\n        },\n        set (v) {\n            this[$1e33459129279de6$var$$663f930907ca9f24$var$symbols.push]($1e33459129279de6$var$$9a8fdc9f7382f5d6$exports.PROPERTY, p, [\n                v\n            ]);\n        },\n        enumerable: true,\n        configurable: false\n    });\n});\n$1e33459129279de6$var$$663f930907ca9f24$exports = $1e33459129279de6$var$$663f930907ca9f24$var$CanvasSequence;\nvar $1e33459129279de6$var$$4fabbdeef1f2d4ae$exports = {};\n/*\n * Author: Michael van der Kamp\n * Date: July/August, 2018\n *\n * Thie file provides the definition of the CanvasBlueprint class.\n *\n * A CanvasBlueprint is similar to a plain CanvasSequence, except that it\n * accepts tag strings as arguments, and before it can be executed it  needs to\n * be 'built' with an object defining which values should replace the tags.\n */ \"use strict\";\n// Mark properties as intended for internal use.\nconst $1e33459129279de6$var$$4fabbdeef1f2d4ae$var$symbols = Object.freeze({\n    sequence: Symbol.for(\"sequence\"),\n    push: Symbol.for(\"push\")\n});\n/**\n * Replace tags in the given string with correlated value in values.\n *\n * Rules:\n * - Strings not surrounded by curly braces {} will be returned.\n * - Strings surrounded by curly braces but not corresponding to a property on\n *   'values' will result in a string without the curly braces being returned.\n * - Strings surrounded by curly braces, with the inner string corresponding to\n *   a property on 'values' will result in the corresponding value being\n *   returned.\n *\n * @inner\n * @private\n *\n * @param {string} str\n * @param {object} values\n *\n * @return {string|mixed} Either the original string if no replacement was\n * performed, or the appropriate value.\n */ function $1e33459129279de6$var$$4fabbdeef1f2d4ae$var$replaceTags(str, values) {\n    const tag = str.replace(/^\\{|\\}$/gu, \"\");\n    if (tag !== str) return values.hasOwnProperty(tag) ? values[tag] : tag;\n    return str;\n}\n/**\n * A CanvasBlueprint is a rebuildable CanvasSequence. It accepts tagged\n * arguments. When built, tags will be replaced using properties from a provided\n * object.\n *\n * @extends CanvasSequence\n */ class $1e33459129279de6$var$$4fabbdeef1f2d4ae$var$CanvasBlueprint extends $1e33459129279de6$var$$663f930907ca9f24$exports {\n    /**\n   * Build the blueprint using the provided values.\n   *\n   * Rules:\n   * - Strings not surrounded by curly braces {} will be returned.\n   * - Strings surrounded by curly braces but not corresponding to a property on\n   *   'values' will result in a string without the curly braces being returned.\n   * - Strings surrounded by curly braces, with the inner string corresponding\n   *   to a property on 'values' will result in the corresponding value being\n   *   returned.\n   *\n   * @param {object} values - The values with which to construct the sequence.\n   *\n   * @return {CanvasSequence} The constructed sequence.\n   */ build(values = {}) {\n        const seq = new $1e33459129279de6$var$$663f930907ca9f24$exports();\n        this[$1e33459129279de6$var$$4fabbdeef1f2d4ae$var$symbols.sequence].forEach(({ type: type , inst: inst , args: args  })=>{\n            const realArgs = args.map((v)=>{\n                return typeof v === \"string\" ? $1e33459129279de6$var$$4fabbdeef1f2d4ae$var$replaceTags(v, values) : v;\n            });\n            seq[$1e33459129279de6$var$$4fabbdeef1f2d4ae$var$symbols.push](type, inst, realArgs);\n        });\n        return seq;\n    }\n    /**\n   * CanvasBlueprints cannot be directly executed!\n   *\n   * @throws TypeError\n   */ execute() {\n        throw new TypeError(\"Cannot execute a blueprint.\");\n    }\n}\n$1e33459129279de6$var$$4fabbdeef1f2d4ae$exports = $1e33459129279de6$var$$4fabbdeef1f2d4ae$var$CanvasBlueprint;\n$1e33459129279de6$exports = {\n    CanvasSequence: $1e33459129279de6$var$$663f930907ca9f24$exports,\n    CanvasBlueprint: $1e33459129279de6$var$$4fabbdeef1f2d4ae$exports\n};\n\n\nvar $f346ae80a2055480$require$CanvasSequence = $1e33459129279de6$exports.CanvasSequence;\n/**\n * The ClientItem class exposes the draw() funcitonality of wams items.\n *\n * @extends module:shared.Item\n * @memberof module:client\n *\n * @param {module:shared.Item} data - The data from the server describing this item.\n */ class $f346ae80a2055480$var$ClientItem extends $f346ae80a2055480$require$Item {\n    constructor(data){\n        super(data);\n        /**\n     * The actual render.\n     *\n     * @type {CanvasSequence}\n     */ this.render = null;\n        if (data.sequence) this.setRender(data.sequence);\n    }\n    /**\n   * Render the item onto the given context.\n   *\n   * @param {CanvasRenderingContext2D} context\n   */ draw(context) {\n        if (this.render) {\n            context.save();\n            context.translate(this.x, this.y);\n            context.rotate(-this.rotation);\n            context.scale(this.scale, this.scale);\n            this.render.execute(context);\n            context.restore();\n        }\n    }\n    /**\n   * Set parent ServerGroup for the item.\n   *\n   * @param {module:server:ServerGroup} parent server group for this item\n   */ setParent(parent) {\n        this.parent = parent;\n    }\n    /**\n   * Set the item's canvas rendering sequence.\n   *\n   * @param {CanvasSequence} sequence - Raw, unrevived CanvasSequence.\n   */ setRender(sequence) {\n        this.render = new $f346ae80a2055480$require$CanvasSequence(sequence);\n    }\n}\n$f346ae80a2055480$exports = $f346ae80a2055480$var$ClientItem;\n\n\nvar $36c7439c01b30b99$exports = {};\n/*\n * SOME NOTES ABOUT CANVAS RENDERING:\n *  - Avoid using shadows. They appear to kill the framerate.\n */ \"use strict\";\n\nvar $36c7439c01b30b99$require$colours = $9a3a59fd4e8a6314$exports.colours;\nvar $36c7439c01b30b99$require$View = $9a3a59fd4e8a6314$exports.View;\n// Symbols to mark these methods as intended for internal use only.\nconst $36c7439c01b30b99$var$symbols = Object.freeze({\n    align: Symbol(\"align\"),\n    style: Symbol(\"style\"),\n    outline: Symbol(\"outline\"),\n    marker: Symbol(\"marker\")\n});\n/**\n * The ShadowView class exposes a simple draw() function which renders a shadowy\n * outline of the view onto the canvas.\n *\n * @extends module:shared.View\n * @memberof module:client\n *\n * @param {module:shared.View} values - server-provided data describing this\n * view.\n */ class $36c7439c01b30b99$var$ShadowView extends $36c7439c01b30b99$require$View {\n    /**\n   * Render an outline of this view.\n   *\n   * @param {CanvasRenderingContext2D} context - context on which to draw.\n   */ draw(context) {\n        /*\n     * WARNING: It is *crucial* that this series of instructions be wrapped in\n     * save() and restore().\n     */ context.save();\n        this[$36c7439c01b30b99$var$symbols.align](context);\n        this[$36c7439c01b30b99$var$symbols.style](context);\n        this[$36c7439c01b30b99$var$symbols.outline](context);\n        this[$36c7439c01b30b99$var$symbols.marker](context);\n        context.restore();\n    }\n    /**\n   * Aligns the drawing context so the outline will be rendered in the correct\n   * location with the correct orientation.\n   *\n   * @alias [@@align]\n   * @memberof module:client.ShadowView\n   *\n   * @param {CanvasRenderingContext2D} context - context on which to draw.\n   */ [$36c7439c01b30b99$var$symbols.align](context) {\n        context.translate(this.x, this.y);\n        context.rotate(-this.rotation);\n        context.scale(1 / this.scale, 1 / this.scale);\n    }\n    /**\n   * Applies styling to the drawing context.\n   *\n   * @alias [@@style]\n   * @memberof module:client.ShadowView\n   *\n   * @param {CanvasRenderingContext2D} context - context on which to draw.\n   */ [$36c7439c01b30b99$var$symbols.style](context) {\n        context.globalAlpha = 0.5;\n        context.strokeStyle = $36c7439c01b30b99$require$colours[this.id % $36c7439c01b30b99$require$colours.length];\n        context.fillStyle = context.strokeStyle;\n        context.lineWidth = 5;\n    }\n    /**\n   * Draws an outline of the view.\n   *\n   * @alias [@@outline]\n   * @memberof module:client.ShadowView\n   */ [$36c7439c01b30b99$var$symbols.outline](context) {\n        context.strokeRect(0, 0, this.width, this.height);\n    }\n    /**\n   * Draws a small triangle in the upper-left corner of the outline, so that\n   * other views can quickly tell which way this view is oriented.\n   *\n   * @alias [@@marker]\n   * @memberof module:client.ShadowView\n   *\n   * @param {CanvasRenderingContext2D} context - context on which to draw.\n   */ [$36c7439c01b30b99$var$symbols.marker](context) {\n        const base = context.lineWidth / 2;\n        const height = 25;\n        context.beginPath();\n        context.moveTo(base, base);\n        context.lineTo(base, height);\n        context.lineTo(height, base);\n        context.lineTo(base, base);\n        context.fill();\n    }\n}\n$36c7439c01b30b99$exports = $36c7439c01b30b99$var$ShadowView;\n\n\n\nvar $2671a88abd61b478$require$removeById = $9a3a59fd4e8a6314$exports.removeById;\nconst $2671a88abd61b478$var$REQUIRED_DATA = Object.freeze([\n    \"viewId\",\n    \"items\",\n    \"views\"\n]);\n/**\n * The ClientModel is a client-side copy of those aspects of the model that are\n * necessary for rendering the view for the user.\n *\n * @memberof module:client\n */ class $2671a88abd61b478$var$ClientModel {\n    constructor(root){\n        /**\n     * Root element where WAMS canvas and HTML elements are located.\n     *\n     * @type {Element}\n     */ // eslint-disable-next-line\n        this.rootElement = root;\n        /**\n     * All the items in the model, which may all need rendering at some point.\n     * Kept up to date via the ClientController.\n     *\n     * @type {Map.<module:client.ClientItem>}\n     */ this.items = new Map();\n        /**\n     * An ordered list of the items, so that the render order can accurately\n     * match the order on the server, and be adjusted likewise.\n     *\n     * @type {module:client.ClientItem[]}\n     */ this.itemOrder = [];\n        /**\n     * The shadows are all the other views that are currently active. They are\n     * tracked in full and an outline for each is rendered.\n     *\n     * @type {Map.<module:client.ShadowView>}\n     */ this.shadows = new Map();\n        /**\n     * The view data for this user.\n     *\n     * @type {module:client.ClientView}\n     */ this.view = null;\n    }\n    /**\n   * Generate and store an item of the given type.\n   *\n   * @param {Item} item\n   */ _addItem(item) {\n        this.itemOrder.push(item);\n        this.items.set(item.id, item);\n    }\n    /**\n   * Generate and store an Element with the given values.\n   *\n   * @param {module:shared.WamsElement} values - State of the new Element\n   */ addElement(values) {\n        this._addItem(new $49a6b9c9f3993e79$exports(values));\n    }\n    /**\n   * Generate and store an Image with the given values.\n   *\n   * @param {module:shared.WamsImage} values - State of the new image.\n   */ addImage(values) {\n        this._addItem(new $06eb776eda6204d9$exports(values));\n    }\n    /**\n   * Generate and store an Item with the given values.\n   *\n   * @param {module:shared.Item} values - State of the new Item.\n   */ addItem(values) {\n        this._addItem(new $f346ae80a2055480$exports(values));\n    }\n    /**\n   * Generate and store a 'shadow view' to track another active view.\n   *\n   * @param {module:shared.View} values - State of the new View.\n   */ addShadow(values) {\n        const shadow = new $36c7439c01b30b99$exports(values);\n        this.shadows.set(shadow.id, shadow);\n    }\n    /**\n   * Retrieve an item by ID. Throw an Error if the item isn't found.\n   *\n   * @param {number} id - ID of the item to retrieve.\n   */ getItem(id) {\n        const item = this.items.get(id);\n        if (item === undefined) throw Error(`Unable to find item with id: ${id}`);\n        return item;\n    }\n    /**\n   * Retrieve a Shadow by ID. Throw an Error if the shadow isn't found.\n   *\n   * @param {number} id - ID of the shadow to retrieve.\n   */ getShadow(id) {\n        const shadow = this.shadows.get(id);\n        if (shadow === undefined) throw Error(`Unable to find shadow with id: ${id}`);\n        return shadow;\n    }\n    /**\n   * Removes the given item.\n   *\n   * @param {module:shared.Item} item - The Item to remove.\n   *\n   * @return {boolean} true if removal was successful, false otherwise.\n   */ removeItem(data) {\n        const item = this.getItem(data.id);\n        if (Object.prototype.hasOwnProperty.call(item, \"tagname\")) this.rootElement.removeChild(item.element);\n        this.items.delete(data.id);\n        return $2671a88abd61b478$require$removeById(this.itemOrder, data);\n    }\n    /**\n   * Removes the given 'shadow' view.\n   *\n   * @param {module:shared.View} shadow - The 'shadow' view to remove.\n   *\n   * @return {boolean} true if removal was successful, false otherwise.\n   */ removeShadow(shadow) {\n        return this.shadows.delete(shadow.id);\n    }\n    /**\n   * Set up the internal copy of the model according to the data provided by the\n   * server.\n   */ initialize(data) {\n        $2671a88abd61b478$var$REQUIRED_DATA.forEach((d)=>{\n            if (!Object.prototype.hasOwnProperty.call(data, d)) throw Error(`initialize requires: ${d}`);\n        });\n        data.views.forEach((v)=>{\n            if (v.id !== this.view.id) this.addShadow(v);\n        });\n        data.items.reverse().forEach((o)=>{\n            if (Object.prototype.hasOwnProperty.call(o, \"src\")) this.addImage(o);\n            else if (Object.prototype.hasOwnProperty.call(o, \"tagname\")) this.addElement(o);\n            else this.addItem(o);\n        });\n        this.view.config.shadows = data.settings.shadows;\n        this.view.config.status = data.settings.status;\n        this.view.config.backgroundImage = data.settings.backgroundImage;\n    }\n    /**\n   * Bring item to top, so that it's above others.\n   *\n   */ bringItemToTop(id) {\n        const index = this.itemOrder.findIndex((el)=>el.id === id);\n        this.itemOrder.push(...this.itemOrder.splice(index, 1));\n    }\n    /**\n   * Set the attributes for the appropriate item.\n   *\n   * @param {object} data\n   */ setAttributes(data) {\n        const item = this.getItem(data.id);\n        item.setAttributes(data.attributes);\n    }\n    setParent(data) {\n        const item = this.getItem(data.id);\n        item.setParent(data.parent);\n    }\n    /**\n   * Set the image for the appropriate item.\n   *\n   * @param {object} data\n   */ setImage(data) {\n        const item = this.getItem(data.id);\n        item.setImage(data.src);\n    }\n    /**\n   * Set the canvas rendering sequence for the appropriate item.\n   *\n   * @param {object} data\n   */ setRender(data) {\n        const item = this.getItem(data.id);\n        item.setRender(data.sequence);\n    }\n    /**\n   * Update an item.\n   *\n   * @param {module:shared.Item} data - data from the server, has an 'id' field\n   * with which the item will be located.\n   */ updateItem(data) {\n        const item = this.getItem(data.id);\n        Object.assign(item, data);\n        if (!item.lockZ) this.bringItemToTop(data.id);\n    }\n    /**\n   * Update a 'shadow' view.\n   *\n   * @param {module:shared.View} data - data from the server, has an 'id' field\n   * with which the view will be located.\n   */ updateShadow(data) {\n        const shadow = this.getShadow(data.id);\n        Object.assign(shadow, data);\n    }\n    /**\n   * Update the view.\n   *\n   * @param {module:shared.View} data - data from the server, specficially\n   * pertaining to this client's view.\n   */ updateView(data) {\n        Object.assign(this.view, data);\n    }\n    /**\n   * Dispatch custom DOM event to trigger user defined action\n   *\n   * @param {object} event - event data, contains `action` and `payload`\n   */ dispatch(event) {\n        document.dispatchEvent(new CustomEvent(event.action, {\n            detail: event.payload\n        }));\n    }\n}\n$2671a88abd61b478$exports = $2671a88abd61b478$var$ClientModel;\n\n\nvar $8d2ca656dd61d0cd$exports = {};\n\"use strict\";\n\nvar $8d2ca656dd61d0cd$require$View = $9a3a59fd4e8a6314$exports.View;\n// Data fields to write for status indicator text.\nconst $8d2ca656dd61d0cd$var$STATUS_KEYS = Object.freeze([\n    \"x\",\n    \"y\",\n    \"width\",\n    \"height\",\n    \"rotation\",\n    \"scale\"\n]);\n// Mark these methods as intended only for internal use.\nconst $8d2ca656dd61d0cd$var$symbols = Object.freeze({\n    align: Symbol(\"align\"),\n    drawBackground: Symbol(\"dragBackground\"),\n    drawItems: Symbol(\"drawItems\"),\n    drawShadows: Symbol(\"drawShadows\"),\n    drawStatus: Symbol(\"drawStatus\"),\n    wipe: Symbol(\"wipe\")\n});\n// Default ClientView configuration.\nconst $8d2ca656dd61d0cd$var$DEFAULT_CONFIG = Object.freeze({\n    status: false,\n    shadows: false\n});\n/**\n * The ClientView is responsible for rendering the view. To do this, it keeps\n * track of its own position, scale, and orientation, as well as those values\n * for all items and all other views (which will be represented with outlines).\n *\n * @extends module:shared.View\n * @memberof module:client\n *\n * @param {CanvasRenderingContext2D} context - The canvas context in which to\n * render the model.\n */ class $8d2ca656dd61d0cd$var$ClientView extends $8d2ca656dd61d0cd$require$View {\n    constructor(context){\n        super($8d2ca656dd61d0cd$var$ClientView.DEFAULTS);\n        /**\n     * The CanvasRenderingContext2D is required for drawing (rendering) to take\n     * place.\n     *\n     * @type {CanvasRenderingContext2D}\n     */ this.context = context;\n        /**\n     * The model holds the information about items and shadows that need\n     * rendering.\n     *\n     * @type {module:client.ClientModel}\n     */ this.model = null;\n        /**\n     * Configuration of ClientView that can be\n     * modified in user-defined `window.WAMS_CONFIG`.\n     *\n     * @type {object}\n     */ this.config = {\n            ...$8d2ca656dd61d0cd$var$DEFAULT_CONFIG\n        };\n    }\n    /**\n   * Positions the rendering context precisely, taking into account all\n   * transformations, so that rendering can proceed correctly.\n   *\n   * @alias [@@align]\n   * @memberof module:client.ClientView\n   */ [$8d2ca656dd61d0cd$var$symbols.align]() {\n        /*\n     * WARNING: It is crucially important that the instructions below occur\n     * in *precisely* this order!\n     */ this.context.scale(this.scale, this.scale);\n        this.context.rotate(this.rotation);\n        this.context.translate(-this.x, -this.y);\n    }\n    /**\n   * Renders all the items.\n   *\n   * @alias [@@drawItems]\n   * @memberof module:client.ClientView\n   */ [$8d2ca656dd61d0cd$var$symbols.drawItems]() {\n        this.model.itemOrder.forEach((o)=>o.draw(this.context, this));\n    }\n    /**\n   * Renders outlines of all the other views.\n   *\n   * @alias [@@drawShadows]\n   * @memberof module:client.ClientView\n   */ [$8d2ca656dd61d0cd$var$symbols.drawShadows]() {\n        this.model.shadows.forEach((v)=>v.draw(this.context));\n    }\n    /**\n   * Renders text describing the status of the view to the upper left corner of\n   * the view, to assist with debugging.\n   *\n   * @alias [@@drawStatus]\n   * @memberof module:client.ClientView\n   */ [$8d2ca656dd61d0cd$var$symbols.drawStatus]() {\n        const messages = $8d2ca656dd61d0cd$var$STATUS_KEYS.map((k)=>`${k}: ${this[k].toFixed(2)}`).concat([\n            `# of Shadows: ${this.model.shadows.size}`\n        ]);\n        let ty = 40;\n        const tx = 20;\n        this.context.save();\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\n        this.context.font = \"18px Georgia\";\n        messages.forEach((m)=>{\n            this.context.fillText(m, tx, ty);\n            ty += 20;\n        });\n        this.context.restore();\n    }\n    /**\n   * Clears all previous renders, to ensure a clean slate for the upcoming\n   * render.\n   *\n   * @alias [@@wipe]\n   * @memberof module:client.ClientView\n   */ [$8d2ca656dd61d0cd$var$symbols.wipe]() {\n        this.context.clearRect(0, 0, window.innerWidth, window.innerHeight);\n    }\n    /**\n   * Fully render the current state of the system.\n   */ draw() {\n        this.context.save();\n        this[$8d2ca656dd61d0cd$var$symbols.wipe]();\n        this[$8d2ca656dd61d0cd$var$symbols.align]();\n        this[$8d2ca656dd61d0cd$var$symbols.drawItems]();\n        if (this.config.shadows) this[$8d2ca656dd61d0cd$var$symbols.drawShadows]();\n        if (this.config.status) this[$8d2ca656dd61d0cd$var$symbols.drawStatus]();\n        this.context.restore();\n    }\n    /**\n   * Fill all available space in the window.\n   */ resizeToFillWindow(dpr, iOS) {\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n        if (!iOS) this.context.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n}\n$8d2ca656dd61d0cd$exports = $8d2ca656dd61d0cd$var$ClientView;\n\n\nclass $411b979e0983e126$var$ClientApplication {\n    constructor(controller){\n        this.controller = controller;\n    }\n    on(event, func) {\n        // listen for this DOM event\n        document.addEventListener(event, func);\n        this.controller.eventListeners.push(event);\n        // if this event was called before this code executed, dispatch it again\n        this.controller.eventQueue.forEach((ev)=>{\n            if (ev.action === event) document.dispatchEvent(new CustomEvent(event, {\n                detail: ev.payload\n            }));\n        });\n        // Remove events from the queue that have been dispatched.\n        this.controller.eventQueue = this.controller.eventQueue.filter((ev)=>ev.action !== event);\n    }\n    dispatch(event, func) {\n        this.controller.dispatch(event, func);\n    }\n}\nfunction $411b979e0983e126$var$run() {\n    document.addEventListener(\"contextmenu\", (e)=>e.preventDefault());\n    const root = document.querySelector(\"#root\");\n    if (!root) throw Error(\"No root element was found on the page.\");\n    const canvas = document.querySelector(\"canvas\");\n    if (!canvas) throw Error(\"No canvas element was found on the page.\");\n    const context = canvas.getContext(\"2d\");\n    const model = new $2671a88abd61b478$exports(root);\n    const view = new $8d2ca656dd61d0cd$exports(context);\n    const controller = new $81586d39ed578c8f$exports(root, canvas, view, model);\n    window.WAMS = new $411b979e0983e126$var$ClientApplication(controller);\n    model.view = view;\n    view.model = model;\n    controller.connect();\n}\nwindow.addEventListener(\"load\", $411b979e0983e126$var$run, {\n    capture: false,\n    once: true,\n    passive: true\n});\n\n})();\n//# sourceMappingURL=client.js.map\n","/*\n * WAMS code to be executed in the client browser.\n */\n\n/**\n * This file defines the entry point for the client side of a WAMS application.\n *\n * <br>\n * <img\n * src =\n * \"https://raw.githubusercontent.com/wiki/hcilab/wams/graphs/client.png\"\n * style = \"max-height: 200px;\"\n * >\n *\n * @module client\n */\n\n'use strict';\n\nconst ClientController = require('./client/ClientController.js');\nconst ClientModel = require('./client/ClientModel.js');\nconst ClientView = require('./client/ClientView.js');\n\nclass ClientApplication {\n  constructor(controller) {\n    this.controller = controller;\n  }\n\n  on(event, func) {\n    // listen for this DOM event\n    document.addEventListener(event, func);\n    this.controller.eventListeners.push(event);\n\n    // if this event was called before this code executed, dispatch it again\n    this.controller.eventQueue.forEach((ev) => {\n      if (ev.action === event) {\n        document.dispatchEvent(new CustomEvent(event, { detail: ev.payload }));\n      }\n    });\n\n    // Remove events from the queue that have been dispatched.\n    this.controller.eventQueue = this.controller.eventQueue.filter((ev) => ev.action !== event);\n  }\n\n  dispatch(event, func) {\n    this.controller.dispatch(event, func);\n  }\n}\n\nfunction run() {\n  document.addEventListener('contextmenu', (e) => e.preventDefault());\n\n  const root = document.querySelector('#root');\n  if (!root) throw Error('No root element was found on the page.');\n  const canvas = document.querySelector('canvas');\n  if (!canvas) throw Error('No canvas element was found on the page.');\n\n  const context = canvas.getContext('2d');\n\n  const model = new ClientModel(root);\n  const view = new ClientView(context);\n  const controller = new ClientController(root, canvas, view, model);\n  window.WAMS = new ClientApplication(controller);\n\n  model.view = view;\n  view.model = model;\n  controller.connect();\n}\n\nwindow.addEventListener('load', run, {\n  capture: false,\n  once: true,\n  passive: true,\n});\n","'use strict';\n\nconst { io } = require('socket.io-client');\n\nconst { constants, Message, NOP } = require('../shared.js');\nconst Interactor = require('./Interactor.js');\n\n// Symbols to identify these methods as intended only for internal use\nconst symbols = Object.freeze({\n  attachSocketIoListeners: Symbol('attachSocketIoListeners'),\n  render: Symbol('render'),\n});\n\n/**\n * The ClientController coordinates communication with the wams server. It sends\n * messages based on user interaction with the canvas and receives messages from\n * the server detailing changes to post to the view.\n *\n * @memberof module:client\n *\n * @param {HTMLCanvasElement} canvas - The underlying CanvasElement object, (not\n * the context), which will fill the page.\n * @param {module:client.ClientView} view - The view that will handle rendering\n * duties.\n * @param {module:client.ClientModel} model - The client-side copy of the\n * server's model.\n */\nclass ClientController {\n  constructor(root, canvas, view, model) {\n    /**\n     * Root element where WAMS canvas and HTML elements are located.\n     *\n     * @type {Element}\n     */\n    this.rootElement = root;\n\n    /**\n     * The HTMLCanvasElement object is stored by the ClientController so that it\n     * is able to respond to user events triggered on the canvas. The view only\n     * needs to know about the canvas drawing context.\n     *\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas = canvas;\n\n    /**\n     * From socket.io, the socket provides a channel of communication with the\n     * server.\n     *\n     * @type {Socket}\n     * @see {@link https://socket.io/docs/client-api/}\n     */\n    this.socket = null;\n\n    /**\n     * The ClientModel is a client-side copy of the workspace model, kept up to\n     * date by the controller.\n     *\n     * @type {module:client.ClientModel}\n     */\n    this.model = model;\n\n    /**\n     * The ClientView handles the final rendering of the model, as informed by\n     * the controller.\n     *\n     * @type {module:client.ClientView}\n     */\n    this.view = view;\n\n    /**\n     * List of custom event names that will be listened to.\n     *\n     * @type {array}\n     */\n    this.eventListeners = [];\n\n    /**\n     * Queue of events to be called once Client-side listeners are set up.\n     *\n     * @type {array}\n     */\n    this.eventQueue = [];\n\n    /**\n     * Tracks whether a render has been scheduled for the next render frame.\n     *\n     * @type {boolean}\n     */\n    this.renderScheduled = false;\n\n    /**\n     * Bound reference to the render method, for use as a callback.\n     *\n     * @type {function}\n     */\n    this.render_fn = this[symbols.render].bind(this);\n\n    /*\n     * For proper function, we need to make sure that the canvas is as large as\n     * it can be at all times, and that at all times we know how big the canvas\n     * is.\n     */\n    this.resizeCanvasToFillWindow();\n  }\n\n  /**\n   * Attaches listeners to messages received over the socket connection. All\n   * received messages at this layer should be those conforming to the Message /\n   * Reporter protocol.\n   *\n   * This internal routine should be called as part of socket establishment.\n   *\n   * @alias [@@attachSocketIoListeners]\n   * @memberof module:client.ClientController\n   */\n  [symbols.attachSocketIoListeners]() {\n    const listeners = {\n      // For the server to inform about changes to the model\n      [Message.ADD_ELEMENT]: (data) => this.model.addElement(data),\n      [Message.ADD_IMAGE]: (data) => this.model.addImage(data),\n      [Message.ADD_ITEM]: (data) => this.model.addItem(data),\n      [Message.ADD_SHADOW]: (data) => this.model.addShadow(data),\n      [Message.RM_ITEM]: (data) => this.model.removeItem(data),\n      [Message.RM_SHADOW]: (data) => this.model.removeShadow(data),\n      [Message.UD_ITEM]: (data) => this.model.updateItem(data),\n      [Message.UD_SHADOW]: (data) => this.model.updateShadow(data),\n      [Message.UD_VIEW]: (data) => this.model.updateView(data),\n\n      // For hopefully occasional extra adjustments to objects in the model.\n      [Message.RM_ATTRS]: (data) => this.model.removeAttributes(data),\n      [Message.SET_ATTRS]: (data) => this.model.setAttributes(data),\n      [Message.SET_IMAGE]: (data) => this.model.setImage(data),\n      [Message.SET_RENDER]: (data) => this.model.setRender(data),\n      [Message.SET_PARENT]: (data) => this.model.setParent(data),\n\n      // Connection establishment related (disconnect, initial setup)\n      [Message.INITIALIZE]: this.initialize.bind(this),\n      [Message.LAYOUT]: NOP,\n\n      // User event related\n      [Message.CLICK]: NOP,\n      [Message.RESIZE]: NOP,\n      [Message.SWIPE]: NOP,\n      [Message.TRACK]: NOP,\n      [Message.TRANSFORM]: NOP,\n\n      // Multi-device gesture related\n      [Message.POINTER]: NOP,\n      [Message.BLUR]: NOP,\n\n      // TODO: This could be more... elegant...\n      [Message.FULL]: () => {\n        document.body.innerHTML = 'WAMS is full! :(';\n      },\n\n      // For user-defined behavior\n      [Message.DISPATCH]: this.handleCustomEvent.bind(this),\n    };\n\n    Object.entries(listeners).forEach(([p, v]) => this.socket.on(p, v));\n    this.socket.onAny(this.scheduleRender.bind(this));\n\n    // Keep the view size up to date.\n    window.addEventListener('resize', this.resize.bind(this), false);\n\n    /*\n     * As no automatic draw loop is used, (there are no animations), need to\n     * know when to re-render in response to an image loading.\n     */\n    const scheduleFn = this.scheduleRender.bind(this);\n    document.addEventListener(Message.IMG_LOAD, scheduleFn);\n  }\n\n  /**\n   * Establishes a socket.io connection with the server, using the global WAMS\n   * namespace. Connections should be non-persistent over disconnects, (i.e., no\n   * reconnections), as this was the cause of many bugs.\n   *\n   * This internal routine should be called automatically upon ClientController\n   * instantiation.\n   */\n  connect() {\n    this.socket = io(constants.NS_WAMS, {\n      autoConnect: false,\n      reconnection: false,\n      transports: ['websocket', 'polling'],\n    });\n    this[symbols.attachSocketIoListeners]();\n    window.requestAnimationFrame(this.render_fn);\n    this.socket.connect();\n  }\n\n  /**\n   * Renders a frame.\n   *\n   * @alias [@@render]\n   * @memberof module:client.ClientController\n   */\n  [symbols.render]() {\n    if (this.renderScheduled) {\n      this.view.draw();\n      this.renderScheduled = false;\n    }\n    window.requestAnimationFrame(this.render_fn);\n  }\n\n  /**\n   * @param {object} data\n   */\n  handleCustomEvent(data) {\n    if (this.eventListeners.indexOf(data.action) < 0) {\n      this.eventQueue.push(data);\n    }\n    this.model.dispatch(data);\n  }\n\n  /**\n   * For responding to window resizing by the user. Resizes the canvas to fit\n   * the new window size, and reports the change to the server so it can be\n   * reflected in the model.\n   */\n  resize() {\n    this.resizeCanvasToFillWindow();\n    this.socket.emit(Message.RESIZE, this.view);\n    this.view.draw();\n  }\n\n  /**\n   * Stretches the canvas to fit the available window space, and updates the\n   * view accordingly.\n   *\n   * Note: Scaling to account for device pixel ratio is disabled for iOS\n   * as a workaround for a bug with Safari and Chrome, where `context.setTransform`\n   * would make the page unresponsive.\n   */\n  resizeCanvasToFillWindow() {\n    const iOS = /iPad|iPhone|iPod|Apple/.test(window.navigator.platform);\n    const dpr = iOS ? 1 : window.devicePixelRatio || 1;\n    const w = window.innerWidth;\n    const h = window.innerHeight;\n    this.canvas.width = w * dpr;\n    this.canvas.height = h * dpr;\n    this.canvas.style.width = `${w}px`;\n    this.canvas.style.height = `${h}px`;\n    this.view.resizeToFillWindow(dpr, iOS);\n  }\n\n  /**\n   * Schedules a render for the next frame interval.\n   */\n  scheduleRender() {\n    this.renderScheduled = true;\n  }\n\n  /**\n   * As this object will be instantiated on page load, and will generate a view\n   * before communication lines with the server have been opened, the view will\n   * not reflect the model automatically. This function responds to a message\n   * from the server which contains the current state of the model, and forwards\n   * this data to the view so that it can correctly render the model.\n   */\n  initialize(data) {\n    const { clientScripts, stylesheets, title, backgroundImage, color, useMultiScreenGestures } = data.settings;\n    if (clientScripts) this.loadClientScripts(clientScripts);\n    if (stylesheets) this.loadStylesheets(stylesheets);\n    document.title = title;\n\n    this.view.id = data.viewId;\n\n    if (backgroundImage) {\n      this.canvas.style.backgroundColor = 'transparent';\n      document.body.style.backgroundImage = `url(\"${backgroundImage}\")`;\n    } else {\n      this.canvas.style.backgroundColor = color;\n    }\n    this.model.initialize(data);\n    this.setUpInteractor(useMultiScreenGestures);\n\n    // Need to tell the model what the view looks like once setup is complete.\n    this.socket.emit(Message.LAYOUT, this.view);\n  }\n\n  loadClientScripts(scripts) {\n    scripts.forEach((src) => {\n      const script = document.createElement('script');\n      script.src = src;\n      document.body.appendChild(script);\n    });\n  }\n\n  loadStylesheets(stylesheets) {\n    stylesheets.forEach((src) => {\n      const link = document.createElement('link');\n      link.href = src;\n      link.type = 'text/css';\n      link.rel = 'stylesheet';\n      document.head.appendChild(link);\n    });\n  }\n\n  /**\n   * The Interactor is a level of abstraction between the ClientController and\n   * the gesture recognition library such that libraries can be swapped out\n   * more easily, if need be. At least in theory. All the ClientController\n   * needs to provide is handler functions for responding to the recognized\n   * gestures.\n   *\n   * @param {boolean} [useMultiScreenGestures=false] Whether to use server-side\n   * gestures. Default is to use client-side gestures.\n   */\n  setUpInteractor(useMultiScreenGestures = false) {\n    this.setUpInputForwarding();\n    if (!useMultiScreenGestures) {\n      return new Interactor(this.rootElement, {\n        swipe: this.socket.emit.bind(this.socket, Message.SWIPE),\n        tap: this.socket.emit.bind(this.socket, Message.CLICK),\n        track: this.socket.emit.bind(this.socket, Message.TRACK),\n        transform: this.socket.emit.bind(this.socket, Message.TRANSFORM),\n      });\n    }\n  }\n\n  /**\n   * Set up input event forwarding.\n   */\n  setUpInputForwarding() {\n    // Forward pointer events\n    ['pointerdown', 'pointermove', 'pointerup'].forEach((eventname) => {\n      window.addEventListener(eventname, (event) => {\n        // Extract only the properties we care about\n        const { type, pointerId, clientX, clientY, target, altKey, ctrlKey, metaKey, shiftKey } = event;\n        const data = { type, pointerId, clientX, clientY, target, altKey, ctrlKey, metaKey, shiftKey };\n        this.socket.emit(Message.POINTER, data);\n      });\n    });\n\n    // Forward blur and cancel events as \"BLUR\" messages\n    ['pointercancel', 'blur'].forEach((eventname) => {\n      window.addEventListener(eventname, (event) => {\n        this.socket.emit(Message.BLUR, {});\n      });\n    });\n  }\n\n  /**\n   * Dispatch a custom ServerEvent.\n   *\n   * @param {string} action\n   * @param {object} payload\n   */\n  dispatch(action, payload) {\n    this.socket.emit(Message.DISPATCH, { action, payload });\n  }\n}\n\nmodule.exports = ClientController;\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","/**\n * This module contains classes and functions intended for use by both the\n * client and the server, in order to provide a common interface.\n *\n * <br>\n * <img\n * src =\n * \"https://raw.githubusercontent.com/wiki/hcilab/wams/graphs/shared.png\"\n * style = \"max-height: 250px;\"\n * >\n *\n * @module shared\n */\n\n'use strict';\n\nconst IdStamper = require('./shared/IdStamper.js');\nconst Message = require('./shared/Message.js');\nconst bases = require('./shared/bases.js');\nconst utilities = require('./shared/utilities.js');\nconst Polygon2D = require('./shared/Polygon2D.js');\nconst Point2D = require('./shared/Point2D.js');\nconst Rectangle = require('./shared/Rectangle.js');\nconst RoundedLine = require('./shared/RoundedLine.js');\nconst Circle = require('./shared/Circle.js');\nconst Oval = require('./shared/Oval.js');\n\n/**\n * This object stores a set of core constants for use by both the client and\n *  the server.\n *\n * @memberof module:shared\n * @enum {number}\n */\nconst constants = {\n  // General constants\n  ROTATE_0: 0,\n  ROTATE_90: Math.PI / 2,\n  ROTATE_180: Math.PI,\n  ROTATE_270: Math.PI * 1.5,\n  ROTATE_360: Math.PI * 2,\n\n  // Namespaces\n  /** @type {string} */\n  NS_WAMS: '/wams',\n  NS_WAMS_TRACKING: '/',\n};\n\n/**\n * A list of colours, for use by the API for shadows, and by end-point apps too\n * if desired.\n *\n * @memberof module:shared\n * @type {string[]}\n */\nconst colours = [\n  'saddlebrown',\n  'red',\n  'blue',\n  'lime',\n  'darkorange',\n  'purple',\n  'yellow',\n  'aqua',\n  'darkgreen',\n  'fuchsia',\n];\n\n/*\n * Package up the module and freeze it for delivery.\n */\nmodule.exports = Object.freeze({\n  colours,\n  constants,\n  Circle,\n  Oval,\n  IdStamper,\n  Message,\n  Point2D,\n  Polygon2D,\n  Rectangle,\n  RoundedLine,\n  ...bases,\n  ...utilities,\n});\n","'use strict';\n\n/**\n * Given a previous ID, returns the next unique ID in the sequence.\n *\n * @inner\n * @memberof module:shared.IdStamper\n * @throws Error\n *\n * @param {number} previous - The previously assigned unique ID.\n *\n * @returns {number} The next unique ID\n */\nfunction getUniqueId(previous) {\n  const next = previous + 1;\n  if (Number.isSafeInteger(next)) {\n    return next;\n  }\n  throw new Error('Ran out of unique IDs!');\n}\n\n/**\n * Class for stamping and cloning integer IDs. Stamped IDs are unique on a\n * per-IdStamper basis.\n *\n * @example\n * const stamper = new IdStamper();\n * const obj = {};\n * stamper.stampNewId(obj);\n * console.log(obj.id);  // an integer unique to Ids stamped by stamper\n * obj.id = 2;           // has no effect.\n * delete obj.id;        // false\n *\n * const danger = {};\n * IdStamper.cloneId(danger, obj.id); // Will work. 'danger' & 'obj' are\n *                                    // now both using the same Id.\n *\n * @memberof module:shared\n */\nclass IdStamper {\n  constructor() {\n    /**\n     * The value of the previously assigned ID.\n     *\n     * @type {number}\n     * @memberof module:shared.IdStamper\n     */\n    this.previousId = 0;\n  }\n\n  /**\n   * Stamps an integer ID, unique to this IdStamper, onto the given object.\n   *\n   * All Ids produced by this method are guaranteed to be unique, on a\n   * per-stamper basis. (Two uniquely constructed stampers can and will generate\n   * identical Ids).\n   *\n   * @param {Object} obj - An object onto which an ID will be stamped.\n   */\n  stampNewId(obj) {\n    this.previousId = getUniqueId(this.previousId);\n    Object.defineProperty(obj, 'id', {\n      value: this.previousId,\n      configurable: false,\n      enumerable: true,\n      writable: false,\n    });\n  }\n\n  /**\n   * Stamps a clone of the given ID onto the given object.\n   *\n   * @param {Object} obj - An object onto which an ID will be stamped.\n   * @param {number} id - The ID to clone onto obj.\n   */\n  static cloneId(obj, id) {\n    if (Number.isSafeInteger(id)) {\n      Object.defineProperty(obj, 'id', {\n        value: id,\n        configurable: false,\n        enumerable: true,\n        writable: false,\n      });\n    }\n  }\n}\n\nmodule.exports = IdStamper;\n","'use strict';\n\n/**\n * Enum of the various message types.\n *\n * @name Message\n * @enum {string}\n * @readonly\n */\nconst Message = {\n  // For the server to inform about changes to the model\n  /** @const */ ADD_ELEMENT: 'add-element',\n  /** @const */ ADD_IMAGE: 'add-image',\n  /** @const */ ADD_ITEM: 'add-item',\n  /** @const */ ADD_SHADOW: 'add-shadow',\n  /** @const */ ADD_GROUP: 'add-group',\n  /** @const */ RM_ITEM: 'remove-item',\n  /** @const */ RM_SHADOW: 'remove-shadow',\n  /** @const */ UD_ITEM: 'update-item',\n  /** @const */ UD_SHADOW: 'update-shadow',\n  /** @const */ UD_VIEW: 'update-view',\n\n  // For hopefully occasional extra adjustments to objects in the model.\n  /** @const */ RM_ATTRS: 'remove-attributes',\n  /** @const */ SET_ITEMS: 'set-items',\n  /** @const */ SET_ATTRS: 'set-attributes',\n  /** @const */ SET_IMAGE: 'set-image',\n  /** @const */ SET_RENDER: 'set-render',\n  /** @const */ SET_PARENT: 'set-parent',\n\n  // Connection establishment related (disconnect, initial setup)\n  /** @const */ INITIALIZE: 'initialize',\n  /** @const */ LAYOUT: 'layout',\n  /** @const */ FULL: 'full',\n\n  // User event related\n  /** @const */ CLICK: 'click',\n  /** @const */ RESIZE: 'resize',\n  /** @const */ SWIPE: 'swipe',\n  /** @const */ TRACK: 'track',\n  /** @const */ TRANSFORM: 'transform',\n\n  // Multi-device gesture related\n  /** @const */ POINTER: 'pointer',\n  /** @const */ BLUR: 'blur',\n\n  // Page event related\n  /** @const */ IMG_LOAD: 'image-loaded',\n\n  // User defined actions\n  /** @const */ DISPATCH: 'dispatch',\n};\nObject.freeze(Message);\n\nmodule.exports = Message;\n","'use strict';\n\n/**\n * This Item class provides a common interface between the client and the server\n * by which the Items can interact safely.\n *\n * @class Item\n * @memberof module:shared\n */\nclass Item {\n  constructor(values = {}) {\n    Object.assign(this, {\n      id: null,\n\n      /**\n       * @name x\n       * @type {number}\n       * @default 0\n       * @memberof module:shared.Item\n       * @instance\n       */\n      x: 0,\n\n      /**\n       * @name y\n       * @type {number}\n       * @default 0\n       * @memberof module:shared.Item\n       * @instance\n       */\n      y: 0,\n\n      /**\n       * @name rotation\n       * @type {number}\n       * @default 0\n       * @memberof module:shared.Item\n       * @instance\n       */\n      rotation: 0,\n\n      /**\n       * @name scale\n       * @type {number}\n       * @default 1\n       * @memberof module:shared.Item\n       * @instance\n       */\n      scale: 1,\n\n      /**\n       * @name type\n       * @type {string}\n       * @default 'item/polygonal'\n       * @memberof module:shared.Item\n       * @instance\n       */\n      type: 'item/polygonal',\n\n      /**\n       * Whether to raise item upon interaction or lock Z position instead.\n       *\n       * @name lockZ\n       * @type {boolean}\n       * @default false\n       * @memberof module:shared.Item\n       * @instance\n       */\n      lockZ: false,\n\n      ...values, // Assigns additional attributes to the object\n    });\n  }\n\n  /**\n   * @return object A serialized version of the item, ready for transmission.\n   */\n  toJSON() {\n    return {\n      id: this.id,\n      x: this.x,\n      y: this.y,\n      rotation: this.rotation,\n      scale: this.scale,\n      type: this.type,\n      lockZ: this.lockZ,\n    };\n  }\n}\n\nclass RectangularItem extends Item {\n  constructor(values = {}) {\n    super({\n      /**\n       * @name width\n       * @type {number}\n       * @default 400\n       * @memberof module:shared.WamsElement\n       * @instance\n       */\n      width: 400,\n\n      /**\n       * @name height\n       * @type {number}\n       * @default 300\n       * @memberof module:shared.WamsElement\n       * @instance\n       */\n      height: 300,\n\n      type: 'item/rectangular',\n      ...values, // Assigns additional attributes to the object\n    });\n  }\n\n  /**\n   * @return object A serialized version of the item, ready for transmission.\n   * @override\n   */\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      width: this.width,\n      height: this.height,\n    };\n  }\n}\n\n/**\n * This WamsElement class provides a common interface between the client and the\n * server by which the elements interact safely.\n *\n * @class WamsElement\n * @memberof module:shared\n */\nclass WamsElement extends RectangularItem {\n  constructor(values = {}) {\n    super({\n      /**\n       * Type of DOM element this represents.\n       *\n       * @name tagname\n       * @type {string}\n       * @default 'div'\n       * @memberof module:shared.WamsElement\n       * @instance\n       */\n      tagname: 'div',\n\n      type: 'item/element',\n      ...values, // Assigns additional attributes to the object\n    });\n  }\n\n  /**\n   * @return object A serialized version of the item, ready for transmission.\n   */\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      tagname: this.tagname,\n    };\n  }\n}\n\n/**\n * This WamsImage class provides a common interface between the client and the\n * server by which the images can interact safely.\n *\n * @class WamsImage\n * @memberof module:shared\n */\nclass WamsImage extends RectangularItem {\n  constructor(values = {}) {\n    super({\n      type: 'item/image',\n      ...values, // Assigns additional attributes to the object\n    });\n  }\n}\n\n/**\n * This View class provides a common interface between the client and\n * the server by which the Views can interact safely.\n *\n * @class View\n * @memberof module:shared\n */\nclass View extends RectangularItem {\n  constructor(values = {}) {\n    super({\n      width: 1600,\n      height: 900,\n\n      /**\n       * The index is an integer identifying the View, coming from ServerController.\n       *\n       * @name index\n       * @type {number}\n       * @default undefined\n       * @memberof module:shared.View\n       * @instance\n       */\n      index: undefined,\n\n      type: 'view/background',\n      ...values, // Assigns additional attributes to the object\n    });\n  }\n\n  /**\n   * @return object A serialized version of the view, ready for transmission.\n   * @override\n   */\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      index: this.index,\n    };\n  }\n}\n\nmodule.exports = {\n  Item,\n  View,\n  WamsElement,\n  WamsImage,\n};\n","'use strict';\n\n/**\n * @namespace utilities\n * @memberof module:shared\n */\n\n/**\n * Plain, simple NOP definition. If there's a faster NOP, redefine it here.\n *\n * @memberof module:shared.utilities\n */\nconst NOP = () => {};\n\n/**\n * Removes the given item from the given array, according to its Id.\n *\n * @memberof module:shared.utilities\n *\n * @param {Object[]} array - The array to modify.\n * @param {Object} item  - The item to remove from array according to its Id.\n *\n * @return {boolean} True if the item was found and removed, false otherwise.\n */\nfunction removeById(array, item) {\n  const idx = array.findIndex((o) => o.id === item.id);\n  if (idx >= 0) {\n    array.splice(idx, 1);\n    return true;\n  }\n  return false;\n}\n\nmodule.exports = Object.freeze({\n  NOP,\n  removeById,\n});\n","'use strict';\n\nconst Point2D = require('./Point2D.js');\n\n/**\n * A polygon in two dimensions. Can be complex.\n *\n * @memberof module:shared\n * @implements {module:shared.Hitbox}\n *\n * @param {module:shared.Point2D[]} points - The points that make up the\n * polygon, given in order (clockwise and counter-clockwise are both fine).\n */\nclass Polygon2D {\n  constructor(points) {\n    if (points.length < 1) {\n      throw new TypeError('A polygon requires at least one vertex.');\n    }\n\n    /**\n     * A closed list of the points making up this polygon. \"Closed\" here means\n     * that the first and last entries of the list are the same. Closing the\n     * polygon in this manner is handled by the constructor.\n     *\n     * @type {module:shared.Point2D[]}\n     */\n    this.points = points.map(({ x, y }) => new Point2D(x, y));\n\n    /**\n     * Store the centroid of the polygon for quick hit tests.\n     *\n     * @type {module:shared.Point2D[]}\n     */\n    this.centroid = Point2D.midpoint(this.points);\n\n    /**\n     * Save the maximum radius of the polygon for quick hit tests.\n     *\n     * @type {number}\n     */\n    this.radius = this.points.reduce((max, point) => {\n      const curr = this.centroid.distanceTo(point);\n      return max > curr ? max : curr;\n    });\n\n    // Close the polygon.\n    this.points.push(this.points[0].clone());\n  }\n\n  /**\n   * Determines if a point is inside the polygon.\n   *\n   * Rules for deciding whether a point is inside the polygon:\n   *  1. If it is clearly outside, return false.\n   *  2. If it is clearly inside, return true.\n   *  3. If it is on a left or bottom edge, return true.\n   *  4. If it is on a right or top edge, return false.\n   *  5. If it is on a lower-left vertex, return true.\n   *  6. If it is on a lower-right, upper-left, or upper-right vertex, return\n   *      false.\n   *\n   * Uses the winding number method for robust and efficient point-in-polygon\n   * detection.\n   * @see {@link http://geomalgorithms.com/a03-_inclusion.html}\n   *\n   * @param {module:shared.Point2D[]} p - Point to test.\n   *\n   * @return {boolean} true if the point is inside the polygon, false otherwise.\n   */\n  contains(p) {\n    if (this.centroid.distanceTo(p) > this.radius) {\n      return false;\n    }\n    return this.winding_number(p) !== 0;\n  }\n\n  /**\n   * Winding number test for a point in a polygon\n   *\n   * @see {@link http://geomalgorithms.com/a03-_inclusion.html}\n   *\n   * @param {module:shared.Point2D[]} point - The point to test.\n   *\n   * @return {number} The winding number (=0 only when P is outside)\n   */\n  winding_number(p) {\n    let wn = 0;\n    const point = new Point2D(p.x, p.y);\n\n    for (let i = 0; i < this.points.length - 1; ++i) {\n      if (this.points[i].y <= point.y) {\n        if (this.points[i + 1].y > point.y) {\n          // Upward crossing\n          if (point.isLeftOf(this.points[i], this.points[i + 1]) > 0) {\n            ++wn;\n          }\n        }\n      } else {\n        if (this.points[i + 1].y <= point.y) {\n          // Downward crossing\n          if (point.isLeftOf(this.points[i], this.points[i + 1]) < 0) {\n            --wn;\n          }\n        }\n      }\n    }\n\n    return wn;\n  }\n}\n\nmodule.exports = Polygon2D;\n","'use strict';\n\n/**\n * Defines a set of basic operations on a point in a two dimensional space.\n *\n * @memberof module:shared\n *\n * @param {number} [x=0] - x coordinate of the point.\n * @param {number} [y=0] - y coordinate of the point.\n */\nclass Point2D {\n  constructor(x = 0, y = 0) {\n    /**\n     * X coordinate of the point.\n     *\n     * @type {number}\n     */\n    this.x = x;\n\n    /**\n     * Y coordinate of the point.\n     *\n     * @type {number}\n     */\n    this.y = y;\n  }\n\n  /**\n   * Add the given point to this point.\n   *\n   * @param {module:shared.Point2D} point - The point to add.\n   *\n   * @return {module:shared.Point2D} this\n   */\n  add({ x = 0, y = 0 }) {\n    this.x += x;\n    this.y += y;\n    return this;\n  }\n\n  /**\n   * Calculates the angle between this point and the given point.\n   *\n   * @param {!module:shared.Point2D} point - Projected point for calculating\n   * the angle.\n   *\n   * @return {number} Radians along the unit circle where the projected point\n   * lies.\n   */\n  angleTo(point) {\n    return Math.atan2(point.y - this.y, point.x - this.x);\n  }\n\n  /**\n   * Determine the average distance from this point to the provided array of\n   * points.\n   *\n   * @param {!module:shared.Point2D[]} points - the Point2D objects to\n   * calculate the average distance to.\n   *\n   * @return {number} The average distance from this point to the provided\n   * points.\n   */\n  averageDistanceTo(points) {\n    return this.totalDistanceTo(points) / points.length;\n  }\n\n  /**\n   * Clones this point.\n   *\n   * @returns {module:shared.Point2D} An exact clone of this point.\n   */\n  clone() {\n    return new Point2D(this.x, this.y);\n  }\n\n  /**\n   * Calculates the distance between two points.\n   *\n   * @param {!module:shared.Point2D} point - Point to which the distance is\n   * calculated.\n   *\n   * @return {number} The distance between the two points, a.k.a. the\n   * hypoteneuse.\n   */\n  distanceTo(point) {\n    return Math.hypot(point.x - this.x, point.y - this.y);\n  }\n\n  /**\n   * Divide the point's values by the given amount.\n   *\n   * @param {number} coefficient - divide x,y by this amount.\n   *\n   * @return {module:shared.Point2D} this\n   */\n  divideBy(coefficient = 1) {\n    this.x /= coefficient;\n    this.y /= coefficient;\n    return this;\n  }\n\n  /**\n   * Tests if a point is Left|On|Right of an infinite line. Assumes that the\n   * given points are such that one is above and one is below this point. Note\n   * that the semantics of left/right is based on the normal coordinate space,\n   * not the y-axis-inverted coordinate space of images and the canvas.\n   *\n   * @see {@link http://geomalgorithms.com/a03-_inclusion.html}\n   *\n   * @param {module:shared.Point2D} p0 - first point of the line.\n   * @param {module:shared.Point2D} p1 - second point of the line.\n   *\n   * @return {number} >0 if this point is left of the line through p0 and p1\n   * @return {number} =0 if this point is on the line\n   * @return {number} <0 if this point is right of the line\n   */\n  isLeftOf(p0, p1) {\n    const dl = p1.minus(p0);\n    const dp = this.minus(p0);\n    return dl.x * dp.y - dl.y * dp.x;\n  }\n\n  /**\n   * Subtracts the given point from this point to form a new point.\n   *\n   * @param {module:shared.Point2D} p - Point to subtract from this point.\n   *\n   * @return {module:shared.Point2D} A new point which is the simple subraction\n   * of the given point from this point.\n   */\n  minus({ x = 0, y = 0 }) {\n    return new Point2D(this.x - x, this.y - y);\n  }\n\n  /**\n   * Multiply this point by the given point, in-place.\n   *\n   * @param {number} coefficient - Amount by which to multiply the values in\n   * this point.\n   *\n   * @return {module:shared.Point2D} this\n   */\n  multiplyBy(coefficient = 1) {\n    this.x *= coefficient;\n    this.y *= coefficient;\n    return this;\n  }\n\n  /**\n   * Rotate the point by theta radians.\n   *\n   * @param {number} theta - Amount of rotation to apply, in radians.\n   *\n   * @return {module:shared.Point2D} this\n   */\n  rotate(theta = 0) {\n    const { x, y } = this;\n    const cosTheta = Math.cos(theta);\n    const sinTheta = Math.sin(theta);\n\n    this.x = x * cosTheta - y * sinTheta;\n    this.y = x * sinTheta + y * cosTheta;\n\n    return this;\n  }\n\n  /**\n   * Calculates the total distance from this point to an array of points.\n   *\n   * @param {!module:shared.Point2D[]} points - The array of Point2D objects to\n   * calculate the total distance to.\n   *\n   * @return {number} The total distance from this point to the provided points.\n   */\n  totalDistanceTo(points) {\n    return points.reduce((d, p) => d + this.distanceTo(p), 0);\n  }\n\n  /**\n   * Calculates the midpoint of a list of points.\n   *\n   * @param {module:shared.Point2D[]} points - The array of Point2D objects for\n   * which to calculate the midpoint\n   *\n   * @return {?module:shared.Point2D} The midpoint of the provided points. Null\n   * if the provided array is empty.\n   */\n  static midpoint(points = []) {\n    if (points.length === 0) return null;\n\n    const total = Point2D.sum(points);\n    return new Point2D(total.x / points.length, total.y / points.length);\n  }\n\n  /**\n   * Calculates the sum of the given points.\n   *\n   * @param {module:shared.Point2D[]} points - The Point2D objects to sum up.\n   *\n   * @return {module:shared.Point2D} A new Point2D representing the sum of the\n   * given points.\n   */\n  static sum(points = []) {\n    return points.reduce((total, pt) => total.add(pt), new Point2D(0, 0));\n  }\n}\n\nmodule.exports = Point2D;\n","'use strict';\n\n/**\n * A rectangular hitbox. Remember that this rectangle describes the item as if\n * its settings were x=0, y=0, scale=1, rotation=0.\n *\n * @memberof module:shared\n * @implements {module:shared.Hitbox}\n *\n * @param {number} width - The width of the rectangle.\n * @param {number} height - The height of the rectangle.\n * @param {number} [x=0] - The x offset of the rectangle.\n * @param {number} [y=0] - The y offset of the rectangle.\n */\nclass Rectangle {\n  constructor(width, height, x = 0, y = 0) {\n    /**\n     * The width of the rectangle.\n     *\n     * @type {number}\n     */\n    this.width = width;\n\n    /**\n     * The height of the rectangle.\n     *\n     * @type {number}\n     */\n    this.height = height;\n\n    /**\n     * The x coordinate of the rectangle.\n     *\n     * @type {number}\n     */\n    this.x = x;\n\n    /**\n     * The y coordinate of the rectangle.\n     *\n     * @type {number}\n     */\n    this.y = y;\n  }\n\n  /**\n   * Determines if a point is inside the rectangle.\n   *\n   * @param {module:shared.Point2D} point - The point to test.\n   *\n   * @return {boolean} true if the point is inside the rectangle, false\n   * otherwise.\n   */\n  contains(point) {\n    return point.x >= this.x && point.x <= this.x + this.width && point.y >= this.y && point.y <= this.y + this.height;\n  }\n}\n\nmodule.exports = Rectangle;\n","'use strict';\n\n/**\n * A simple line hitbox. Remember that this line describes the item as if\n * its settings were x=0, y=0, scale=1, rotation=0.\n *\n * The hitbox supports a line whose enpoint is rounded with a radius of width/2.\n *\n * @memberof module:shared\n * @implements {module:shared.Hitbox}\n *\n * @param {number} [x1=0] - The x1 offset of the line.\n * @param {number} [y1=0] - The y1 offset of the line.\n * @param {number} [x2=1] - The x2 offset of the line.\n * @param {number} [y2=1] - The y2 offset of the line.\n * @param {number} [width=1] - The width of the line.\n */\nclass RoundedLine {\n  constructor(x1 = 0, y1 = 0, x2 = 1, y2 = 1, width = 1) {\n    /**\n     * The x1 coordinate of the line.\n     *\n     * @type {number}\n     * @default 0\n     */\n    this.x1 = x1;\n\n    /**\n     * The y1 coordinate of the line.\n     *\n     * @type {number}\n     * @default 0\n     */\n    this.y1 = y1;\n\n    /**\n     * The x2 coordinate of the line.\n     *\n     * @type {number}\n     * @default 1\n     */\n    this.x2 = x2;\n\n    /**\n     * The y1 coordinate of the line.\n     *\n     * @type {number}\n     * @default 1\n     */\n    this.y2 = y2;\n\n    /**\n     * The width of the line.\n     *\n     * @type {number}\n     * @default 1\n     */\n    this.width = width;\n  }\n\n  /**\n   * Determines if a point is inside the line.\n   *\n   * @param {module:shared.Point2D} point - The point to test.\n   *\n   * @return {boolean} true if the point is inside the line, false otherwise.\n   */\n  contains(point) {\n    // Distance to first endpoint\n    const A = point.x - this.x1;\n    const B = point.y - this.y1;\n\n    // Length of line\n    const C = this.x2 - this.x1;\n    const D = this.y2 - this.y1;\n\n    const dot = A * C + B * D;\n    const lengthSquared = C * C + D * D;\n\n    // Find the nearest point along the line\n    let param = -1;\n    if (lengthSquared !== 0) // in case of 0-length line\n      param = dot / lengthSquared;\n    let xx, yy;\n    if (param < 0) {\n      xx = this.x1;\n      yy = this.y1;\n    } else if (param > 1) {\n      xx = this.x2;\n      yy = this.y2;\n    } else {\n      xx = this.x1 + param * C;\n      yy = this.y1 + param * D;\n    }\n\n    // Is the distance to the nearest point less than half the width?\n    const dx = point.x - xx;\n    const dy = point.y - yy;\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    return dist <= this.width / 2;\n  }\n}\n\nmodule.exports = RoundedLine;\n","'use strict';\n\n/**\n * A simple circular hitbox. Remember that this circle describes the item as if\n * its settings were x=0, y=0, scale=1, rotation=0.\n *\n * @memberof module:shared\n * @implements {module:shared.Hitbox}\n *\n * @param {number} radius - The radius of the circle.\n * @param {number} [x=0] - The x offset of the circle.\n * @param {number} [y=0] - The y offset of the circle.\n */\nclass Circle {\n  constructor(radius, x = 0, y = 0) {\n    /**\n     * The radius of the circle.\n     *\n     * @type {number}\n     */\n    this.radius = radius;\n\n    /**\n     * The x coordinate of the circle.\n     *\n     * @type {number}\n     */\n    this.x = x;\n\n    /**\n     * The y coordinate of the circle.\n     *\n     * @type {number}\n     */\n    this.y = y;\n  }\n\n  /**\n   * Determines if a point is inside the circle.\n   *\n   * @param {module:shared.Point2D} point - The point to test.\n   *\n   * @return {boolean} true if the point is inside the circle, false\n   * otherwise.\n   */\n  contains(point) {\n    const distance = Math.sqrt(Math.pow(point.x - this.x, 2) + Math.pow(point.y - this.y, 2));\n    return distance <= this.radius;\n  }\n}\n\nmodule.exports = Circle;\n","'use strict';\n\n/**\n * An oval hitbox. Remember that this oval describes the item as if its settings\n * were x=0, y=0, scale=1, rotation=0.\n *\n * @memberof module:shared\n * @implements {module:shared.Hitbox}\n *\n * @param {number} radiusX - The radius of the oval in the x direction.\n * @param {number} radiusY - The radius of the oval in the y direction.\n * @param {number} [x=0] - The x offset of the oval.\n * @param {number} [y=0] - The y offset of the oval.\n */\nclass Oval {\n  constructor(radiusX, radiusY, x = 0, y = 0) {\n    /**\n     * The radius of the circle in the x direction.\n     *\n     * @type {number}\n     */\n    this.radiusX = radiusX;\n\n    /**\n     * The radius of the circle in the y direction.\n     *\n     * @type {number}\n     */\n    this.radiusY = radiusY;\n\n    /**\n     * The x coordinate of the centre of the oval.\n     *\n     * @type {number}\n     */\n    this.x = x;\n\n    /**\n     * The y coordinate of the centre of the oval.\n     *\n     * @type {number}\n     */\n    this.y = y;\n  }\n\n  /**\n   * Determines if a point is inside the oval.\n   *\n   * @param {module:shared.Point2D} point - The point to test.\n   *\n   * @return {boolean} true if the point is inside the oval, false otherwise.\n   */\n  contains(point) {\n    const distance = Math.sqrt(\n      Math.pow(point.x - this.x, 2) / Math.pow(this.radiusX, 2) +\n        Math.pow(point.y - this.y, 2) / Math.pow(this.radiusY, 2)\n    );\n    return distance <= 1;\n  }\n}\n\nmodule.exports = Oval;\n","'use strict';\n\n// const Westures = require('../../../westures');\nconst Westures = require('westures');\n\nconst { NOP } = require('../shared.js');\n\n/**\n * The Interactor class provides a layer of abstraction between the\n * ClientController and the code that processes user inputs.  Data from\n * recognized gestures is reported directly through to the handlers. The\n * handlers are initialized to NOPs so that the functions which call the\n * handlers don't need to check whether the handler exists.\n *\n * Currently, the Interactor makes use of the Westures library.\n *\n * @memberof module:client\n *\n * @see {@link https://mvanderkamp.github.io/westures/}\n *\n * @param {Object} handlers - Object with keys as the names gestures and values\n *    as the corresponding function for handling that gesture when it is\n *    recognized.\n * @param {Function} [handlers.swipe=NOP]\n * @param {Function} [handlers.tap=NOP]\n * @param {Function} [handlers.track=NOP]\n * @param {Function} [handlers.transform=NOP]\n */\nclass Interactor {\n  constructor(root, handlers = {}) {\n    /**\n     * Object holding the handlers, so they can be dynamically referenced by\n     * name.\n     *\n     * @type {Object}\n     * @property {Function} [swipe=NOP]\n     * @property {Function} [tap=NOP]\n     * @property {Function} [track=NOP]\n     * @property {Function} [transform=NOP]\n     */\n    this.handlers = { ...Interactor.DEFAULT_HANDLERS, ...handlers };\n\n    /**\n     * Object to coalesce state from multiple gestures during one event cycle.\n     *\n     * @type {Object}\n     */\n    this._changes = this._resetChanges();\n    this._scheduled = false;\n\n    // Begin listening activities immediately.\n    this.addGestures(root);\n    window.addEventListener('wheel', this.wheel.bind(this), false);\n  }\n\n  /**\n   * Sets up gesture listeners via westures.\n   */\n  addGestures(root) {\n    const region = new Westures.Region(root, { preventDefault: false });\n    region.addGesture(new Westures.Pan(root, this.coalesce.bind(this), { disableKeys: ['ctrlKey'] }));\n    region.addGesture(new Westures.Pinch(root, this.coalesce.bind(this)));\n    region.addGesture(new Westures.Rotate(root, this.coalesce.bind(this)));\n    region.addGesture(new Westures.Swipe(root, this.handlers.swipe));\n    region.addGesture(\n      new Westures.Swivel(root, this.swivel.bind(this), {\n        enableKeys: ['ctrlKey'],\n        dynamicPivot: true,\n        maxInputs: 1,\n      })\n    );\n    region.addGesture(new Westures.Tap(root, this.handlers.tap));\n    region.addGesture(new Westures.Track(root, this.handlers.track, { phases: ['start', 'end'] }));\n  }\n\n  _resetChanges() {\n    return {\n      centroid: { x: 0, y: 0 },\n      delta: {\n        scale: 1,\n        rotation: 0,\n        translation: { x: 0, y: 0 },\n      },\n    };\n  }\n\n  /**\n   * Coalesce state changes for this event cycle.\n   */\n  coalesce(data) {\n    this._changes.centroid = data.centroid;\n    if (data.scale) {\n      this._changes.delta.scale *= data.scale;\n    }\n    if (data.rotation) {\n      this._changes.delta.rotation += data.rotation;\n    }\n    if (data.translation) {\n      this._changes.delta.translation.x += data.translation.x;\n      this._changes.delta.translation.y += data.translation.y;\n    }\n    if (!this._scheduled) {\n      window.setTimeout(this._emit.bind(this), 0);\n      this._scheduled = true;\n    }\n  }\n\n  /**\n   * Emit a transform event with the coalesced state changes.\n   */\n  _emit() {\n    this.handlers.transform(this._changes);\n    this._changes = this._resetChanges();\n    this._scheduled = false;\n  }\n\n  /**\n   * Send a swivel event through as a transformation.\n   */\n  swivel({ rotation, pivot }) {\n    this.coalesce({ rotation, centroid: pivot });\n  }\n\n  /**\n   * Treat scrollwheel events as zoom events.\n   *\n   * @param {WheelEvent} event - The wheel event from the window.\n   */\n  wheel(event) {\n    event.preventDefault();\n    const factor = event.ctrlKey ? 0.02 : 0.1;\n    const scale = -(Math.sign(event.deltaY) * factor) + 1;\n    const centroid = { x: event.clientX, y: event.clientY };\n    this.handlers.transform({ centroid, delta: { scale } });\n  }\n}\n\n/**\n * The default handlers used by the Interactor.\n *\n * @type {object}\n */\nInteractor.DEFAULT_HANDLERS = Object.freeze({\n  swipe: NOP,\n  tap: NOP,\n  track: NOP,\n  transform: NOP,\n});\n\nmodule.exports = Interactor;\n","/**\n * The API interface for Westures. Defines a number of gestures on top of the\n * engine provided by {@link\n * https://mvanderkamp.github.io/westures-core/index.html|westures-core}.\n *\n * @namespace westures\n */\n\n'use strict';\n\nconst core = require('./core');\n\nconst Pan     = require('./src/Pan.js');\nconst Pinch   = require('./src/Pinch.js');\nconst Press   = require('./src/Press.js');\nconst Pull    = require('./src/Pull.js');\nconst Rotate  = require('./src/Rotate.js');\nconst Swipe   = require('./src/Swipe.js');\nconst Swivel  = require('./src/Swivel.js');\nconst Tap     = require('./src/Tap.js');\nconst Track   = require('./src/Track.js');\n\nmodule.exports = {\n  Pan,\n  Pinch,\n  Press,\n  Pull,\n  Rotate,\n  Swipe,\n  Swivel,\n  Tap,\n  Track,\n  ...core,\n};\n\n/**\n * Here are the return \"types\" of the gestures that are included in this\n * package.\n *\n * @namespace ReturnTypes\n */\n\n/**\n * The base data that is included for all emitted gestures.\n *\n * @typedef {Object} BaseData\n *\n * @property {westures-core.Point2D} centroid - The centroid of the input\n * points.\n * @property {Event} event - The input event which caused the gesture to be\n * recognized.\n * @property {string} phase - 'start', 'move', 'end', or 'cancel'.\n * @property {string} type - The name of the gesture as specified by its\n * designer.\n * @property {Element} target - The bound target of the gesture.\n *\n * @memberof ReturnTypes\n */\n\n","/**\n * The global API interface for westures-core. Exposes all classes, constants,\n * and routines used by the package. Use responsibly.\n *\n * @namespace westures-core\n */\n\n'use strict';\n\nconst Gesture = require('./src/Gesture.js');\nconst Input = require('./src/Input.js');\nconst Point2D = require('./src/Point2D.js');\nconst PointerData = require('./src/PointerData.js');\nconst Region = require('./src/Region.js');\nconst Smoothable = require('./src/Smoothable.js');\nconst State = require('./src/State.js');\nconst constants = require('./src/constants.js');\nconst utils = require('./src/utils.js');\n\nmodule.exports = {\n  Gesture,\n  Input,\n  Point2D,\n  PointerData,\n  Region,\n  Smoothable,\n  State,\n  ...constants,\n  ...utils,\n};\n\n","'use strict';\n\nlet g_id = 0;\n\n/**\n * The Gesture class that all gestures inherit from. A custom gesture class will\n * need to override some or all of the four phase \"hooks\": start, move, end, and\n * cancel.\n *\n * @memberof westures-core\n *\n * @param {string} type - The name of the gesture.\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n *    is recognized on the associated element.\n * @param {object} [options] - Generic gesture options\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n */\nclass Gesture {\n  constructor(type, element, handler, options = {}) {\n    if (typeof type !== 'string') {\n      throw new TypeError('Gestures require a string type / name');\n    }\n\n    /**\n     * The name of the gesture. (e.g. 'pan' or 'tap' or 'pinch').\n     *\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * The unique identifier for each gesture. This allows for distinctions\n     * across instances of Gestures that are created on the fly (e.g.\n     * gesture-tap-1, gesture-tap-2).\n     *\n     * @type {string}\n     */\n    this.id = `gesture-${this.type}-${g_id++}`;\n\n    /**\n     * The element to which to associate the gesture.\n     *\n     * @type {Element}\n     */\n    this.element = element;\n\n    /**\n     * The function handler to execute when the gesture is recognized on the\n     * associated element.\n     *\n     * @type {Function}\n     */\n    this.handler = handler;\n\n    /**\n     * The options. Can usually be adjusted live, though be careful doing this.\n     *\n     * @type {object}\n     */\n    this.options = { ...Gesture.DEFAULTS, ...options };\n  }\n\n  /**\n   * Determines whether this gesture is enabled.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {boolean} true if enabled, false otherwise.\n   */\n  isEnabled(state) {\n    const count = state.active.length;\n    const event = state.event;\n    const { enableKeys, disableKeys, minInputs, maxInputs } = this.options;\n\n    return (minInputs <= count) && (maxInputs >= count) &&\n      (enableKeys.length === 0 || enableKeys.some(k => event[k])) &&\n      !disableKeys.some(k => event[k]);\n  }\n\n  /**\n   * Event hook for the start phase of a gesture.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */\n  start() {\n    return null;\n  }\n\n  /**\n   * Event hook for the move phase of a gesture.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */\n  move() {\n    return null;\n  }\n\n  /**\n   * Event hook for the end phase of a gesture.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */\n  end() {\n    return null;\n  }\n\n  /**\n   * Event hook for when an input is cancelled.\n   *\n   * @param {westures-core.State} state - The input state object of the current\n   * region.\n   *\n   * @return {?Object} Gesture is considered recognized if an Object is\n   *    returned.\n   */\n  cancel() {\n    return null;\n  }\n\n  /**\n   * Evalutes the given gesture hook, and dispatches any data that is produced\n   * by calling [recognize]{@link westures-core.Gesture#recognize}.\n   *\n   * @param {string} hook - Must be one of 'start', 'move', 'end', or 'cancel'.\n   * @param {westures-core.State} state - The current State instance.\n   */\n  evaluateHook(hook, state) {\n    const data = this[hook](state);\n    if (data) {\n      this.recognize(hook, state, data);\n    }\n  }\n\n  /**\n   * Recognize a Gesture by calling the handler. Standardizes the way the\n   * handler is called so that classes extending Gesture can circumvent the\n   * evaluateHook approach but still provide results that have a common format.\n   *\n   * Note that the properties in the \"data\" object will receive priority when\n   * constructing the results. This can be used to override standard results\n   * such as the phase or the centroid.\n   *\n   * @param {string} hook - Must be one of 'start', 'move', 'end', or 'cancel'.\n   * @param {westures-core.State} state - current input state.\n   * @param {Object} data - Results data specific to the recognized gesture.\n   */\n  recognize(hook, state, data) {\n    this.handler({\n      centroid: state.centroid,\n      event:    state.event,\n      phase:    hook,\n      type:     this.type,\n      target:   this.element,\n      ...data,\n    });\n  }\n}\n\nGesture.DEFAULTS = {\n  enableKeys:  [],\n  disableKeys: [],\n  minInputs:   1,\n  maxInputs:   Number.MAX_VALUE,\n};\n\nmodule.exports = Gesture;\n\n","'use strict';\n\nconst PointerData = require('./PointerData.js');\nconst { getPropagationPath } = require('./utils.js');\n\n/**\n * Tracks a single input and contains information about the current, previous,\n * and initial events.\n *\n * @memberof westures-core\n *\n * @param {(PointerEvent | MouseEvent | TouchEvent)} event - The input event\n * which will initialize this Input object.\n * @param {number} identifier - The identifier for this input, so that it can\n * be located in subsequent Event objects.\n */\nclass Input {\n  constructor(event, identifier) {\n    const currentData = new PointerData(event, identifier);\n\n    /**\n     * The set of elements along the original event's propagation path at the\n     * time it was dispatched.\n     *\n     * @type {WeakSet.<Element>}\n     */\n    this.initialElements = new WeakSet(getPropagationPath(event));\n\n    /**\n     * Holds the initial data from the mousedown / touchstart / pointerdown that\n     * began this input.\n     *\n     * @type {westures-core.PointerData}\n     */\n    this.initial = currentData;\n\n    /**\n     * Holds the most current pointer data for this Input.\n     *\n     * @type {westures-core.PointerData}\n     */\n    this.current = currentData;\n\n    /**\n     * Holds the previous pointer data for this Input.\n     *\n     * @type {westures-core.PointerData}\n     */\n    this.previous = currentData;\n\n    /**\n     * The identifier for the pointer / touch / mouse button associated with\n     * this input.\n     *\n     * @type {number}\n     */\n    this.identifier = identifier;\n  }\n\n  /**\n   * The phase of the input: 'start' or 'move' or 'end' or 'cancel'\n   *\n   * @type {string}\n   */\n  get phase() { return this.current.type; }\n\n  /**\n   * The timestamp of the initiating event for this input.\n   *\n   * @type {number}\n   */\n  get startTime() { return this.initial.time; }\n\n  /**\n   * The amount of time elapsed between the start of this input and its latest\n   * event.\n   *\n   * @type {number}\n   */\n  get elapsedTime() { return this.current.time - this.initial.time; }\n\n  /**\n   * @return {number} The distance between the initiating event for this input\n   *    and its current event.\n   */\n  totalDistance() {\n    return this.initial.point.distanceTo(this.current.point);\n  }\n\n  /**\n   * Saves the given raw event in PointerData form as the current data for this\n   * input, pushing the old current data into the previous slot, and tossing\n   * out the old previous data.\n   *\n   * @param {Event} event - The event object to wrap with a PointerData.\n   */\n  update(event) {\n    this.previous = this.current;\n    this.current = new PointerData(event, this.identifier);\n  }\n}\n\nmodule.exports = Input;\n\n","'use strict';\n\nconst Point2D   = require('./Point2D.js');\nconst { PHASE } = require('./constants.js');\n\n/**\n * @private\n * @inner\n * @memberof westures-core.PointerData\n *\n * @return {Event} The Event object which corresponds to the given identifier.\n *    Contains clientX, clientY values.\n */\nfunction getEventObject(event, identifier) {\n  if (event.changedTouches) {\n    return Array.from(event.changedTouches).find(touch => {\n      return touch.identifier === identifier;\n    });\n  }\n  return event;\n}\n\n/**\n * Low-level storage of pointer data based on incoming data from an interaction\n * event.\n *\n * @memberof westures-core\n *\n * @param {Event} event - The event object being wrapped.\n * @param {number} identifier - The index of touch if applicable\n */\nclass PointerData {\n  constructor(event, identifier) {\n    const { clientX, clientY } = getEventObject(event, identifier);\n\n    /**\n     * The original event object.\n     *\n     * @type {Event}\n     */\n    this.event = event;\n\n    /**\n     * The type or 'phase' of this batch of pointer data. 'start' or 'move' or\n     * 'end' or 'cancel'\n     *\n     * @type {string}\n     */\n    this.type = PHASE[event.type];\n\n    /**\n     * The timestamp of the event in milliseconds elapsed since January 1, 1970,\n     * 00:00:00 UTC.\n     *\n     * @type {number}\n     */\n    this.time = Date.now();\n\n    /**\n     * The (x,y) coordinate of the event, wrapped in a Point2D.\n     *\n     * @type {westures-core.Point2D}\n     */\n    this.point = new Point2D(clientX, clientY);\n  }\n}\n\nmodule.exports = PointerData;\n\n","'use strict';\n\n/**\n * The Point2D class stores and operates on 2-dimensional points, represented as\n * x and y coordinates.\n *\n * @memberof westures-core\n *\n * @param {number} [ x=0 ] - The x coordinate of the point.\n * @param {number} [ y=0 ] - The y coordinate of the point.\n */\nclass Point2D {\n  constructor(x = 0, y = 0) {\n    /**\n     * The x coordinate of the point.\n     *\n     * @type {number}\n     */\n    this.x = x;\n\n    /**\n     * The y coordinate of the point.\n     *\n     * @type {number}\n     */\n    this.y = y;\n  }\n\n  /**\n   * Calculates the angle between this point and the given point.\n   *\n   * @param {!westures-core.Point2D} point - Projected point for calculating the\n   * angle.\n   *\n   * @return {number} Radians along the unit circle where the projected\n   * point lies.\n   */\n  angleTo(point) {\n    return Math.atan2(point.y - this.y, point.x - this.x);\n  }\n\n  /**\n   * Determine the angle from the centroid to each of the points.\n   *\n   * @param {!westures-core.Point2D[]} points - the Point2D objects to calculate\n   *    the angles to.\n   *\n   * @returns {number[]}\n   */\n  anglesTo(points) {\n    return points.map(point => this.angleTo(point));\n  }\n\n  /**\n   * Determine the average distance from this point to the provided array of\n   * points.\n   *\n   * @param {!westures-core.Point2D[]} points - the Point2D objects to calculate\n   *    the average distance to.\n   *\n   * @return {number} The average distance from this point to the provided\n   *    points.\n   */\n  averageDistanceTo(points) {\n    return this.totalDistanceTo(points) / points.length;\n  }\n\n  /**\n   * Clone this point.\n   *\n   * @return {westures-core.Point2D} A new Point2D, identical to this point.\n   */\n  clone() {\n    return new Point2D(this.x, this.y);\n  }\n\n  /**\n   * Calculates the distance between two points.\n   *\n   * @param {!westures-core.Point2D} point - Point to which the distance is\n   * calculated.\n   *\n   * @return {number} The distance between the two points, a.k.a. the\n   *    hypoteneuse.\n   */\n  distanceTo(point) {\n    return Math.hypot(point.x - this.x, point.y - this.y);\n  }\n\n  /**\n   * Subtract the given point from this point.\n   *\n   * @param {!westures-core.Point2D} point - Point to subtract from this point.\n   *\n   * @return {westures-core.Point2D} A new Point2D, which is the result of (this\n   * - point).\n   */\n  minus(point) {\n    return new Point2D(\n      this.x - point.x,\n      this.y - point.y,\n    );\n  }\n\n  /**\n   * Return the summation of this point to the given point.\n   *\n   * @param {!westures-core.Point2D} point - Point to add to this point.\n   *\n   * @return {westures-core.Point2D} A new Point2D, which is the addition of the\n   * two points.\n   */\n  plus(point) {\n    return new Point2D(\n      this.x + point.x,\n      this.y + point.y,\n    );\n  }\n\n  /**\n   * Calculates the total distance from this point to an array of points.\n   *\n   * @param {!westures-core.Point2D[]} points - The array of Point2D objects to\n   *    calculate the total distance to.\n   *\n   * @return {number} The total distance from this point to the provided points.\n   */\n  totalDistanceTo(points) {\n    return points.reduce((d, p) => d + this.distanceTo(p), 0);\n  }\n\n  /**\n   * Calculates the centroid of a list of points.\n   *\n   * @param {westures-core.Point2D[]} points - The array of Point2D objects for\n   * which to calculate the centroid.\n   *\n   * @return {westures-core.Point2D} The centroid of the provided points.\n   */\n  static centroid(points = []) {\n    if (points.length === 0) return null;\n\n    const total = Point2D.sum(points);\n    total.x /= points.length;\n    total.y /= points.length;\n    return total;\n  }\n\n  /**\n   * Calculates the sum of the given points.\n   *\n   * @param {westures-core.Point2D[]} points - The Point2D objects to sum up.\n   *\n   * @return {westures-core.Point2D} A new Point2D representing the sum of the\n   * given points.\n   */\n  static sum(points = []) {\n    return points.reduce(\n      (total, pt) => {\n        total.x += pt.x;\n        total.y += pt.y;\n        return total;\n      },\n      new Point2D(0, 0),\n    );\n  }\n}\n\nmodule.exports = Point2D;\n\n","'use strict';\n\n/**\n * List of events that trigger the cancel phase.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst CANCEL_EVENTS = [\n  'blur',\n  'pointercancel',\n  'touchcancel',\n  'mouseleave',\n];\n\n/**\n * List of keyboard events that trigger a restart.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst KEYBOARD_EVENTS = [\n  'keydown',\n  'keyup',\n];\n\n/**\n * List of mouse events to listen to.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst MOUSE_EVENTS = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n];\n\n/**\n * List of pointer events to listen to.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst POINTER_EVENTS = [\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n];\n\n/**\n * List of touch events to listen to.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst TOUCH_EVENTS = [\n  'touchend',\n  'touchmove',\n  'touchstart',\n];\n\n/**\n * List of potentially state-modifying keys.\n * Entries are: ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst STATE_KEYS = [\n  'altKey',\n  'ctrlKey',\n  'metaKey',\n  'shiftKey',\n];\n\n/**\n * List of the 'key' values on KeyboardEvent objects of the potentially\n * state-modifying keys.\n *\n * @memberof westures-core\n * @type {string[]}\n */\nconst STATE_KEY_STRINGS = [\n  'Alt',\n  'Control',\n  'Meta',\n  'Shift',\n];\n\n/**\n * The cancel phase.\n *\n * @memberof westures-core\n * @type {string}\n */\nconst CANCEL = 'cancel';\n\n/**\n * The end phase.\n *\n * @memberof westures-core\n * @type {string}\n */\nconst END = 'end';\n\n/**\n * The move phase.\n *\n * @memberof westures-core\n * @type {string}\n */\nconst MOVE = 'move';\n\n/**\n * The start phase.\n *\n * @memberof westures-core\n * @type {string}\n */\nconst START = 'start';\n\n/**\n * The recognized phases.\n *\n * @memberof westures-core\n * @type {list.<string>}\n */\nconst PHASES = [START, MOVE, END, CANCEL];\n\n/**\n * Object that normalizes the names of window events to be either of type start,\n * move, end, or cancel.\n *\n * @memberof westures-core\n * @type {object}\n */\nconst PHASE = {\n  blur:           CANCEL,\n  pointercancel:  CANCEL,\n  touchcancel:    CANCEL,\n\n  mouseup:       END,\n  pointerup:     END,\n  touchend:      END,\n\n  mousemove:   MOVE,\n  pointermove: MOVE,\n  touchmove:   MOVE,\n\n  mousedown:   START,\n  pointerdown: START,\n  touchstart:  START,\n};\n\nmodule.exports = {\n  CANCEL_EVENTS,\n  KEYBOARD_EVENTS,\n  MOUSE_EVENTS,\n  POINTER_EVENTS,\n  TOUCH_EVENTS,\n\n  STATE_KEYS,\n  STATE_KEY_STRINGS,\n\n  CANCEL,\n  END,\n  MOVE,\n  START,\n\n  PHASE,\n  PHASES,\n};\n\n","'use strict';\n\nconst PI_2   = 2 * Math.PI;\nconst PI_NVE = -Math.PI;\n\n/**\n * Helper function to regulate angular differences, so they don't jump from 0 to\n * 2 * PI or vice versa.\n *\n * @memberof westures-core\n *\n * @param {number} a - Angle in radians.\n * @param {number} b - Angle in radians.\n\n * @return {number} c, given by: c = a - b such that |c| < PI\n */\nfunction angularDifference(a, b) {\n  let diff = a - b;\n  if (diff < PI_NVE) {\n    diff += PI_2;\n  } else if (diff > Math.PI) {\n    diff -= PI_2;\n  }\n  return diff;\n}\n\n/**\n * In case event.composedPath() is not available.\n *\n * @memberof westures-core\n *\n * @param {Event} event\n *\n * @return {Element[]} The elements along the composed path of the event.\n */\nfunction getPropagationPath(event) {\n  if (typeof event.composedPath === 'function') {\n    return event.composedPath();\n  }\n\n  const path = [];\n  for (let node = event.target; node !== document; node = node.parentNode) {\n    path.push(node);\n  }\n  path.push(document);\n  path.push(window);\n\n  return path;\n}\n\n/**\n * Performs a set filter operation.\n *\n * @memberof westures-core\n *\n * @param {Set} set - The set to filter.\n * @param {Function} predicate - Function to test elements of 'set'. Receives\n * one argument: the current set element.\n *\n * @return {Set} Set consisting of elements in 'set' for which 'predicate' is\n * true.\n */\nfunction setFilter(set, predicate) {\n  const result = new Set();\n  set.forEach(element => {\n    if (predicate(element)) {\n      result.add(element);\n    }\n  });\n  return result;\n}\n\n/**\n * Performs a set difference operation.\n *\n * @memberof westures-core\n *\n * @param {Set} left - Base set.\n * @param {Set} right - Set of elements to remove from 'left'.\n *\n * @return {Set} Set consisting of elements in 'left' that are not in\n * 'right'.\n */\nfunction setDifference(left, right) {\n  return setFilter(left, element => !right.has(element));\n}\n\nmodule.exports = {\n  angularDifference,\n  getPropagationPath,\n  setDifference,\n  setFilter,\n};\n\n","'use strict';\n\nconst State = require('./State.js');\nconst {\n  CANCEL_EVENTS,\n  KEYBOARD_EVENTS,\n  MOUSE_EVENTS,\n  POINTER_EVENTS,\n  TOUCH_EVENTS,\n\n  STATE_KEY_STRINGS,\n\n  PHASE,\n\n  CANCEL,\n  END,\n  START,\n} = require('./constants.js');\nconst {\n  setDifference,\n  setFilter,\n} = require('./utils.js');\n\n/**\n * Allows the user to specify the control region which will listen for user\n * input events.\n *\n * @memberof westures-core\n *\n * @param {Element} element=window - The element which should listen to input\n * events.\n * @param {object} [options]\n * @param {boolean} [options.capture=false] - Whether the region uses the\n * capture phase of input events. If false, uses the bubbling phase.\n * @param {boolean} [options.preferPointer=true] - If false, the region listens\n * to mouse/touch events instead of pointer events.\n * @param {boolean} [options.preventDefault=true] - Whether the default\n * browser functionality should be disabled. This option should most likely be\n * ignored. Here there by dragons if set to false.\n * @param {string} [options.touchAction='none'] - Value to set the CSS\n * 'touch-action' property to on elements added to the region.\n */\nclass Region {\n  constructor(element = window, options = {}) {\n    options = { ...Region.DEFAULTS, ...options };\n\n    /**\n     * The list of relations between elements, their gestures, and the handlers.\n     *\n     * @type {Set.<westures-core.Gesture>}\n     */\n    this.gestures = new Set();\n\n    /**\n     * The list of active gestures for the current input session.\n     *\n     * @type {Set.<westures-core.Gesture>}\n     */\n    this.activeGestures = new Set();\n\n    /**\n     * The base list of potentially active gestures for the current input\n     * session.\n     *\n     * @type {Set.<westures-core.Gesture>}\n     */\n    this.potentialGestures = new Set();\n\n    /**\n     * The element being bound to.\n     *\n     * @type {Element}\n     */\n    this.element = element;\n\n    /**\n     * The user-supplied options for the Region.\n     *\n     * @type {object}\n     */\n    this.options = options;\n\n    /**\n     * The internal state object for a Region.  Keeps track of inputs.\n     *\n     * @type {westures-core.State}\n     */\n    this.state = new State(this.element);\n\n    // Begin operating immediately.\n    this.activate();\n  }\n\n  /**\n   * Activates the region by adding event listeners for all appropriate input\n   * events to the region's element.\n   *\n   * @private\n   */\n  activate() {\n    /*\n     * Listening to both mouse and touch comes with the difficulty that\n     * preventDefault() must be called to prevent both events from iterating\n     * through the system. However I have left it as an option to the end user,\n     * which defaults to calling preventDefault(), in case there's a use-case I\n     * haven't considered or am not aware of.\n     *\n     * It also may be a good idea to keep regions small in large pages.\n     *\n     * See:\n     *  https://www.html5rocks.com/en/mobile/touchandmouse/\n     *  https://developer.mozilla.org/en-US/docs/Web/API/Touch_events\n     *  https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events\n     */\n    let eventNames = [];\n    if (this.options.preferPointer && window.PointerEvent) {\n      eventNames = POINTER_EVENTS;\n    } else {\n      eventNames = MOUSE_EVENTS.concat(TOUCH_EVENTS);\n    }\n\n    // Bind detected browser events to the region element.\n    const arbitrate = this.arbitrate.bind(this);\n    eventNames.forEach(eventName => {\n      this.element.addEventListener(eventName, arbitrate, {\n        capture: this.options.capture,\n        once:    false,\n        passive: false,\n      });\n    });\n\n    const cancel = this.cancel.bind(this);\n    CANCEL_EVENTS.forEach(eventName => {\n      window.addEventListener(eventName, cancel);\n    });\n\n    const handleKeyboardEvent = this.handleKeyboardEvent.bind(this);\n    KEYBOARD_EVENTS.forEach(eventName => {\n      window.addEventListener(eventName, handleKeyboardEvent);\n    });\n  }\n\n  /**\n   * Handles a cancel event. Resets the state and the active / potential gesture\n   * lists.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   */\n  cancel(event) {\n    if (this.options.preventDefault) event.preventDefault();\n    this.state.inputs.forEach(input => {\n      input.update(event);\n    });\n    this.activeGestures.forEach(gesture => {\n      gesture.evaluateHook(CANCEL, this.state);\n    });\n    this.state = new State(this.element);\n    this.resetActiveGestures();\n  }\n\n  /**\n   * Handles a keyboard event, triggering a restart of any gestures that need\n   * it.\n   *\n   * @private\n   * @param {KeyboardEvent} event - The keyboard event.\n   */\n  handleKeyboardEvent(event) {\n    if (STATE_KEY_STRINGS.indexOf(event.key) >= 0) {\n      this.state.event = event;\n      const oldActiveGestures = this.activeGestures;\n      this.setActiveGestures();\n\n      setDifference(oldActiveGestures, this.activeGestures).forEach(gesture => {\n        gesture.evaluateHook(END, this.state);\n      });\n      setDifference(this.activeGestures, oldActiveGestures).forEach(gesture => {\n        gesture.evaluateHook(START, this.state);\n      });\n    }\n  }\n\n  /**\n   * Resets the active gestures.\n   *\n   * @private\n   */\n  resetActiveGestures() {\n    this.potentialGestures = new Set();\n    this.activeGestures = new Set();\n  }\n\n  /**\n   * Selects active gestures from the list of potentially active gestures.\n   *\n   * @private\n   */\n  setActiveGestures() {\n    this.activeGestures = setFilter(this.potentialGestures, gesture => {\n      return gesture.isEnabled(this.state);\n    });\n  }\n\n  /**\n   * Selects the potentially active gestures.\n   *\n   * @private\n   */\n  setPotentialGestures() {\n    const input = this.state.inputs[0];\n    this.potentialGestures = setFilter(this.gestures, gesture => {\n      return input.initialElements.has(gesture.element);\n    });\n  }\n\n  /**\n   * Selects the gestures that are active for the current input sequence.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   * @param {boolean} isInitial - Whether this is an initial contact.\n   */\n  updateActiveGestures(event, isInitial) {\n    if (PHASE[event.type] === START) {\n      if (isInitial) {\n        this.setPotentialGestures();\n      }\n      this.setActiveGestures();\n    }\n  }\n\n  /**\n   * Evaluates whether the current input session has completed.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   */\n  pruneActiveGestures(event) {\n    if (PHASE[event.type] === END) {\n      if (this.state.hasNoInputs()) {\n        this.resetActiveGestures();\n      } else {\n        this.setActiveGestures();\n      }\n    }\n  }\n\n  /**\n   * All input events flow through this function. It makes sure that the input\n   * state is maintained, determines which gestures to analyze based on the\n   * initial position of the inputs, calls the relevant gesture hooks, and\n   * dispatches gesture data.\n   *\n   * @private\n   * @param {Event} event - The event emitted from the window object.\n   */\n  arbitrate(event) {\n    const isInitial = this.state.hasNoInputs();\n    this.state.updateAllInputs(event);\n    this.updateActiveGestures(event, isInitial);\n\n    if (this.activeGestures.size > 0) {\n      if (this.options.preventDefault) event.preventDefault();\n\n      this.activeGestures.forEach(gesture => {\n        gesture.evaluateHook(PHASE[event.type], this.state);\n      });\n    }\n\n    this.state.clearEndedInputs();\n    this.pruneActiveGestures(event);\n  }\n\n  /**\n   * Adds the given gesture to the region.\n   *\n   * @param {westures-core.Gesture} gesture - Instantiated gesture to add.\n   */\n  addGesture(gesture) {\n    gesture.element.style.touchAction = this.options.touchAction;\n    this.gestures.add(gesture);\n  }\n\n  /**\n   * Removes the given gesture from the region.\n   *\n   * @param {westures-core.Gesture} gesture - Instantiated gesture to add.\n   */\n  removeGesture(gesture) {\n    this.gestures.delete(gesture);\n    this.potentialGestures.delete(gesture);\n    this.activeGestures.delete(gesture);\n  }\n\n  /**\n   * Retrieves Gestures by their associated element.\n   *\n   * @param {Element} element - The element for which to find gestures.\n   *\n   * @return {westures-core.Gesture[]} Gestures to which the element is bound.\n   */\n  getGesturesByElement(element) {\n    return setFilter(this.gestures, gesture => gesture.element === element);\n  }\n\n  /**\n   * Remove all gestures bound to the given element.\n   *\n   * @param {Element} element - The element to unbind.\n   */\n  removeGesturesByElement(element) {\n    this.getGesturesByElement(element).forEach(g => this.removeGesture(g));\n  }\n}\n\nRegion.DEFAULTS = {\n  capture:        false,\n  preferPointer:  true,\n  preventDefault: true,\n  touchAction:    'none',\n};\n\nmodule.exports = Region;\n","'use strict';\n\nconst {\n  CANCEL,\n  END,\n  MOVE,\n  PHASE,\n  START,\n} = require('./constants.js');\nconst Input     = require('./Input.js');\nconst Point2D   = require('./Point2D.js');\n\nconst symbols = {\n  inputs: Symbol.for('inputs'),\n};\n\n/**\n * Set of helper functions for updating inputs based on type of input.\n * Must be called with a bound 'this', via bind(), or call(), or apply().\n *\n * @private\n * @inner\n * @memberof westure-core.State\n */\nconst update_fns = {\n  TouchEvent: function TouchEvent(event) {\n    Array.from(event.changedTouches).forEach(touch => {\n      this.updateInput(event, touch.identifier);\n    });\n  },\n\n  PointerEvent: function PointerEvent(event) {\n    this.updateInput(event, event.pointerId);\n  },\n\n  MouseEvent: function MouseEvent(event) {\n    if (event.button === 0) {\n      this.updateInput(event, event.button);\n    }\n  },\n};\n\n/**\n * Keeps track of currently active and ending input points on the interactive\n * surface.\n *\n * @memberof westures-core\n *\n * @param {Element} element - The element underpinning the associated Region.\n */\nclass State {\n  constructor(element) {\n    /**\n     * Keep a reference to the element for the associated region.\n     *\n     * @type {Element}\n     */\n    this.element = element;\n\n    /**\n     * Keeps track of the current Input objects.\n     *\n     * @alias [@@inputs]\n     * @type {Map.<westures-core.Input>}\n     * @memberof westure-core.State\n     */\n    this[symbols.inputs] = new Map();\n\n    /**\n     * All currently valid inputs, including those that have ended.\n     *\n     * @type {westures-core.Input[]}\n     */\n    this.inputs = [];\n\n    /**\n     * The array of currently active inputs, sourced from the current Input\n     * objects. \"Active\" is defined as not being in the 'end' phase.\n     *\n     * @type {westures-core.Input[]}\n     */\n    this.active = [];\n\n    /**\n     * The array of latest point data for the currently active inputs, sourced\n     * from this.active.\n     *\n     * @type {westures-core.Point2D[]}\n     */\n    this.activePoints = [];\n\n    /**\n     * The centroid of the currently active points.\n     *\n     * @type {westures-core.Point2D}\n     */\n    this.centroid = {};\n\n    /**\n     * The latest event that the state processed.\n     *\n     * @type {Event}\n     */\n    this.event = null;\n  }\n\n  /**\n   * Deletes all inputs that are in the 'end' phase.\n   */\n  clearEndedInputs() {\n    this[symbols.inputs].forEach((v, k) => {\n      if (v.phase === 'end') this[symbols.inputs].delete(k);\n    });\n  }\n\n  /**\n   * @param {string} phase - One of 'start', 'move', 'end', or 'cancel'.\n   *\n   * @return {westures-core.Input[]} Inputs in the given phase.\n   */\n  getInputsInPhase(phase) {\n    return this.inputs.filter(i => i.phase === phase);\n  }\n\n  /**\n   * @param {string} phase - One of 'start', 'move', 'end', or 'cancel'.\n   *\n   * @return {westures-core.Input[]} Inputs <b>not</b> in the given phase.\n   */\n  getInputsNotInPhase(phase) {\n    return this.inputs.filter(i => i.phase !== phase);\n  }\n\n  /**\n   * @return {boolean} True if there are no active inputs. False otherwise.\n   */\n  hasNoInputs() {\n    return this[symbols.inputs].size === 0;\n  }\n\n  /**\n   * Update the input with the given identifier using the given event.\n   *\n   * @private\n   *\n   * @param {Event} event - The event being captured.\n   * @param {number} identifier - The identifier of the input to update.\n   */\n  updateInput(event, identifier) {\n    switch (PHASE[event.type]) {\n    case START:\n      this[symbols.inputs].set(\n        identifier,\n        new Input(event, identifier),\n      );\n      try {\n        this.element.setPointerCapture(identifier);\n      } catch (e) {\n        // NOP: Optional operation failed.\n      }\n      break;\n\n    // All of 'end', 'move', and 'cancel' perform updates, hence the\n    // following fall-throughs\n    case END:\n      try {\n        this.element.releasePointerCapture(identifier);\n      } catch (e) {\n        // NOP: Optional operation failed.\n      }\n    case CANCEL:\n    case MOVE:\n      if (this[symbols.inputs].has(identifier)) {\n        this[symbols.inputs].get(identifier).update(event);\n      }\n      break;\n\n    default:\n      console.warn(`Unrecognized event type: ${event.type}`);\n    }\n  }\n\n  /**\n   * Updates the inputs with new information based upon a new event being fired.\n   *\n   * @private\n   * @param {Event} event - The event being captured.\n   */\n  updateAllInputs(event) {\n    update_fns[event.constructor.name].call(this, event);\n    this.updateFields(event);\n  }\n\n  /**\n   * Updates the convenience fields.\n   *\n   * @private\n   * @param {Event} event - Event with which to update the convenience fields.\n   */\n  updateFields(event) {\n    this.inputs = Array.from(this[symbols.inputs].values());\n    this.active = this.getInputsNotInPhase('end');\n    this.activePoints = this.active.map(i => i.current.point);\n    this.centroid = Point2D.centroid(this.activePoints);\n    this.event = event;\n  }\n}\n\nmodule.exports = State;\n\n","'use strict';\n\nconst cascade = Symbol('cascade');\nconst smooth = Symbol('smooth');\n\n/**\n * Determines whether to apply smoothing. Smoothing is on by default but turned\n * off if either:<br>\n *  1. The user explicitly requests that it be turned off.<br>\n *  2. The active pointer is not \"coarse\".<br>\n *\n * @see {@link\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia}\n *\n * @inner\n * @memberof westures-core.Smoothable\n *\n * @param {boolean} isRequested - Whether smoothing was requested by the user.\n *\n * @returns {boolean} Whether to apply smoothing.\n */\nfunction smoothingIsApplicable(isRequested) {\n  if (isRequested) {\n    try {\n      return window.matchMedia('(pointer: coarse)').matches;\n    } catch (e) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * A Smoothable datatype is one that is capable of smoothing out a series of\n * values as they come in, one at a time, providing a more consistent series. It\n * does this by creating some inertia in the values using a cascading average.\n * (For those who are interested in such things, this effectively means that it\n * provides a practical application of Zeno's Dichotomy).\n *\n * @example\n * const x = new Smoothable({ identity: 1 });\n * const a = x.next(1);   // 1.0\n * const b = x.next(1.2); // 1.1\n * const c = x.next(0.9); // 1.0\n * const d = x.next(0.6); // 0.8\n * const e = x.next(1.2); // 1.0\n * const f = x.next(1.6); // 1.3\n * x.restart();\n * const g = x.next(0);   // 0.5\n *\n * @memberof westures-core\n *\n * @param {Object} [options]\n * @param {boolean} [options.applySmoothing=true] Whether to apply smoothing to\n * the data.\n * @param {*} [options.identity=0] The identity value of this smoothable data.\n */\nclass Smoothable {\n  constructor(options = {}) {\n    const final_options = { ...Smoothable.DEFAULTS, ...options };\n\n    /**\n     * The function through which smoothed emits are passed.\n     *\n     * @method\n     * @param {*} data - The data to emit.\n     *\n     * @return {*} The smoothed out data.\n     */\n    this.next = null;\n    if (smoothingIsApplicable(final_options.applySmoothing)) {\n      this.next = this[smooth].bind(this);\n    } else {\n      this.next = data => data;\n    }\n\n    /**\n     * The \"identity\" value of the data that will be smoothed.\n     *\n     * @type {*}\n     * @default 0\n     */\n    this.identity = final_options.identity;\n\n    /**\n     * The cascading average of outgoing values.\n     *\n     * @memberof westures-core.Smoothable\n     * @alias [@@cascade]\n     * @type {object}\n     */\n    this[cascade] = this.identity;\n  }\n\n  /**\n   * Restart the Smoothable gesture.\n   */\n  restart() {\n    this[cascade] = this.identity;\n  }\n\n  /**\n   * Smooth out the outgoing data.\n   *\n   * @memberof westures-core.Smoothable\n   * @alias [@@smooth]\n   * @param {object} data - The next batch of data to emit.\n   *\n   * @return {?object}\n   */\n  [smooth](data) {\n    const average = this.average(this[cascade], data);\n    this[cascade] = average;\n    return average;\n  }\n\n  /**\n   * Average out two values, as part of the smoothing algorithm. Override this\n   * method if the data being smoothed is not a Number.\n   *\n   * @param {number} a\n   * @param {number} b\n   *\n   * @return {number} The average of 'a' and 'b'\n   */\n  average(a, b) {\n    return (a + b) / 2;\n  }\n}\n\nSmoothable.DEFAULTS = {\n  applySmoothing: true,\n  identity:       0,\n};\n\nmodule.exports = Smoothable;\n\n","/*\n * Contains the Pan class.\n */\n\n'use strict';\n\nconst { Gesture, Point2D, Smoothable } = require('../core');\n\n/**\n * Data returned when a Pan is recognized.\n *\n * @typedef {Object} PanData\n * @mixes ReturnTypes.BaseData\n *\n * @property {westures-core.Point2D} translation - The change vector from the\n * last emit.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Pan is defined as a normal movement in any direction.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PanData}\n * @see {westures-core.Smoothable}\n * @memberof westures\n *\n * @param {Element} element - The element with which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n */\nclass Pan extends Gesture {\n  constructor(element, handler, options = {}) {\n    super('pan', element, handler, options);\n\n    /**\n     * The previous point location.\n     *\n     * @type {westures-core.Point2D}\n     */\n    this.previous = null;\n\n    /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<westures-core.Point2D>}\n     */\n    this.outgoing = new Smoothable({ ...options, identity: new Point2D() });\n    this.outgoing.average = (a, b) => Point2D.centroid([a, b]);\n  }\n\n  /**\n   * Resets the gesture's progress by saving the current centroid of the active\n   * inputs. To be called whenever the number of inputs changes.\n   *\n   * @param {State} state\n   */\n  restart(state) {\n    this.previous = state.centroid;\n    this.outgoing.restart();\n  }\n\n  start(state) {\n    this.restart(state);\n  }\n\n  move(state) {\n    const translation = state.centroid.minus(this.previous);\n    this.previous = state.centroid;\n    return { translation: this.outgoing.next(translation) };\n  }\n\n  end(state) {\n    this.restart(state);\n  }\n\n  cancel(state) {\n    this.restart(state);\n  }\n}\n\nmodule.exports = Pan;\n\n","/*\n * Contains the abstract Pinch class.\n */\n\n'use strict';\n\nconst { Gesture, Smoothable } = require('../core');\n\n/**\n * Data returned when a Pinch is recognized.\n *\n * @typedef {Object} PinchData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} distance - The average distance from an active input to\n *    the centroid.\n * @property {number} scale - The proportional change in distance since last\n * emit.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Pinch is defined as two or more inputs moving either together or apart.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PinchData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=2] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n */\nclass Pinch extends Gesture {\n  constructor(element, handler, options = {}) {\n    options = { ...Pinch.DEFAULTS, ...options };\n    super('pinch', element, handler, options);\n\n    /**\n     * The previous distance.\n     *\n     * @type {number}\n     */\n    this.previous = 0;\n\n    /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */\n    this.outgoing = new Smoothable({ ...options, identity: 1 });\n  }\n\n  /**\n   * Initializes the gesture progress.\n   *\n   * @param {State} state - current input state.\n   */\n  restart(state) {\n    this.previous = state.centroid.averageDistanceTo(state.activePoints);\n    this.outgoing.restart();\n  }\n\n  start(state) {\n    this.restart(state);\n  }\n\n  move(state) {\n    const distance = state.centroid.averageDistanceTo(state.activePoints);\n    const scale = distance / this.previous;\n    this.previous = distance;\n    return { distance, scale: this.outgoing.next(scale) };\n  }\n\n  end(state) {\n    this.restart(state);\n  }\n\n  cancel(state) {\n    this.restart(state);\n  }\n}\n\nPinch.DEFAULTS = Object.freeze({\n  minInputs: 2,\n});\n\nmodule.exports = Pinch;\n\n","/*\n * Contains the Press class.\n */\n\n'use strict';\n\nconst { Gesture, Point2D, MOVE } = require('../core');\n\n/**\n * Data returned when a Press is recognized.\n *\n * @typedef {Object} PressData\n *\n * @property {westures-core.Point2D} centroid - The current centroid of the\n * input points.\n * @property {westures-core.Point2D} initial - The initial centroid of the input\n * points.\n * @property {number} distance - The total movement since initial contact.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Press is defined as one or more input points being held down without\n * moving. Press gestures may be stacked by pressing with additional pointers\n * beyond the minimum, so long as none of the points move or are lifted, a Press\n * will be recognized for each additional pointer.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PressData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {number} [options.delay=1000] - The delay before emitting, during\n * which time the number of inputs must not go below minInputs.\n * @param {number} [options.tolerance=10] - The tolerance in pixels a user can\n * move and still allow the gesture to emit.\n */\nclass Press extends Gesture {\n  constructor(element, handler, options = {}) {\n    super('press', element, handler, { ...Press.DEFAULTS, ...options });\n  }\n\n  start(state) {\n    const initial = state.centroid;\n    const originalInputs = Array.from(state.active);\n    setTimeout(() => {\n      const inputs = state.active.filter(i => originalInputs.includes(i));\n      if (inputs.length === originalInputs.length) {\n        const centroid = Point2D.centroid(inputs.map(i => i.current.point));\n        const distance = initial.distanceTo(centroid);\n        if (distance <= this.options.tolerance) {\n          this.recognize(MOVE, state, { centroid, distance, initial });\n        }\n      }\n    }, this.options.delay);\n  }\n}\n\nPress.DEFAULTS = Object.freeze({\n  delay:     1000,\n  tolerance: 10,\n});\n\nmodule.exports = Press;\n\n","/*\n * Contains the abstract Pull class.\n */\n\n'use strict';\n\nconst { Smoothable } = require('../core');\nconst Pivotable = require('./Pivotable.js');\n\n/**\n * Data returned when a Pull is recognized.\n *\n * @typedef {Object} PullData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} distance - The average distance from an active input to\n * the centroid.\n * @property {number} scale - The proportional change in distance since last\n * emit.\n * @property {westures-core.Point2D} pivot - The pivot point.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Pull is defined as a single input moving away from or towards a pivot\n * point.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.PullData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n * @param {number} [options.deadzoneRadius=15] - The radius in pixels around the\n * start point in which to do nothing.\n * @param {Element} [options.dynamicPivot=false] - Normally the center point of\n * the gesture's element is used as the pivot. If this option is set, the\n * initial contact point with the element is used as the pivot instead.\n */\nclass Pull extends Pivotable {\n  constructor(element, handler, options = {}) {\n    super('pull', element, handler, options);\n\n    /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */\n    this.outgoing = new Smoothable({ ...options, identity: 1 });\n  }\n\n  updatePrevious(state) {\n    this.previous = this.pivot.distanceTo(state.centroid);\n  }\n\n  move(state) {\n    const pivot = this.pivot;\n    const distance = pivot.distanceTo(state.centroid);\n    const scale = distance / this.previous;\n    const { deadzoneRadius } = this.options;\n\n    let rv = null;\n    if (distance > deadzoneRadius && this.previous > deadzoneRadius) {\n      rv = { distance, scale: this.outgoing.next(scale), pivot };\n    }\n\n    /*\n     * Updating the previous distance regardless of emit prevents sudden changes\n     * when the user exits the deadzone circle.\n     */\n    this.previous = distance;\n\n    return rv;\n  }\n}\n\nmodule.exports = Pull;\n\n","/*\n * Contains the Rotate class.\n */\n\n'use strict';\n\nconst { Gesture, Point2D, Smoothable } = require('../core');\n\n/**\n * Data returned when a Pivotable is recognized.\n *\n * @typedef {Object} SwivelData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} rotation - In radians, the change in angle since last\n * emit.\n * @property {westures-core.Point2D} pivot - The pivot point.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Pivotable is a single input rotating around a fixed point. The fixed point\n * is determined by the input's location at its 'start' phase.\n *\n * @extends westures.Gesture\n * @see {ReturnTypes.SwivelData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n * @param {number} [options.deadzoneRadius=15] - The radius in pixels around the\n * start point in which to do nothing.\n * @param {Element} [options.dynamicPivot=false] - Normally the center point of\n * the gesture's element is used as the pivot. If this option is set, the\n * initial contact point with the element is used as the pivot instead.\n */\nclass Pivotable extends Gesture {\n  constructor(type = 'pivotable', element, handler, options = {}) {\n    super(type, element, handler, { ...Pivotable.DEFAULTS, ...options });\n\n    /**\n     * The pivot point of the pivotable.\n     *\n     * @type {westures-core.Point2D}\n     */\n    this.pivot = null;\n\n    /**\n     * The previous data.\n     *\n     * @type {number}\n     */\n    this.previous = 0;\n\n    /**\n     * The outgoing data.\n     *\n     * @type {westures-core.Smoothable}\n     */\n    this.outgoing = new Smoothable(options);\n  }\n\n  /**\n   * Determine the center point of the given element's bounding client\n   * rectangle.\n   *\n   * @static\n   *\n   * @param {Element} element - The DOM element to analyze.\n   * @return {westures-core.Point2D} - The center of the element's bounding\n   * client rectangle.\n   */\n  static getClientCenter(element) {\n    const rect = element.getBoundingClientRect();\n    return new Point2D(\n      rect.left + (rect.width / 2),\n      rect.top + (rect.height / 2),\n    );\n  }\n\n  /**\n   * Updates the previous data. It will be called during the 'start' and 'end'\n   * phases, and should also be called during the 'move' phase implemented by\n   * the subclass.\n   *\n   * @abstract\n   * @param {State} state - the current input state.\n   */\n  updatePrevious() {\n    throw 'Gestures which extend Pivotable must implement updatePrevious()';\n  }\n\n  /**\n   * Restart the given progress object using the given input object.\n   *\n   * @param {State} state - current input state.\n   */\n  restart(state) {\n    if (this.options.dynamicPivot) {\n      this.pivot = state.centroid;\n      this.previous = 0;\n    } else {\n      this.pivot = Pivotable.getClientCenter(this.element);\n      this.updatePrevious(state);\n    }\n    this.outgoing.restart();\n  }\n\n  start(state) {\n    this.restart(state);\n  }\n\n  end(state) {\n    if (state.active.length > 0) {\n      this.restart(state);\n    } else {\n      this.outgoing.restart();\n    }\n  }\n\n  cancel() {\n    this.outgoing.restart();\n  }\n}\n\nPivotable.DEFAULTS = Object.freeze({\n  deadzoneRadius: 15,\n  dynamicPivot:   false,\n});\n\nmodule.exports = Pivotable;\n","/*\n * Contains the Rotate class.\n */\n\n'use strict';\n\nconst { angularDifference, Gesture, Smoothable } = require('../core');\n\n/**\n * Data returned when a Rotate is recognized.\n *\n * @typedef {Object} RotateData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} rotation - In radians, the change in angle since last\n * emit.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Rotate is defined as two inputs moving with a changing angle between them.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.RotateData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=2] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n */\nclass Rotate extends Gesture {\n  constructor(element, handler, options = {}) {\n    options = { ...Rotate.DEFAULTS, ...options };\n    super('rotate', element, handler, options);\n\n    /**\n     * Track the previous angles for each input.\n     *\n     * @type {number[]}\n     */\n    this.previousAngles = [];\n\n    /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */\n    this.outgoing = new Smoothable(options);\n  }\n\n  /**\n   * Restart the gesture for a new number of inputs.\n   *\n   * @param {State} state - current input state.\n   */\n  restart(state) {\n    this.previousAngles = state.centroid.anglesTo(state.activePoints);\n    this.outgoing.restart();\n  }\n\n  start(state) {\n    this.restart(state);\n  }\n\n  move(state) {\n    const stagedAngles = state.centroid.anglesTo(state.activePoints);\n    const angle = stagedAngles.reduce((total, current, index) => {\n      return total + angularDifference(current, this.previousAngles[index]);\n    }, 0);\n    this.previousAngles = stagedAngles;\n    const rotation = angle / state.activePoints.length;\n    return { rotation: this.outgoing.next(rotation) };\n  }\n\n  end(state) {\n    this.restart(state);\n  }\n\n  cancel() {\n    this.outgoing.restart();\n  }\n}\n\nRotate.DEFAULTS = Object.freeze({\n  minInputs: 2,\n});\n\nmodule.exports = Rotate;\n\n","/*\n * Contains the Swipe class.\n */\n\n'use strict';\n\nconst { Gesture } = require('../core');\n\nconst PROGRESS_STACK_SIZE = 7;\nconst MS_THRESHOLD = 300;\n\n/**\n * Data returned when a Swipe is recognized.\n *\n * @typedef {Object} SwipeData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} velocity - The velocity of the swipe.\n * @property {number} direction - In radians, the direction of the swipe.\n * @property {westures-core.Point2D} point - The point at which the swipe ended.\n * @property {number} time - The epoch time, in ms, when the swipe ended.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A swipe is defined as input(s) moving in the same direction in an relatively\n * increasing velocity and leaving the screen at some point before it drops\n * below it's escape velocity.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.SwipeData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n */\nclass Swipe extends Gesture {\n  constructor(element, handler, options = {}) {\n    super('swipe', element, handler, options);\n\n    /**\n     * Moves list.\n     *\n     * @type {object[]}\n     */\n    this.moves = [];\n\n    /**\n     * Data to emit when all points have ended.\n     *\n     * @type {ReturnTypes.SwipeData}\n     */\n    this.saved = null;\n  }\n\n  /**\n   * Restart the swipe state for a new numper of inputs.\n   */\n  restart() {\n    this.moves = [];\n    this.saved = null;\n  }\n\n  start() {\n    this.restart();\n  }\n\n  move(state) {\n    this.moves.push({\n      time:  Date.now(),\n      point: state.centroid,\n    });\n\n    if (this.moves.length > PROGRESS_STACK_SIZE) {\n      this.moves.splice(0, this.moves.length - PROGRESS_STACK_SIZE);\n    }\n  }\n\n  end(state) {\n    const result = this.getResult();\n    this.moves = [];\n\n    if (state.active.length > 0) {\n      this.saved = result;\n      return null;\n    }\n\n    this.saved = null;\n    return Swipe.validate(result);\n  }\n\n  cancel() {\n    this.restart();\n  }\n\n  /**\n   * Get the swipe result.\n   *\n   * @returns {?ReturnTypes.SwipeData}\n   */\n  getResult() {\n    if (this.moves.length < PROGRESS_STACK_SIZE) {\n      return this.saved;\n    }\n    const vlim = PROGRESS_STACK_SIZE - 1;\n    const { point, time } = this.moves[vlim];\n    const velocity = Swipe.calc_velocity(this.moves, vlim);\n    const direction = Swipe.calc_angle(this.moves, vlim);\n    const centroid = point;\n    return { point, velocity, direction, time, centroid };\n  }\n\n  /**\n   * Validates that an emit should occur with the given data.\n   *\n   * @static\n   * @param {?ReturnTypes.SwipeData} data\n   * @returns {?ReturnTypes.SwipeData}\n   */\n  static validate(data) {\n    if (data == null) return null;\n    return (Date.now() - data.time > MS_THRESHOLD) ? null : data;\n  }\n\n  /**\n   * Calculates the angle of movement along a series of moves.\n   *\n   * @static\n   * @see {@link https://en.wikipedia.org/wiki/Mean_of_circular_quantities}\n   *\n   * @param {{time: number, point: westures-core.Point2D}} moves - The moves\n   * list to process.\n   * @param {number} vlim - The number of moves to process.\n   *\n   * @return {number} The angle of the movement.\n   */\n  static calc_angle(moves, vlim) {\n    const point = moves[vlim].point;\n    let sin = 0;\n    let cos = 0;\n    for (let i = 0; i < vlim; ++i) {\n      const angle = moves[i].point.angleTo(point);\n      sin += Math.sin(angle);\n      cos += Math.cos(angle);\n    }\n    sin /= vlim;\n    cos /= vlim;\n    return Math.atan2(sin, cos);\n  }\n\n  /**\n   * Local helper function for calculating the velocity between two timestamped\n   * points.\n   *\n   * @static\n   * @param {object} start\n   * @param {westures-core.Point2D} start.point\n   * @param {number} start.time\n   * @param {object} end\n   * @param {westures-core.Point2D} end.point\n   * @param {number} end.time\n   *\n   * @return {number} velocity from start to end point.\n   */\n  static velocity(start, end) {\n    const distance = end.point.distanceTo(start.point);\n    const time = end.time - start.time + 1;\n    return distance / time;\n  }\n\n  /**\n   * Calculates the veloctiy of movement through a series of moves.\n   *\n   * @static\n   * @param {{time: number, point: westures-core.Point2D}} moves - The moves\n   * list to process.\n   * @param {number} vlim - The number of moves to process.\n   *\n   * @return {number} The velocity of the moves.\n   */\n  static calc_velocity(moves, vlim) {\n    let max = 0;\n    for (let i = 0; i < vlim; ++i) {\n      const current = Swipe.velocity(moves[i], moves[i + 1]);\n      if (current > max) max = current;\n    }\n    return max;\n  }\n}\n\nmodule.exports = Swipe;\n\n","/*\n * Contains the Rotate class.\n */\n\n'use strict';\n\nconst { angularDifference, Smoothable } = require('../core');\nconst Pivotable = require('./Pivotable.js');\n\n/**\n * Data returned when a Swivel is recognized.\n *\n * @typedef {Object} SwivelData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} rotation - In radians, the change in angle since last\n * emit.\n * @property {westures-core.Point2D} pivot - The pivot point.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Swivel is a single input rotating around a fixed point. The fixed point is\n * determined by the input's location at its 'start' phase.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.SwivelData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {boolean} [options.applySmoothing=true] - Whether to apply inertial\n * smoothing for systems with coarse pointers.\n * @param {number} [options.deadzoneRadius=15] - The radius in pixels around the\n * start point in which to do nothing.\n * @param {Element} [options.dynamicPivot=false] - Normally the center point of\n * the gesture's element is used as the pivot. If this option is set, the\n * initial contact point with the element is used as the pivot instead.\n */\nclass Swivel extends Pivotable {\n  constructor(element, handler, options = {}) {\n    super('swivel', element, handler, options);\n\n    /*\n     * The outgoing data, with optional inertial smoothing.\n     *\n     * @override\n     * @type {westures-core.Smoothable<number>}\n     */\n    this.outgoing = new Smoothable(options);\n  }\n\n  updatePrevious(state) {\n    this.previous = this.pivot.angleTo(state.centroid);\n  }\n\n  move(state) {\n    const pivot = this.pivot;\n    const angle = pivot.angleTo(state.centroid);\n    const rotation = angularDifference(angle, this.previous);\n\n    let rv = null;\n    if (pivot.distanceTo(state.centroid) > this.options.deadzoneRadius) {\n      rv = { rotation: this.outgoing.next(rotation), pivot };\n    }\n\n    /*\n     * Updating the previous angle regardless of emit prevents sudden flips when\n     * the user exits the deadzone circle.\n     */\n    this.previous = angle;\n\n    return rv;\n  }\n}\n\nmodule.exports = Swivel;\n\n","/*\n * Contains the Tap class.\n */\n\n'use strict';\n\nconst { Gesture, Point2D } = require('../core');\n\n/**\n * Data returned when a Tap is recognized.\n *\n * @typedef {Object} TapData\n * @mixes ReturnTypes.BaseData\n *\n * @property {number} x - x coordinate of tap point.\n * @property {number} y - y coordinate of tap point.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Tap is defined as a touchstart to touchend event in quick succession.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.TapData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {number} [options.minDelay=0] - The minimum delay between a touchstart\n * and touchend can be configured in milliseconds.\n * @param {number} [options.maxDelay=300] - The maximum delay between a\n * touchstart and touchend can be configured in milliseconds.\n * @param {number} [options.maxRetain=300] - The maximum time after a tap ends\n * before it is discarded can be configured in milliseconds. Useful for\n * multi-tap gestures, to allow things like slow \"double clicks\".\n * @param {number} [options.numTaps=1] - Number of taps to require.\n * @param {number} [options.tolerance=10] - The tolerance in pixels an input can\n * move before it will no longer be considered part of a tap.\n */\nclass Tap extends Gesture {\n  constructor(element, handler, options = {}) {\n    super('tap', element, handler, { ...Tap.DEFAULTS, ...options });\n\n    /**\n     * An array of inputs that have ended recently.\n     *\n     * @type {Input[]}\n     */\n    this.taps = [];\n  }\n\n  end(state) {\n    const now = Date.now();\n    const { minDelay, maxDelay, maxRetain, numTaps, tolerance } = this.options;\n\n    // Save the recently ended inputs as taps.\n    this.taps = this.taps.concat(state.getInputsInPhase('end'))\n      .filter(input => {\n        const elapsed = input.elapsedTime;\n        const tdiff = now - input.current.time;\n        return (\n          elapsed <= maxDelay\n          && elapsed >= minDelay\n          && tdiff <= maxRetain\n        );\n      });\n\n    // Validate the list of taps.\n    if (this.taps.length !== numTaps ||\n      this.taps.some(i => i.totalDistance() > tolerance)) {\n      return null;\n    }\n\n    const centroid = Point2D.centroid(this.taps.map(i => i.current.point));\n    this.taps = []; // Critical! Used taps need to be cleared!\n    return { centroid, ...centroid };\n  }\n}\n\nTap.DEFAULTS = Object.freeze({\n  minDelay:  0,\n  maxDelay:  300,\n  maxRetain: 300,\n  numTaps:   1,\n  tolerance: 10,\n});\n\nmodule.exports = Tap;\n\n","/*\n * Contains the Track class.\n */\n\n'use strict';\n\nconst { Gesture } = require('../core');\n\n/**\n * Data returned when a Track is recognized.\n *\n * @typedef {Object} TrackData\n * @mixes ReturnTypes.BaseData\n *\n * @property {westures-core.Point2D[]} active - Points currently in 'start' or\n *    'move' phase.\n *\n * @memberof ReturnTypes\n */\n\n/**\n * A Track gesture forwards a list of active points and their centroid on each\n * of the selected phases.\n *\n * @extends westures-core.Gesture\n * @see {ReturnTypes.TrackData}\n * @memberof westures\n *\n * @param {Element} element - The element to which to associate the gesture.\n * @param {Function} handler - The function handler to execute when a gesture\n * is recognized on the associated element.\n * @param {object} [options] - Gesture customization options.\n * @param {westures-core.STATE_KEYS[]} [options.enableKeys=[]] - List of keys\n * which will enable the gesture. The gesture will not be recognized unless one\n * of these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the enable key is always down.\n * @param {westures-core.STATE_KEYS[]} [options.disableKeys=[]] - List of keys\n * which will disable the gesture. The gesture will not be recognized if one of\n * these keys is pressed while the interaction occurs. If not specified or an\n * empty list, the gesture is treated as though the disable key is never down.\n * @param {number} [options.minInputs=1] - The minimum number of pointers that\n * must be active for the gesture to be recognized. Uses >=.\n * @param {number} [options.maxInputs=Number.MAX_VALUE] - The maximum number of\n * pointers that may be active for the gesture to be recognized. Uses <=.\n * @param {string[]} [options.phases=[]] Phases to recognize. Entries can be any\n * or all of 'start', 'move', 'end', and 'cancel'.\n */\nclass Track extends Gesture {\n  constructor(element, handler, options = {}) {\n    super('track', element, handler, { ...Track.DEFAULTS, ...options });\n  }\n\n  /**\n   * Filters out the state's data, down to what should be emitted.\n\n   * @param {State} state - current input state.\n   * @return {ReturnTypes.TrackData}\n   */\n  data({ activePoints }) {\n    return { active: activePoints };\n  }\n\n  tracks(phase) {\n    return this.options.phases.includes(phase);\n  }\n\n  start(state) {\n    return this.tracks('start') ? this.data(state) : null;\n  }\n\n  move(state) {\n    return this.tracks('move') ? this.data(state) : null;\n  }\n\n  end(state) {\n    return this.tracks('end') ? this.data(state) : null;\n  }\n\n  cancel(state) {\n    return this.tracks('cancel') ? this.data(state) : null;\n  }\n}\n\nTrack.DEFAULTS = Object.freeze({\n  phases: Object.freeze([]),\n});\n\nmodule.exports = Track;\n\n","'use strict';\n\nconst ClientElement = require('./ClientElement.js');\nconst ClientImage = require('./ClientImage.js');\nconst ClientItem = require('./ClientItem.js');\nconst ShadowView = require('./ShadowView.js');\nconst { removeById } = require('../shared.js');\n\nconst REQUIRED_DATA = Object.freeze(['viewId', 'items', 'views']);\n\n/**\n * The ClientModel is a client-side copy of those aspects of the model that are\n * necessary for rendering the view for the user.\n *\n * @memberof module:client\n */\nclass ClientModel {\n  constructor(root) {\n    /**\n     * Root element where WAMS canvas and HTML elements are located.\n     *\n     * @type {Element}\n     */\n    // eslint-disable-next-line\n    this.rootElement = root;\n\n    /**\n     * All the items in the model, which may all need rendering at some point.\n     * Kept up to date via the ClientController.\n     *\n     * @type {Map.<module:client.ClientItem>}\n     */\n    this.items = new Map();\n\n    /**\n     * An ordered list of the items, so that the render order can accurately\n     * match the order on the server, and be adjusted likewise.\n     *\n     * @type {module:client.ClientItem[]}\n     */\n    this.itemOrder = [];\n\n    /**\n     * The shadows are all the other views that are currently active. They are\n     * tracked in full and an outline for each is rendered.\n     *\n     * @type {Map.<module:client.ShadowView>}\n     */\n    this.shadows = new Map();\n\n    /**\n     * The view data for this user.\n     *\n     * @type {module:client.ClientView}\n     */\n    this.view = null;\n  }\n\n  /**\n   * Generate and store an item of the given type.\n   *\n   * @param {Item} item\n   */\n  _addItem(item) {\n    this.itemOrder.push(item);\n    this.items.set(item.id, item);\n  }\n\n  /**\n   * Generate and store an Element with the given values.\n   *\n   * @param {module:shared.WamsElement} values - State of the new Element\n   */\n  addElement(values) {\n    this._addItem(new ClientElement(values));\n  }\n\n  /**\n   * Generate and store an Image with the given values.\n   *\n   * @param {module:shared.WamsImage} values - State of the new image.\n   */\n  addImage(values) {\n    this._addItem(new ClientImage(values));\n  }\n\n  /**\n   * Generate and store an Item with the given values.\n   *\n   * @param {module:shared.Item} values - State of the new Item.\n   */\n  addItem(values) {\n    this._addItem(new ClientItem(values));\n  }\n\n  /**\n   * Generate and store a 'shadow view' to track another active view.\n   *\n   * @param {module:shared.View} values - State of the new View.\n   */\n  addShadow(values) {\n    const shadow = new ShadowView(values);\n    this.shadows.set(shadow.id, shadow);\n  }\n\n  /**\n   * Retrieve an item by ID. Throw an Error if the item isn't found.\n   *\n   * @param {number} id - ID of the item to retrieve.\n   */\n  getItem(id) {\n    const item = this.items.get(id);\n    if (item === undefined) {\n      throw Error(`Unable to find item with id: ${id}`);\n    }\n    return item;\n  }\n\n  /**\n   * Retrieve a Shadow by ID. Throw an Error if the shadow isn't found.\n   *\n   * @param {number} id - ID of the shadow to retrieve.\n   */\n  getShadow(id) {\n    const shadow = this.shadows.get(id);\n    if (shadow === undefined) {\n      throw Error(`Unable to find shadow with id: ${id}`);\n    }\n    return shadow;\n  }\n\n  /**\n   * Removes the given item.\n   *\n   * @param {module:shared.Item} item - The Item to remove.\n   *\n   * @return {boolean} true if removal was successful, false otherwise.\n   */\n  removeItem(data) {\n    const item = this.getItem(data.id);\n    if (Object.prototype.hasOwnProperty.call(item, 'tagname')) {\n      this.rootElement.removeChild(item.element);\n    }\n    this.items.delete(data.id);\n    return removeById(this.itemOrder, data);\n  }\n\n  /**\n   * Removes the given 'shadow' view.\n   *\n   * @param {module:shared.View} shadow - The 'shadow' view to remove.\n   *\n   * @return {boolean} true if removal was successful, false otherwise.\n   */\n  removeShadow(shadow) {\n    return this.shadows.delete(shadow.id);\n  }\n\n  /**\n   * Set up the internal copy of the model according to the data provided by the\n   * server.\n   */\n  initialize(data) {\n    REQUIRED_DATA.forEach((d) => {\n      if (!Object.prototype.hasOwnProperty.call(data, d)) throw Error(`initialize requires: ${d}`);\n    });\n    data.views.forEach((v) => {\n      if (v.id !== this.view.id) {\n        this.addShadow(v);\n      }\n    });\n    data.items.reverse().forEach((o) => {\n      if (Object.prototype.hasOwnProperty.call(o, 'src')) {\n        this.addImage(o);\n      } else if (Object.prototype.hasOwnProperty.call(o, 'tagname')) {\n        this.addElement(o);\n      } else {\n        this.addItem(o);\n      }\n    });\n    this.view.config.shadows = data.settings.shadows;\n    this.view.config.status = data.settings.status;\n    this.view.config.backgroundImage = data.settings.backgroundImage;\n  }\n\n  /**\n   * Bring item to top, so that it's above others.\n   *\n   */\n  bringItemToTop(id) {\n    const index = this.itemOrder.findIndex((el) => el.id === id);\n    this.itemOrder.push(...this.itemOrder.splice(index, 1));\n  }\n\n  /**\n   * Set the attributes for the appropriate item.\n   *\n   * @param {object} data\n   */\n  setAttributes(data) {\n    const item = this.getItem(data.id);\n    item.setAttributes(data.attributes);\n  }\n\n  setParent(data) {\n    const item = this.getItem(data.id);\n    item.setParent(data.parent);\n  }\n\n  /**\n   * Set the image for the appropriate item.\n   *\n   * @param {object} data\n   */\n  setImage(data) {\n    const item = this.getItem(data.id);\n    item.setImage(data.src);\n  }\n\n  /**\n   * Set the canvas rendering sequence for the appropriate item.\n   *\n   * @param {object} data\n   */\n  setRender(data) {\n    const item = this.getItem(data.id);\n    item.setRender(data.sequence);\n  }\n\n  /**\n   * Update an item.\n   *\n   * @param {module:shared.Item} data - data from the server, has an 'id' field\n   * with which the item will be located.\n   */\n  updateItem(data) {\n    const item = this.getItem(data.id);\n    Object.assign(item, data);\n    if (!item.lockZ) {\n      this.bringItemToTop(data.id);\n    }\n  }\n\n  /**\n   * Update a 'shadow' view.\n   *\n   * @param {module:shared.View} data - data from the server, has an 'id' field\n   * with which the view will be located.\n   */\n  updateShadow(data) {\n    const shadow = this.getShadow(data.id);\n    Object.assign(shadow, data);\n  }\n\n  /**\n   * Update the view.\n   *\n   * @param {module:shared.View} data - data from the server, specficially\n   * pertaining to this client's view.\n   */\n  updateView(data) {\n    Object.assign(this.view, data);\n  }\n\n  /**\n   * Dispatch custom DOM event to trigger user defined action\n   *\n   * @param {object} event - event data, contains `action` and `payload`\n   */\n  dispatch(event) {\n    document.dispatchEvent(new CustomEvent(event.action, { detail: event.payload }));\n  }\n}\n\nmodule.exports = ClientModel;\n","'use strict';\n\nconst { Point2D, WamsElement } = require('../shared.js');\n\n/**\n * The ClientElement class exposes the draw() funcitonality of wams elements.\n *\n * @extends module:shared.WamsElement\n * @memberof module:client\n *\n * @param {module:shared.WamsElement} data - The data from the server describing this item.\n */\nclass ClientElement extends WamsElement {\n  constructor(data) {\n    super(data);\n\n    /**\n     * Root element where WAMS canvas and HTML elements are located.\n     *\n     * @type {Element}\n     */\n    const root = document.querySelector('#root');\n\n    /**\n     * The DOM element.\n     *\n     * @type {Element}\n     */\n    this.element = document.createElement(data.tagname);\n    this.element.classList.add('wams-element');\n    this.element.width = this.width;\n    this.element.height = this.height;\n    this.element.style.width = `${this.width}px`;\n    this.element.style.height = `${this.height}px`;\n    root.appendChild(this.element);\n    if (Object.prototype.hasOwnProperty.call(data, 'attributes')) {\n      this.setAttributes(data.attributes);\n    }\n  }\n\n  /**\n   * Render the element. Really just updates the rotation and transformation\n   * matrix.\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {module:client.ClientView} view\n   */\n  draw(context, view) {\n    const tl = new Point2D(this.x - view.x, this.y - view.y).divideBy(this.scale).rotate(this.rotation);\n    const rotate = `rotate(${view.rotation - this.rotation}rad) `;\n    const scale = `scale(${this.scale * view.scale}) `;\n    const translate = `translate(${tl.x}px, ${tl.y}px) `;\n    this.element.style.transform = scale + rotate + translate;\n  }\n\n  /**\n   * Sets attributes for the element.\n   *\n   * @param {object} attributes\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n    Object.entries(attributes).forEach(([k, v]) => {\n      this.element[k] = v;\n    });\n  }\n\n  /**\n   * Set parent ServerGroup for the element.\n   *\n   * @param {module:server:ServerGroup} parent server group for this element\n   */\n  setParent(parent) {\n    this.parent = parent;\n  }\n\n  /**\n   * Removes attributes from the element.\n   *\n   * @param {string[]} attributes\n   */\n  removeAttributes(attributes) {\n    attributes.forEach((attr) => {\n      delete this.attributes[attr];\n      this.element[attr] = null;\n    });\n  }\n}\n\nmodule.exports = ClientElement;\n","'use strict';\n\nconst { WamsImage, Message } = require('../shared.js');\n\n/**\n * Abstraction of the requisite logic for generating an image object which will\n * load the appropriate image and report when it has finished loading the image\n * so that it can be displayed.\n *\n * @inner\n * @memberof module:client.ClientImage\n *\n * @param {string} src - Image source path.\n *\n * @returns {?Image}\n */\nfunction createImage(src) {\n  if (src) {\n    const img = new Image();\n    img.src = src;\n    img.loaded = false;\n    img.addEventListener(\n      'load',\n      () => {\n        img.loaded = true;\n        document.dispatchEvent(new CustomEvent(Message.IMG_LOAD));\n      },\n      { once: true }\n    );\n    return img;\n  }\n  return {};\n}\n\n/**\n * The ClientImage class exposes the draw() funcitonality of wams items.\n *\n * @extends module:shared.WamsImage\n * @memberof module:client\n *\n * @param {module:shared.Item} data - The data from the server describing this item.\n */\nclass ClientImage extends WamsImage {\n  constructor(data) {\n    super(data);\n\n    /**\n     * The image to render.\n     *\n     * @type {Image}\n     */\n    this.image = {};\n    if (data.src) this.setImage(data.src);\n  }\n\n  /**\n   * Render the image onto the given context.\n   *\n   * @param {CanvasRenderingContext2D} context\n   */\n  draw(context) {\n    context.save();\n    context.translate(this.x, this.y);\n    context.rotate(-this.rotation);\n    context.scale(this.scale, this.scale);\n    if (this.image.loaded) {\n      context.drawImage(this.image, 0, 0, this.width, this.height);\n    } else {\n      context.fillStyle = 'darkgrey';\n      context.fillRect(0, 0, this.width, this.height);\n    }\n    context.restore();\n  }\n\n  /**\n   * Set parent ServerGroup for the image.\n   *\n   * @param {module:server:ServerGroup} parent server group for this image\n   */\n  setParent(parent) {\n    this.parent = parent;\n  }\n\n  /**\n   * Sets the image path and loads the image.\n   *\n   * @param {string} path - The image's source path\n   */\n  setImage(path) {\n    this.src = path;\n    this.image = createImage(path);\n  }\n}\n\nmodule.exports = ClientImage;\n","'use strict';\n\nconst { Item } = require('../shared.js');\nconst { CanvasSequence } = require('canvas-sequencer');\n\n/**\n * The ClientItem class exposes the draw() funcitonality of wams items.\n *\n * @extends module:shared.Item\n * @memberof module:client\n *\n * @param {module:shared.Item} data - The data from the server describing this item.\n */\nclass ClientItem extends Item {\n  constructor(data) {\n    super(data);\n\n    /**\n     * The actual render.\n     *\n     * @type {CanvasSequence}\n     */\n    this.render = null;\n    if (data.sequence) this.setRender(data.sequence);\n  }\n\n  /**\n   * Render the item onto the given context.\n   *\n   * @param {CanvasRenderingContext2D} context\n   */\n  draw(context) {\n    if (this.render) {\n      context.save();\n      context.translate(this.x, this.y);\n      context.rotate(-this.rotation);\n      context.scale(this.scale, this.scale);\n      this.render.execute(context);\n      context.restore();\n    }\n  }\n\n  /**\n   * Set parent ServerGroup for the item.\n   *\n   * @param {module:server:ServerGroup} parent server group for this item\n   */\n  setParent(parent) {\n    this.parent = parent;\n  }\n\n  /**\n   * Set the item's canvas rendering sequence.\n   *\n   * @param {CanvasSequence} sequence - Raw, unrevived CanvasSequence.\n   */\n  setRender(sequence) {\n    this.render = new CanvasSequence(sequence);\n  }\n}\n\nmodule.exports = ClientItem;\n","/*\n * Access point for npm.\n */\n\n'use strict';\n\nconst CanvasSequence = require('./src/CanvasSequence.js');\nconst CanvasBlueprint = require('./src/CanvasBlueprint.js');\n\nmodule.exports = { CanvasSequence, CanvasBlueprint };\n\n","/*\n * Author: Michael van der Kamp\n * Date: July/August, 2018\n *\n * This file provides the definition of the CanvasSequence class.\n */\n\n'use strict';\n\nconst CanvasAtom = require('./CanvasAtom.js');\n\nconst locals = Object.freeze({\n  METHODS: [\n    'addHitRegion',\n    'arc',\n    'arcTo',\n    'beginPath',\n    'bezierCurveTo',\n    'clearHitRegions',\n    'clearRect',\n    'clip',\n    'closePath',\n    'drawFocusIfNeeded',\n    'drawImage',\n    'ellipse',\n    'fill',\n    'fillRect',\n    'fillText',\n    'lineTo',\n    'moveTo',\n    'putImageData',\n    'quadraticCurveTo',\n    'rect',\n    'removeHitRegion',\n    'resetTransform',\n    'restore',\n    'rotate',\n    'save',\n    'scale',\n    'scrollPathIntoView',\n    'setLineDash',\n    'setTransform',\n    'stroke',\n    'strokeRect',\n    'strokeText',\n    'transform',\n    'translate',\n  ],\n\n  PROPERTIES: [\n    'direction',\n    'fillStyle',\n    'filter',\n    'font',\n    'globalAlpha',\n    'globalCompositeOperation',\n    'imageSmoothingEnabled',\n    'imageSmoothingQuality',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'shadowBlur',\n    'shadowColor',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'strokeStyle',\n    'textAlign',\n    'textBaseline',\n  ],\n});\n\n// Mark properties as intended for internal use.\nconst symbols = Object.freeze({\n  sequence: Symbol.for('sequence'),\n  push:     Symbol.for('push'),\n  fromJSON: Symbol.for('fromJSON'),\n});\n\n/**\n * A CanvasSequence is a linear collection of CanvasAtoms, capable of being\n * executed on a CanvasRenderingContext2D.\n *\n * @param {CanvasSequence} [data=null] - An unrevived (i.e. freshly transmitted)\n * CanvasSequence. If present, the constructor revives the sequence. Note that\n * an already revived CanvasSequence cannot be used as the argument here.\n */\nclass CanvasSequence {\n  constructor(data = null) {\n    /**\n     * The CanvasAtoms that form the sequence.\n     *\n     * @private\n     * @type {CanvasAtom[]}\n     */\n    this[symbols.sequence] = [];\n\n    // If data is present, assume it is a CanvasSequence that needs reviving.\n    if (data) this[symbols.fromJSON](data);\n  }\n\n  /**\n   * Revive the sequence from transmitted JSON data.\n   *\n   * @private\n   * @param {CanvasSequence} [data={}]\n   */\n  [symbols.fromJSON](data = { sequence: [] }) {\n    data.sequence.forEach(({ type, inst, args }) => {\n      this[symbols.push](type, inst, args);\n    });\n  }\n\n  /**\n   * Push a new CanvasAtom onto the end of the sequence.\n   *\n   * @private\n   * @param {string} type - The type of CanvasAtom to push.\n   * @param {string} inst - The canvas context instruction.\n   * @param {*[]} args - The arguments to the canvas context instruction.\n   */\n  [symbols.push](type, inst, args) {\n    this[symbols.sequence].push(new CanvasAtom(type, inst, args));\n  }\n\n  /**\n   * Execute the sequence on the given context.\n   *\n   * @param {CanvasRenderingContext2D} context\n   */\n  execute(context) {\n    context.save();\n    this[symbols.sequence].forEach(a => a.execute(context));\n    context.restore();\n  }\n\n  /**\n   * Export a JSON serialized version of the sequence, ready for transmission.\n   *\n   * @return {CanvasSequence} In JSON serialized form.\n   */\n  toJSON() {\n    return { sequence: this[symbols.sequence] };\n  }\n}\n\nlocals.METHODS.forEach(m => {\n  Object.defineProperty(CanvasSequence.prototype, m, {\n    value: function pushMethodCall(...args) {\n      this[symbols.push](CanvasAtom.METHOD, m, args);\n    },\n    writable:     false,\n    enumerable:   true,\n    configurable: false,\n  });\n});\n\nlocals.PROPERTIES.forEach(p => {\n  Object.defineProperty(CanvasSequence.prototype, p, {\n    get()  { throw `Invalid canvas sequencer interaction, cannot get ${p}.`; },\n    set(v) { this[symbols.push](CanvasAtom.PROPERTY, p, [v]); },\n    enumerable:   true,\n    configurable: false,\n  });\n});\n\nmodule.exports = CanvasSequence;\n\n","/*\n * Author: Michael van der Kamp\n * Date: July/August, 2018\n *\n * This file defines the low level 'CanvasAtom' for use by a CanvasSequence.\n *\n * A CanvasAtom is a unit of execution in a CanvasSequence. It comes in two\n * flavours: one for describing a method call, one for describing a property\n * assignment.\n */\n\n'use strict';\n\n/**\n * The types of CanvasAtoms that are available.\n *\n * @enum {string}\n * @readonly\n * @lends CanvasAtom\n */\nconst TYPES = {\n  /** @const */ METHOD:   'method',\n  /** @const */ PROPERTY: 'property',\n};\n\n/**\n * Internal common constructor definition for Canvas Atoms.\n *\n * @param {string} inst - The canvas context instruction.\n * @param {*[]} args - The arguments to the instruction.\n */\nclass Atom {\n  constructor(inst, args) {\n    /**\n     * The canvas context instruction.\n     *\n     * @private\n     * @type {string}\n     */\n    this.inst = inst;\n\n    /**\n     * The arguments to the instruction.\n     *\n     * @private\n     * @type {*[]}\n     */\n    this.args = args;\n  }\n}\n\n/**\n * A MethodCanvasAtom is used for canvas context methods. The arguments will be\n * treated as an actual array, all of which will be passed to the method when\n * the atom is executed.\n *\n * @extends Atom\n */\nclass MethodCanvasAtom extends Atom {\n  constructor(inst, args) {\n    super(inst, args);\n\n    /**\n     * The type of atom.\n     *\n     * @private\n     * @type {string}\n     */\n    this.type = TYPES.METHOD;\n  }\n\n  /**\n   * Execute the atom on the given context.\n   *\n   * @param {CanvasRenderingContext2D} context\n   */\n  execute(context) {\n    context[this.inst](...this.args);\n  }\n}\n\n/**\n * A PropertyCanvasAtom is used for canvas context properties (a.k.a. fields).\n * Only the first argument will be used, and will be the value assigned to the\n * field.\n *\n * @extends Atom\n */\nclass PropertyCanvasAtom extends Atom {\n  constructor(inst, args) {\n    super(inst, args);\n    this.type = TYPES.PROPERTY;\n  }\n\n  /**\n   * Execute the atom on the given context.\n   *\n   * @param {CanvasRenderingContext2D} context\n   */\n  execute(context) {\n    context[this.inst] = this.args[0];\n  }\n}\n\n/*\n * This object is for demultiplexing types in the CanvasAtom constructor.\n * Defined outside the constructor so it doesn't need to be redefined every\n * time a new atom is constructed. Defined outside the class so that it is not\n * externally exposed.\n */\nconst atomOf = {\n  [TYPES.METHOD]:   MethodCanvasAtom,\n  [TYPES.PROPERTY]: PropertyCanvasAtom,\n};\n\n/**\n * The exposed CanvasAtom class. Results in the instantiation of either a\n * MethodCanvasAtom or a PropertyCanvasAtom, depending on the given type.\n *\n * @param {string} type - Either CanvasAtom.METHOD or CanvasAtom.PROPERTY.\n * @param {string} inst - The canvas context instruction.\n * @param {*[]} args - The arguments to the instruction.\n */\nclass CanvasAtom {\n  constructor(type, inst, args) {\n    return new atomOf[type](inst, args);\n  }\n}\n\n/*\n * Define the types once locally, but make them available externally as\n * immutable properties on the class.\n */\nObject.entries(TYPES).forEach(([p, v]) => {\n  Object.defineProperty(CanvasAtom, p, {\n    value:        v,\n    configurable: false,\n    enumerable:   true,\n    writable:     false,\n  });\n});\n\nmodule.exports = CanvasAtom;\n\n","/*\n * Author: Michael van der Kamp\n * Date: July/August, 2018\n *\n * Thie file provides the definition of the CanvasBlueprint class.\n *\n * A CanvasBlueprint is similar to a plain CanvasSequence, except that it\n * accepts tag strings as arguments, and before it can be executed it  needs to\n * be 'built' with an object defining which values should replace the tags.\n */\n\n'use strict';\n\nconst CanvasSequence = require('./CanvasSequence.js');\n\n// Mark properties as intended for internal use.\nconst symbols = Object.freeze({\n  sequence: Symbol.for('sequence'),\n  push:     Symbol.for('push'),\n});\n\n/**\n * Replace tags in the given string with correlated value in values.\n *\n * Rules:\n * - Strings not surrounded by curly braces {} will be returned.\n * - Strings surrounded by curly braces but not corresponding to a property on\n *   'values' will result in a string without the curly braces being returned.\n * - Strings surrounded by curly braces, with the inner string corresponding to\n *   a property on 'values' will result in the corresponding value being\n *   returned.\n *\n * @inner\n * @private\n *\n * @param {string} str\n * @param {object} values\n *\n * @return {string|mixed} Either the original string if no replacement was\n * performed, or the appropriate value.\n */\nfunction replaceTags(str, values) {\n  const tag = str.replace(/^\\{|\\}$/gu, '');\n  if (tag !== str) {\n    return values.hasOwnProperty(tag) ? values[tag] : tag;\n  }\n  return str;\n}\n\n/**\n * A CanvasBlueprint is a rebuildable CanvasSequence. It accepts tagged\n * arguments. When built, tags will be replaced using properties from a provided\n * object.\n *\n * @extends CanvasSequence\n */\nclass CanvasBlueprint extends CanvasSequence {\n  /**\n   * Build the blueprint using the provided values.\n   *\n   * Rules:\n   * - Strings not surrounded by curly braces {} will be returned.\n   * - Strings surrounded by curly braces but not corresponding to a property on\n   *   'values' will result in a string without the curly braces being returned.\n   * - Strings surrounded by curly braces, with the inner string corresponding\n   *   to a property on 'values' will result in the corresponding value being\n   *   returned.\n   *\n   * @param {object} values - The values with which to construct the sequence.\n   *\n   * @return {CanvasSequence} The constructed sequence.\n   */\n  build(values = {}) {\n    const seq = new CanvasSequence();\n    this[symbols.sequence].forEach(({ type, inst, args }) => {\n      const realArgs = args.map(v => {\n        return (typeof v === 'string') ? replaceTags(v, values) : v;\n      });\n      seq[symbols.push](type, inst, realArgs);\n    });\n    return seq;\n  }\n\n  /**\n   * CanvasBlueprints cannot be directly executed!\n   *\n   * @throws TypeError\n   */\n  execute() {\n    throw new TypeError('Cannot execute a blueprint.');\n  }\n}\n\nmodule.exports = CanvasBlueprint;\n\n","/*\n * SOME NOTES ABOUT CANVAS RENDERING:\n *  - Avoid using shadows. They appear to kill the framerate.\n */\n\n'use strict';\n\nconst { colours, View } = require('../shared.js');\n\n// Symbols to mark these methods as intended for internal use only.\nconst symbols = Object.freeze({\n  align: Symbol('align'),\n  style: Symbol('style'),\n  outline: Symbol('outline'),\n  marker: Symbol('marker'),\n});\n\n/**\n * The ShadowView class exposes a simple draw() function which renders a shadowy\n * outline of the view onto the canvas.\n *\n * @extends module:shared.View\n * @memberof module:client\n *\n * @param {module:shared.View} values - server-provided data describing this\n * view.\n */\nclass ShadowView extends View {\n  /**\n   * Render an outline of this view.\n   *\n   * @param {CanvasRenderingContext2D} context - context on which to draw.\n   */\n  draw(context) {\n    /*\n     * WARNING: It is *crucial* that this series of instructions be wrapped in\n     * save() and restore().\n     */\n    context.save();\n    this[symbols.align](context);\n    this[symbols.style](context);\n    this[symbols.outline](context);\n    this[symbols.marker](context);\n    context.restore();\n  }\n\n  /**\n   * Aligns the drawing context so the outline will be rendered in the correct\n   * location with the correct orientation.\n   *\n   * @alias [@@align]\n   * @memberof module:client.ShadowView\n   *\n   * @param {CanvasRenderingContext2D} context - context on which to draw.\n   */\n  [symbols.align](context) {\n    context.translate(this.x, this.y);\n    context.rotate(-this.rotation);\n    context.scale(1 / this.scale, 1 / this.scale);\n  }\n\n  /**\n   * Applies styling to the drawing context.\n   *\n   * @alias [@@style]\n   * @memberof module:client.ShadowView\n   *\n   * @param {CanvasRenderingContext2D} context - context on which to draw.\n   */\n  [symbols.style](context) {\n    context.globalAlpha = 0.5;\n    context.strokeStyle = colours[this.id % colours.length];\n    context.fillStyle = context.strokeStyle;\n    context.lineWidth = 5;\n  }\n\n  /**\n   * Draws an outline of the view.\n   *\n   * @alias [@@outline]\n   * @memberof module:client.ShadowView\n   */\n  [symbols.outline](context) {\n    context.strokeRect(0, 0, this.width, this.height);\n  }\n\n  /**\n   * Draws a small triangle in the upper-left corner of the outline, so that\n   * other views can quickly tell which way this view is oriented.\n   *\n   * @alias [@@marker]\n   * @memberof module:client.ShadowView\n   *\n   * @param {CanvasRenderingContext2D} context - context on which to draw.\n   */\n  [symbols.marker](context) {\n    const base = context.lineWidth / 2;\n    const height = 25;\n\n    context.beginPath();\n    context.moveTo(base, base);\n    context.lineTo(base, height);\n    context.lineTo(height, base);\n    context.lineTo(base, base);\n    context.fill();\n  }\n}\n\nmodule.exports = ShadowView;\n","'use strict';\n\nconst { View } = require('../shared.js');\n\n// Data fields to write for status indicator text.\nconst STATUS_KEYS = Object.freeze(['x', 'y', 'width', 'height', 'rotation', 'scale']);\n\n// Mark these methods as intended only for internal use.\nconst symbols = Object.freeze({\n  align: Symbol('align'),\n  drawBackground: Symbol('dragBackground'),\n  drawItems: Symbol('drawItems'),\n  drawShadows: Symbol('drawShadows'),\n  drawStatus: Symbol('drawStatus'),\n  wipe: Symbol('wipe'),\n});\n\n// Default ClientView configuration.\nconst DEFAULT_CONFIG = Object.freeze({\n  status: false,\n  shadows: false,\n});\n\n/**\n * The ClientView is responsible for rendering the view. To do this, it keeps\n * track of its own position, scale, and orientation, as well as those values\n * for all items and all other views (which will be represented with outlines).\n *\n * @extends module:shared.View\n * @memberof module:client\n *\n * @param {CanvasRenderingContext2D} context - The canvas context in which to\n * render the model.\n */\nclass ClientView extends View {\n  constructor(context) {\n    super(ClientView.DEFAULTS);\n\n    /**\n     * The CanvasRenderingContext2D is required for drawing (rendering) to take\n     * place.\n     *\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = context;\n\n    /**\n     * The model holds the information about items and shadows that need\n     * rendering.\n     *\n     * @type {module:client.ClientModel}\n     */\n    this.model = null;\n\n    /**\n     * Configuration of ClientView that can be\n     * modified in user-defined `window.WAMS_CONFIG`.\n     *\n     * @type {object}\n     */\n    this.config = { ...DEFAULT_CONFIG };\n  }\n\n  /**\n   * Positions the rendering context precisely, taking into account all\n   * transformations, so that rendering can proceed correctly.\n   *\n   * @alias [@@align]\n   * @memberof module:client.ClientView\n   */\n  [symbols.align]() {\n    /*\n     * WARNING: It is crucially important that the instructions below occur\n     * in *precisely* this order!\n     */\n    this.context.scale(this.scale, this.scale);\n    this.context.rotate(this.rotation);\n    this.context.translate(-this.x, -this.y);\n  }\n\n  /**\n   * Renders all the items.\n   *\n   * @alias [@@drawItems]\n   * @memberof module:client.ClientView\n   */\n  [symbols.drawItems]() {\n    this.model.itemOrder.forEach((o) => o.draw(this.context, this));\n  }\n\n  /**\n   * Renders outlines of all the other views.\n   *\n   * @alias [@@drawShadows]\n   * @memberof module:client.ClientView\n   */\n  [symbols.drawShadows]() {\n    this.model.shadows.forEach((v) => v.draw(this.context));\n  }\n\n  /**\n   * Renders text describing the status of the view to the upper left corner of\n   * the view, to assist with debugging.\n   *\n   * @alias [@@drawStatus]\n   * @memberof module:client.ClientView\n   */\n  [symbols.drawStatus]() {\n    const messages = STATUS_KEYS.map((k) => `${k}: ${this[k].toFixed(2)}`).concat([\n      `# of Shadows: ${this.model.shadows.size}`,\n    ]);\n    let ty = 40;\n    const tx = 20;\n\n    this.context.save();\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    this.context.font = '18px Georgia';\n    messages.forEach((m) => {\n      this.context.fillText(m, tx, ty);\n      ty += 20;\n    });\n    this.context.restore();\n  }\n\n  /**\n   * Clears all previous renders, to ensure a clean slate for the upcoming\n   * render.\n   *\n   * @alias [@@wipe]\n   * @memberof module:client.ClientView\n   */\n  [symbols.wipe]() {\n    this.context.clearRect(0, 0, window.innerWidth, window.innerHeight);\n  }\n\n  /**\n   * Fully render the current state of the system.\n   */\n  draw() {\n    this.context.save();\n    this[symbols.wipe]();\n    this[symbols.align]();\n    this[symbols.drawItems]();\n    if (this.config.shadows) this[symbols.drawShadows]();\n    if (this.config.status) this[symbols.drawStatus]();\n    this.context.restore();\n  }\n\n  /**\n   * Fill all available space in the window.\n   */\n  resizeToFillWindow(dpr, iOS) {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    if (!iOS) this.context.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n}\n\nmodule.exports = ClientView;\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$8a0a73e6b73fd0c4$export$6100ba28696e12de","$998eb38f4d082829$export$aafa59e2e03f2942","$998eb38f4d082829$export$68d8715fc104d294","$2820aaddc1388453$export$84d4095e16c6fc19","$81586d39ed578c8f$exports","$7bf7ff34ad415631$export$c169aefb7330cccb","create","$7bf7ff34ad415631$export$47791e8004edd485","keys","forEach","key","$7bf7ff34ad415631$export$c718b5840781f8a7","type","data","$561487b8227635b6$var$withNativeBlob","Blob","prototype","toString","call","$561487b8227635b6$var$withNativeArrayBuffer","ArrayBuffer","$561487b8227635b6$var$isView","obj","isView","buffer","$561487b8227635b6$var$encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","$561487b8227635b6$export$2e2bcd8739ae039","supportsBinary","$884a652736e4e341$var$chars","$884a652736e4e341$var$lookup","Uint8Array","i","length","charCodeAt","$884a652736e4e341$export$2f872c0f2117be69","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","$7c79ed06fd95f9ff$var$withNativeArrayBuffer","$7c79ed06fd95f9ff$var$decodeBase64Packet","binaryType","decoded","$7c79ed06fd95f9ff$var$mapBinary","$7c79ed06fd95f9ff$export$2e2bcd8739ae039","encodedPacket","charAt","substring","packetType","$4dc1a5a6e008a7e7$export$144d64fe58dad441","packets","encodedPackets","Array","count","packet","join","String","$4dc1a5a6e008a7e7$export$d10cc2e7f7566a2d","encodedPayload","decodedPacket","push","$457c1af18044583a$export$4293555f241ae35a","$457c1af18044583a$var$mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","slice","emitReserved","listeners","hasListeners","$24ed6d94f3b59450$export$394f9358f6231289","self","window","Function","$fcbdbaa3cd961e27$export$357523c63a2253b9","attr","reduce","acc","k","hasOwnProperty","$fcbdbaa3cd961e27$var$NATIVE_SET_TIMEOUT","setTimeout","$fcbdbaa3cd961e27$var$NATIVE_CLEAR_TIMEOUT","clearTimeout","$fcbdbaa3cd961e27$export$2f67576668b97183","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","$970e2439289df85f$var$TransportError","Error","constructor","reason","description","context","$970e2439289df85f$export$86495b081fef8e52","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","$b0be4220a43aac53$var$alphabet","$b0be4220a43aac53$var$map","$b0be4220a43aac53$var$seed","$b0be4220a43aac53$var$i","$b0be4220a43aac53$var$prev","$b0be4220a43aac53$export$c564cdbbe6da493","num","encoded","Math","floor","$b0be4220a43aac53$export$5bb64b92cb4135a","now","Date","$204e8548e3057537$export$c564cdbbe6da493","str","encodeURIComponent","$d1e121273de60dfc$var$value","XMLHttpRequest","err","$d1e121273de60dfc$export$5235bbd4a1ef06e","$0e9540b6c40bc56b$export$a2d42eb087c10497","xdomain","concat","$f00a2be7170d46e1$var$empty","$f00a2be7170d46e1$var$hasXHR2","xhr","responseType","$f00a2be7170d46e1$export$7fa6c5b6f8193917","uri","method","async","undefined","xd","xscheme","xs","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","$f00a2be7170d46e1$var$unloadHandler","terminationEvent","$cef15c53d6c0c24e$export$bdd553fddd433dcb","isPromiseAvailable","Promise","resolve","then","$cef15c53d6c0c24e$export$3909fb301d3dc8c9","WebSocket","MozWebSocket","uint8","tmp","extraBytes","parts","len2","$8a0a73e6b73fd0c4$var$encodeChunk","start","end","output","$8a0a73e6b73fd0c4$var$lookup","$8a0a73e6b73fd0c4$var$revLookup","$8a0a73e6b73fd0c4$var$Arr","$8a0a73e6b73fd0c4$var$code","$8a0a73e6b73fd0c4$var$i","$8a0a73e6b73fd0c4$var$len","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","value","c","rt","isNaN","abs","log","LN2","$0934e0939605d48c$var$customInspectSymbol","Symbol","$0934e0939605d48c$var$createBuffer","RangeError","buf","setPrototypeOf","$0934e0939605d48c$var$Buffer","arg","encodingOrOffset","TypeError","$0934e0939605d48c$var$allocUnsafe","$0934e0939605d48c$var$from","$0934e0939605d48c$var$fromString","string","encoding","isEncoding","$0934e0939605d48c$var$byteLength","actual","$0934e0939605d48c$var$fromArrayView","arrayView","$0934e0939605d48c$var$isInstance","copy","$0934e0939605d48c$var$fromArrayBuffer","byteOffset","byteLength","$0934e0939605d48c$var$fromArrayLike","SharedArrayBuffer","valueOf","from","b","$0934e0939605d48c$var$fromObject","isBuffer","$0934e0939605d48c$var$checked","isArray","toPrimitive","$0934e0939605d48c$var$assertSize","size","array","mustMatch","loweredCase","$0934e0939605d48c$var$utf8ToBytes","$0934e0939605d48c$var$base64ToBytes","toLowerCase","$0934e0939605d48c$var$slowToString","$0934e0939605d48c$var$hexSlice","out","$0934e0939605d48c$var$hexSliceLookupTable","$0934e0939605d48c$var$utf8Slice","$0934e0939605d48c$var$asciiSlice","ret","min","fromCharCode","$0934e0939605d48c$var$latin1Slice","$0934e0939605d48c$var$utf16leSlice","res","$0934e0939605d48c$var$swap","$0934e0939605d48c$var$bidirectionalIndexOf","val","dir","$0934e0939605d48c$var$arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","$0934e0939605d48c$var$decodeCodePointsArray","codePoints","$0934e0939605d48c$var$checkOffset","ext","$0934e0939605d48c$var$checkInt","max","$0934e0939605d48c$var$checkIEEE754","$0934e0939605d48c$var$writeFloat","littleEndian","noAssert","$0934e0939605d48c$var$writeDouble","TYPED_ARRAY_SUPPORT","$0934e0939605d48c$var$typedArraySupport","proto","foo","console","error","poolSize","alloc","fill","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","remaining","$0934e0939605d48c$var$hexWrite","Number","strLen","parsed","parseInt","substr","$0934e0939605d48c$var$blitBuffer","$0934e0939605d48c$var$asciiToBytes","byteArray","$0934e0939605d48c$var$utf16leToBytes","units","hi","toJSON","_arr","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$0934e0939605d48c$var$INVALID_BASE64_RE","leadSurrogate","$8a0a73e6b73fd0c4$export$d622b2ad8d90c771","b64","lens","$8a0a73e6b73fd0c4$var$getLens","validLen","placeHoldersLen","curByte","$0934e0939605d48c$var$base64clean","src","dst","name","alphabet","table","i16","$1c4b86cb67229007$var$isReactNative","navigator","product","$1e8fdbaba1cca440$export$46dec00755c1153b","websocket","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","schema","secure","port","timestampRequests","timestampParam","encodedQuery","ipv6","hostname","path","polling","location","isSSL","protocol","poll","total","doPoll","doWrite","sid","request","assign","req","xhrStatus","pollXhr","$278b35c341751f73$var$re","$278b35c341751f73$var$parts","$278b35c341751f73$export$98e6a39c04603d36","exec","source","host","authority","ipv6uri","pathNames","$278b35c341751f73$var$pathNames","names","queryKey","$278b35c341751f73$var$queryKey","$0","$1","$2","$e4147e052f16e9bd$export$4798917dbf149b79","writeBuffer","transports","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","JSON","parse","resetPingTimeout","sendPacket","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","$fcbdbaa3cd961e27$var$utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","$2820aaddc1388453$exports","$2820aaddc1388453$export$a51d6b395ff4c65a","$2820aaddc1388453$export$a50aceb0e02a00aa","$2820aaddc1388453$export$f9de6ca0bc043724","$865b63e01200baa4$var$withNativeArrayBuffer","$865b63e01200baa4$var$isView","$865b63e01200baa4$var$toString","$865b63e01200baa4$var$withNativeBlob","$865b63e01200baa4$var$withNativeFile","File","$865b63e01200baa4$export$37488ff1135b1696","$2820aaddc1388453$var$RESERVED_EVENTS","PacketType","replacer","encode","EVENT","ACK","$865b63e01200baa4$export$5234c529abdb5610","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","encodeAsString","attachments","stringify","deconstruction","buffers","packetData","pack","$f55c94805f898ea3$var$_deconstructPacket","placeholder","_placeholder","newData","unshift","$2820aaddc1388453$var$isObject","reviver","add","reconstructor","decodeString","isBinaryEvent","$2820aaddc1388453$var$BinaryReconstructor","takeBinaryData","next","payload","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","$f55c94805f898ea3$var$_reconstructPacket","isIndexValid","$e5ed0f2d13e2ffa5$export$af631764ddc44097","$365f59c6fb02b648$var$RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","$365f59c6fb02b648$export$4798917dbf149b79","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","_a","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","$0a06b747f4081c6f$export$2d38012449449c89","ms","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","$84cdc7ed694072f2$export$d0d38e7dec7a1a61","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","Decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","$74cfaa375dcbd11d$var$cache","$74cfaa375dcbd11d$export$841407ceb083bd74","loc","test","href","newConnection","forceNew","multiplex","Manager","Socket","$9a3a59fd4e8a6314$exports","$022b237644207d82$exports","previousId","stampNewId","$022b237644207d82$var$getUniqueId","previous","isSafeInteger","cloneId","$c680aea5536b41c4$exports","$c680aea5536b41c4$var$Message","ADD_ELEMENT","ADD_IMAGE","ADD_ITEM","ADD_SHADOW","ADD_GROUP","RM_ITEM","RM_SHADOW","UD_ITEM","UD_SHADOW","UD_VIEW","RM_ATTRS","SET_ITEMS","SET_ATTRS","SET_IMAGE","SET_RENDER","SET_PARENT","INITIALIZE","LAYOUT","FULL","CLICK","RESIZE","SWIPE","TRACK","TRANSFORM","POINTER","BLUR","IMG_LOAD","DISPATCH","$b0140f97e673c7b5$exports","$b0140f97e673c7b5$var$Item","values","rotation","scale","lockZ","$b0140f97e673c7b5$var$RectangularItem","width","height","Item","View","WamsElement","tagname","WamsImage","$2ddb4406b5710b24$exports","NOP","removeById","item","idx","findIndex","o","$77dc2d94e185a53d$exports","$8a13928bd6cf2429$exports","$8a13928bd6cf2429$var$Point2D","angleTo","point","atan2","averageDistanceTo","points","totalDistanceTo","clone","distanceTo","hypot","divideBy","coefficient","isLeftOf","p0","p1","dl","minus","dp","multiplyBy","rotate","theta","cosTheta","cos","sinTheta","sin","midpoint","sum","pt","map","centroid","radius","curr","contains","winding_number","wn","$6ca1b6f3784b814a$exports","$dc4ea179441b1f14$exports","x1","y1","x2","y2","xx","yy","A","B","C","D","lengthSquared","param","dot","dx","dy","dist","sqrt","$187e1e6ba0cb70c9$exports","distance","$bd2734bd55df0418$exports","$81586d39ed578c8f$require$constants","colours","constants","ROTATE_0","ROTATE_90","PI","ROTATE_180","ROTATE_270","ROTATE_360","NS_WAMS","NS_WAMS_TRACKING","Circle","Oval","radiusX","radiusY","IdStamper","Message","Point2D","Polygon2D","Rectangle","RoundedLine","$81586d39ed578c8f$require$Message","$81586d39ed578c8f$require$NOP","$2d527d3dfbe18544$exports","$c7ae6dd8608f332b$exports","$c7ae6dd8608f332b$var$$17807945cdde5d67$exports","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$exports","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$var$g_id","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$de0d6a332419bf3c$var$Gesture","element","handler","DEFAULTS","isEnabled","state","enableKeys","disableKeys","minInputs","maxInputs","some","move","cancel","evaluateHook","hook","recognize","phase","MAX_VALUE","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$e2125e2e71e37a0c$exports","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$exports","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$exports","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$6c3676f10a43b740$var$Point2D","anglesTo","plus","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$exports","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$CANCEL","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$MOVE","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$be6f0e84320366a7$var$START","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$require$PHASE","CANCEL_EVENTS","KEYBOARD_EVENTS","MOUSE_EVENTS","POINTER_EVENTS","TOUCH_EVENTS","STATE_KEYS","STATE_KEY_STRINGS","CANCEL","END","MOVE","START","PHASE","blur","pointercancel","touchcancel","mouseup","pointerup","touchend","mousemove","pointermove","touchmove","mousedown","pointerdown","touchstart","PHASES","identifier","clientX","clientY","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$0ca7bfe1c074e8ca$var$getEventObject","changedTouches","find","touch","time","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$exports","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$PI_2","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$PI_NVE","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$4559ecf940edc78d$var$setFilter","predicate","Set","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$e2125e2e71e37a0c$require$getPropagationPath","angularDifference","diff","getPropagationPath","composedPath","node","parentNode","setDifference","left","right","has","setFilter","currentData","initialElements","WeakSet","initial","current","startTime","elapsedTime","totalDistance","update","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$exports","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$exports","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$CANCEL","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$END","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$MOVE","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$PHASE","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$require$START","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$symbols","inputs","for","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$639be6fb478a6d5a$var$update_fns","TouchEvent","updateInput","PointerEvent","pointerId","MouseEvent","button","Map","activePoints","clearEndedInputs","delete","getInputsInPhase","filter","getInputsNotInPhase","hasNoInputs","setPointerCapture","releasePointerCapture","e1","warn","updateAllInputs","updateFields","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$CANCEL_EVENTS","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$KEYBOARD_EVENTS","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$MOUSE_EVENTS","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$POINTER_EVENTS","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$TOUCH_EVENTS","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$STATE_KEY_STRINGS","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$PHASE","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$CANCEL","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$END","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$START","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$setDifference","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$require$setFilter","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$b66a0f22c18e3e3d$var$Region","gestures","activeGestures","potentialGestures","activate","eventNames","preferPointer","arbitrate","eventName","capture","passive","handleKeyboardEvent","preventDefault","input","gesture","resetActiveGestures","oldActiveGestures","setActiveGestures","setPotentialGestures","updateActiveGestures","isInitial","pruneActiveGestures","addGesture","style","touchAction","removeGesture","getGesturesByElement","removeGesturesByElement","g","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$cascade","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$smooth","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$Smoothable","final_options","$c7ae6dd8608f332b$var$$17807945cdde5d67$var$$01c3d7b128023e4f$var$smoothingIsApplicable","isRequested","matchMedia","matches","applySmoothing","identity","restart","average","$c7ae6dd8608f332b$var$$edded22326d64913$exports","$c7ae6dd8608f332b$var$$edded22326d64913$require$Gesture","Gesture","Input","PointerData","Region","Smoothable","State","$c7ae6dd8608f332b$var$$edded22326d64913$require$Point2D","$c7ae6dd8608f332b$var$$edded22326d64913$require$Smoothable","outgoing","translation","$c7ae6dd8608f332b$var$$a29eb49c9650e38a$exports","$c7ae6dd8608f332b$var$$a29eb49c9650e38a$require$Gesture","$c7ae6dd8608f332b$var$$a29eb49c9650e38a$require$Smoothable","$c7ae6dd8608f332b$var$$a29eb49c9650e38a$var$Pinch","$c7ae6dd8608f332b$var$$044241a6e313bbcb$exports","$c7ae6dd8608f332b$var$$044241a6e313bbcb$require$Gesture","$c7ae6dd8608f332b$var$$044241a6e313bbcb$require$Point2D","$c7ae6dd8608f332b$var$$044241a6e313bbcb$require$MOVE","$c7ae6dd8608f332b$var$$044241a6e313bbcb$var$Press","originalInputs","tolerance","$c7ae6dd8608f332b$var$$b6747a8030ff7e4d$exports","$c7ae6dd8608f332b$var$$b6747a8030ff7e4d$require$Smoothable","$c7ae6dd8608f332b$var$$5618dc3399c82d06$exports","$c7ae6dd8608f332b$var$$5618dc3399c82d06$require$Gesture","$c7ae6dd8608f332b$var$$5618dc3399c82d06$require$Point2D","$c7ae6dd8608f332b$var$$5618dc3399c82d06$require$Smoothable","$c7ae6dd8608f332b$var$$5618dc3399c82d06$var$Pivotable","pivot","getClientCenter","rect","getBoundingClientRect","top","updatePrevious","dynamicPivot","deadzoneRadius","rv","$c7ae6dd8608f332b$var$$2779699df4dafe8f$exports","$c7ae6dd8608f332b$var$$2779699df4dafe8f$require$angularDifference","$c7ae6dd8608f332b$var$$2779699df4dafe8f$require$Gesture","$c7ae6dd8608f332b$var$$2779699df4dafe8f$require$Smoothable","$c7ae6dd8608f332b$var$$2779699df4dafe8f$var$Rotate","previousAngles","stagedAngles","angle","$c7ae6dd8608f332b$var$$29f6d3783b0fe128$exports","$c7ae6dd8608f332b$var$$29f6d3783b0fe128$require$Gesture","$c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$Swipe","moves","saved","getResult","validate","$c7ae6dd8608f332b$var$$29f6d3783b0fe128$var$PROGRESS_STACK_SIZE","velocity","calc_velocity","direction","calc_angle","vlim","$c7ae6dd8608f332b$var$$5bf1e923ca9fec67$exports","$c7ae6dd8608f332b$var$$5bf1e923ca9fec67$require$angularDifference","$c7ae6dd8608f332b$var$$5bf1e923ca9fec67$require$Smoothable","$c7ae6dd8608f332b$var$$2f0219f585763ab0$exports","$c7ae6dd8608f332b$var$$2f0219f585763ab0$require$Gesture","$c7ae6dd8608f332b$var$$2f0219f585763ab0$require$Point2D","$c7ae6dd8608f332b$var$$2f0219f585763ab0$var$Tap","taps","minDelay","maxDelay","maxRetain","numTaps","elapsed","tdiff","$c7ae6dd8608f332b$var$$13a50dd07826f9eb$require$Gesture","$c7ae6dd8608f332b$var$$13a50dd07826f9eb$var$Track","tracks","phases","Pan","Pinch","Press","Pull","Rotate","Swipe","Swivel","Tap","Track","$2d527d3dfbe18544$require$NOP","$2d527d3dfbe18544$var$Interactor","root","handlers","DEFAULT_HANDLERS","_changes","_resetChanges","_scheduled","addGestures","wheel","region","coalesce","swipe","swivel","tap","track","delta","_emit","transform","ctrlKey","sign","deltaY","$81586d39ed578c8f$var$symbols","attachSocketIoListeners","render","$81586d39ed578c8f$var$ClientController","canvas","view","model","rootElement","eventListeners","eventQueue","renderScheduled","render_fn","resizeCanvasToFillWindow","addElement","addImage","addItem","addShadow","removeItem","removeShadow","updateItem","updateShadow","updateView","removeAttributes","setAttributes","setImage","setRender","setParent","initialize","body","innerHTML","handleCustomEvent","entries","scheduleRender","resize","scheduleFn","$81586d39ed578c8f$require$io","requestAnimationFrame","draw","action","dispatch","iOS","platform","dpr","devicePixelRatio","w","innerWidth","h","innerHeight","resizeToFillWindow","clientScripts","stylesheets","title","backgroundImage","color","useMultiScreenGestures","settings","loadClientScripts","loadStylesheets","viewId","backgroundColor","setUpInteractor","scripts","script","createElement","appendChild","link","rel","head","setUpInputForwarding","eventname","altKey","metaKey","shiftKey","$2671a88abd61b478$exports","$49a6b9c9f3993e79$exports","$49a6b9c9f3993e79$require$Point2D","$49a6b9c9f3993e79$require$WamsElement","querySelector","classList","attributes","tl","translate","parent","$06eb776eda6204d9$exports","$06eb776eda6204d9$require$WamsImage","$06eb776eda6204d9$require$Message","image","save","loaded","drawImage","fillStyle","fillRect","restore","$06eb776eda6204d9$var$createImage","img","Image","dispatchEvent","CustomEvent","$f346ae80a2055480$exports","$f346ae80a2055480$require$Item","$1e33459129279de6$var$$663f930907ca9f24$exports","$1e33459129279de6$var$$9a8fdc9f7382f5d6$exports","$1e33459129279de6$var$$9a8fdc9f7382f5d6$var$TYPES","METHOD","PROPERTY","$1e33459129279de6$var$$9a8fdc9f7382f5d6$var$Atom","inst","$1e33459129279de6$var$$9a8fdc9f7382f5d6$var$atomOf","execute","$1e33459129279de6$var$$9a8fdc9f7382f5d6$var$CanvasAtom","$1e33459129279de6$var$$663f930907ca9f24$var$locals","METHODS","PROPERTIES","$1e33459129279de6$var$$663f930907ca9f24$var$symbols","sequence","fromJSON","$1e33459129279de6$var$$663f930907ca9f24$var$CanvasSequence","$1e33459129279de6$var$$4fabbdeef1f2d4ae$exports","$1e33459129279de6$var$$4fabbdeef1f2d4ae$var$symbols","$f346ae80a2055480$require$CanvasSequence","$36c7439c01b30b99$exports","$36c7439c01b30b99$require$colours","$36c7439c01b30b99$require$View","$36c7439c01b30b99$var$symbols","align","outline","marker","$36c7439c01b30b99$var$ShadowView","globalAlpha","strokeStyle","lineWidth","strokeRect","base","beginPath","moveTo","lineTo","$2671a88abd61b478$require$removeById","$2671a88abd61b478$var$REQUIRED_DATA","items","itemOrder","shadows","_addItem","shadow","getItem","getShadow","removeChild","views","reverse","config","bringItemToTop","el","detail","$8d2ca656dd61d0cd$exports","$8d2ca656dd61d0cd$require$View","$8d2ca656dd61d0cd$var$STATUS_KEYS","$8d2ca656dd61d0cd$var$symbols","drawBackground","drawItems","drawShadows","drawStatus","wipe","$8d2ca656dd61d0cd$var$DEFAULT_CONFIG","$8d2ca656dd61d0cd$var$ClientView","messages","toFixed","ty","setTransform","font","fillText","clearRect","$411b979e0983e126$var$ClientApplication","controller","func","getContext","WAMS"],"version":3,"file":"client.js.map"}